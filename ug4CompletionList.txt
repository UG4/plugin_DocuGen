UG4COMPLETER VERSION 1
class
AMGBaseCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Group <b>AMGBase</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="AMGBaseCPU1.html">AMGBaseCPU1</a> <br><table><tr><td colspan=2><h3>AMGBaseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check2 (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_fsmoothing ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y_cycle (integer , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; basesmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_checkLevel_post_iterations (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer gamma)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_fsmoothing (bool enable)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix_write_path (c_string matrixWritePath)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: set the path where connectionviewer matrices of the levels are written<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_fill_before_base (number fillrate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_levels (integer max_levels)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_nodes_for_base (integer maxNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_min_nodes_on_one_processor (integer minNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_nr_of_preiterations_at_check (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: nr of mg cycles performed before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer nu2)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer nu1)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_one_init (bool b)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; postsmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preiterations_mimum_defect_at_check (number d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: minimum defect for preiterations before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; presmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_interfaces ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AMGBaseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_cycle_type ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>get_fsmoothing ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns f smoothing enabled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_grid_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns grid complexity c_G<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="AMGLevelInformationCPU1.html">AMGLevelInformationCPU1</a> *</td><td class="memItemRight" valign=bottom>get_level_information (integer L)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns information about the level L<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_max_fill_before_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_nodes_for_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_min_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns minNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_postsmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_presmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_operator_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns operator complexity c_A<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_preferred_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns preferredNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_coarse_solver_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent in the coarse solver setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_whole_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent on the whole setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_used_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns used nr of AMG levels<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer nu1)
void set_num_presmooth (integer nu1)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets nr. of presmoothing steps (nu1)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer nu2)
void set_num_postsmooth (integer nu2)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets nr. of postsmoothing steps (nu2)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer gamma)
void set_cycle_type (integer gamma)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets cycle type in multigrid cycle (gamma)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_levels
void
void set_max_levels (integer max_levels)
void set_max_levels (integer max_levels)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets max nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_nodes_for_base
void
void set_max_nodes_for_base (integer maxNrOfNodes)
void set_max_nodes_for_base (integer maxNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets the maximal nr of nodes for base solver<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_min_nodes_on_one_processor
void
void set_min_nodes_on_one_processor (integer minNrOfNodes)
void set_min_nodes_on_one_processor (integer minNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: if the node number on one processor falls below this, agglomerate<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_preferred_nodes_on_one_processor
void
void set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)
void set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_fill_before_base
void
void set_max_fill_before_base (number fillrate)
void set_max_fill_before_base (number fillrate)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets maximal fill rate before base solver is used<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU1> presmoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; presmoother)<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU1> postsmoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; postsmoother)<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU1> basesmoother)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; basesmoother)<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check
bool
bool check (const VectorCPU1x, const VectorCPU1b)
bool check (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: performs a check of convergence on all levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check2
bool
bool check2 (const VectorCPU1x, const VectorCPU1b)
bool check2 (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: performs a check of convergence on all levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_fsmoothing
bool
bool check_fsmoothing ()
bool check_fsmoothing ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_nr_of_preiterations_at_check
void
void set_nr_of_preiterations_at_check (integer i)
void set_nr_of_preiterations_at_check (integer i)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: nr of mg cycles performed before checking<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_preiterations_mimum_defect_at_check
void
void set_preiterations_mimum_defect_at_check (number d)
void set_preiterations_mimum_defect_at_check (number d)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: minimum defect for preiterations before checking<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_matrix_write_path
void
void set_matrix_write_path (c_string matrixWritePath)
void set_matrix_write_path (c_string matrixWritePath)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: set the path where connectionviewer matrices of the levels are written<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_fsmoothing
void
void set_fsmoothing (bool enable)
void set_fsmoothing (bool enable)<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_one_init
void
void set_one_init (bool b)
void set_one_init (bool b)<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_position_provider
void
void set_position_provider (IPositionProvider2dprov)
void set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: needed for connectionviewer output<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_position_provider
void
void set_position_provider (IPositionProvider3dprov)
void set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: needed for connectionviewer output<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
write_interfaces
void
void write_interfaces ()
void write_interfaces ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_checkLevel_post_iterations
void
void set_checkLevel_post_iterations (integer )
void set_checkLevel_post_iterations (integer )<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_Y_cycle
void
void set_Y_cycle (integer , number , number )
void set_Y_cycle (integer , number , number )<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_num_presmooth
integer
integer get_num_presmooth () const
integer get_num_presmooth ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns nr. of presmoothing steps (nu1)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_num_postsmooth
integer
integer get_num_postsmooth () const
integer get_num_postsmooth ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns nr. of postsmoothing steps (nu2)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_cycle_type
integer
integer get_cycle_type () const
integer get_cycle_type ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns cycle type in multigrid cycle (gamma)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_levels
integer
integer get_max_levels () const
integer get_max_levels ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns max nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_used_levels
integer
integer get_used_levels () const
integer get_used_levels ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns used nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_nodes_for_base
integer
integer get_max_nodes_for_base () const
integer get_max_nodes_for_base ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns maximal nr of nodes for base solver<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_min_nodes_on_one_processor
integer
integer get_min_nodes_on_one_processor () const
integer get_min_nodes_on_one_processor ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns minNrOfNodes<br>tooltip: if the node number on one processor falls below this, agglomerate<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_preferred_nodes_on_one_processor
integer
integer get_preferred_nodes_on_one_processor () const
integer get_preferred_nodes_on_one_processor ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns preferredNrOfNodes<br>tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_fill_before_base
number
number get_max_fill_before_base () const
number get_max_fill_before_base ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns maximal fill rate before base solver is used<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_operator_complexity
number
number get_operator_complexity () const
number get_operator_complexity ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns operator complexity c_A<br>tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_grid_complexity
number
number get_grid_complexity () const
number get_grid_complexity ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns grid complexity c_G<br>tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_timing_whole_setup_ms
number
number get_timing_whole_setup_ms () const
number get_timing_whole_setup_ms ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns the time spent on the whole setup in ms<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_timing_coarse_solver_setup_ms
number
number get_timing_coarse_solver_setup_ms () const
number get_timing_coarse_solver_setup_ms ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns the time spent in the coarse solver setup in ms<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_level_information
const AMGLevelInformationCPU1*
const AMGLevelInformationCPU1get_level_information (integer L) const
const <a href="AMGLevelInformationCPU1.html">AMGLevelInformationCPU1</a> *get_level_information (integer L)<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns information about the level L<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_fsmoothing
bool
bool get_fsmoothing () const
bool get_fsmoothing ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns f smoothing enabled<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
AMGBaseCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 IPreconditionerCPU2 
Group <b>AMGBase</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <a href="AMGBaseCPU2.html">AMGBaseCPU2</a> <br><table><tr><td colspan=2><h3>AMGBaseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check (const <a href="VectorCPU2.html">VectorCPU2</a> *x, const <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check2 (const <a href="VectorCPU2.html">VectorCPU2</a> *x, const <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_fsmoothing ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y_cycle (integer , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; basesmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_checkLevel_post_iterations (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer gamma)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_fsmoothing (bool enable)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix_write_path (c_string matrixWritePath)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: set the path where connectionviewer matrices of the levels are written<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_fill_before_base (number fillrate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_levels (integer max_levels)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_nodes_for_base (integer maxNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_min_nodes_on_one_processor (integer minNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_nr_of_preiterations_at_check (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: nr of mg cycles performed before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer nu2)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer nu1)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_one_init (bool b)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; postsmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preiterations_mimum_defect_at_check (number d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: minimum defect for preiterations before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; presmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_interfaces ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AMGBaseCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_cycle_type ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>get_fsmoothing ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns f smoothing enabled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_grid_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns grid complexity c_G<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="AMGLevelInformationCPU2.html">AMGLevelInformationCPU2</a> *</td><td class="memItemRight" valign=bottom>get_level_information (integer L)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns information about the level L<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_max_fill_before_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_nodes_for_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_min_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns minNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_postsmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_presmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_operator_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns operator complexity c_A<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_preferred_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns preferredNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_coarse_solver_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent in the coarse solver setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_whole_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent on the whole setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_used_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns used nr of AMG levels<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer nu1)
void set_num_presmooth (integer nu1)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: sets nr. of presmoothing steps (nu1)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer nu2)
void set_num_postsmooth (integer nu2)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: sets nr. of postsmoothing steps (nu2)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer gamma)
void set_cycle_type (integer gamma)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: sets cycle type in multigrid cycle (gamma)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_levels
void
void set_max_levels (integer max_levels)
void set_max_levels (integer max_levels)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: sets max nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_nodes_for_base
void
void set_max_nodes_for_base (integer maxNrOfNodes)
void set_max_nodes_for_base (integer maxNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: sets the maximal nr of nodes for base solver<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_min_nodes_on_one_processor
void
void set_min_nodes_on_one_processor (integer minNrOfNodes)
void set_min_nodes_on_one_processor (integer minNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: if the node number on one processor falls below this, agglomerate<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_preferred_nodes_on_one_processor
void
void set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)
void set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_fill_before_base
void
void set_max_fill_before_base (number fillrate)
void set_max_fill_before_base (number fillrate)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: sets maximal fill rate before base solver is used<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU2> presmoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; presmoother)<br><br>Member function of class <b>AMGBaseCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU2> postsmoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; postsmoother)<br><br>Member function of class <b>AMGBaseCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU2> basesmoother)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; basesmoother)<br><br>Member function of class <b>AMGBaseCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check
bool
bool check (const VectorCPU2x, const VectorCPU2b)
bool check (const <a href="VectorCPU2.html">VectorCPU2</a> *x, const <a href="VectorCPU2.html">VectorCPU2</a> *b)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: performs a check of convergence on all levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check2
bool
bool check2 (const VectorCPU2x, const VectorCPU2b)
bool check2 (const <a href="VectorCPU2.html">VectorCPU2</a> *x, const <a href="VectorCPU2.html">VectorCPU2</a> *b)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: performs a check of convergence on all levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_fsmoothing
bool
bool check_fsmoothing ()
bool check_fsmoothing ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_nr_of_preiterations_at_check
void
void set_nr_of_preiterations_at_check (integer i)
void set_nr_of_preiterations_at_check (integer i)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: nr of mg cycles performed before checking<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_preiterations_mimum_defect_at_check
void
void set_preiterations_mimum_defect_at_check (number d)
void set_preiterations_mimum_defect_at_check (number d)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: minimum defect for preiterations before checking<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_matrix_write_path
void
void set_matrix_write_path (c_string matrixWritePath)
void set_matrix_write_path (c_string matrixWritePath)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: set the path where connectionviewer matrices of the levels are written<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_fsmoothing
void
void set_fsmoothing (bool enable)
void set_fsmoothing (bool enable)<br><br>Member function of class <b>AMGBaseCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_one_init
void
void set_one_init (bool b)
void set_one_init (bool b)<br><br>Member function of class <b>AMGBaseCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_position_provider
void
void set_position_provider (IPositionProvider2dprov)
void set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: needed for connectionviewer output<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_position_provider
void
void set_position_provider (IPositionProvider3dprov)
void set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)<br><br>Member function of class <b>AMGBaseCPU2</b><br>tooltip: needed for connectionviewer output<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
write_interfaces
void
void write_interfaces ()
void write_interfaces ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_checkLevel_post_iterations
void
void set_checkLevel_post_iterations (integer )
void set_checkLevel_post_iterations (integer )<br><br>Member function of class <b>AMGBaseCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_Y_cycle
void
void set_Y_cycle (integer , number , number )
void set_Y_cycle (integer , number , number )<br><br>Member function of class <b>AMGBaseCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_num_presmooth
integer
integer get_num_presmooth () const
integer get_num_presmooth ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns nr. of presmoothing steps (nu1)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_num_postsmooth
integer
integer get_num_postsmooth () const
integer get_num_postsmooth ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns nr. of postsmoothing steps (nu2)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_cycle_type
integer
integer get_cycle_type () const
integer get_cycle_type ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns cycle type in multigrid cycle (gamma)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_levels
integer
integer get_max_levels () const
integer get_max_levels ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns max nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_used_levels
integer
integer get_used_levels () const
integer get_used_levels ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns used nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_nodes_for_base
integer
integer get_max_nodes_for_base () const
integer get_max_nodes_for_base ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns maximal nr of nodes for base solver<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_min_nodes_on_one_processor
integer
integer get_min_nodes_on_one_processor () const
integer get_min_nodes_on_one_processor ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns minNrOfNodes<br>tooltip: if the node number on one processor falls below this, agglomerate<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_preferred_nodes_on_one_processor
integer
integer get_preferred_nodes_on_one_processor () const
integer get_preferred_nodes_on_one_processor ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns preferredNrOfNodes<br>tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_fill_before_base
number
number get_max_fill_before_base () const
number get_max_fill_before_base ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns maximal fill rate before base solver is used<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_operator_complexity
number
number get_operator_complexity () const
number get_operator_complexity ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns operator complexity c_A<br>tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_grid_complexity
number
number get_grid_complexity () const
number get_grid_complexity ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns grid complexity c_G<br>tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_timing_whole_setup_ms
number
number get_timing_whole_setup_ms () const
number get_timing_whole_setup_ms ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns the time spent on the whole setup in ms<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_timing_coarse_solver_setup_ms
number
number get_timing_coarse_solver_setup_ms () const
number get_timing_coarse_solver_setup_ms ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns the time spent in the coarse solver setup in ms<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_level_information
const AMGLevelInformationCPU2*
const AMGLevelInformationCPU2get_level_information (integer L) const
const <a href="AMGLevelInformationCPU2.html">AMGLevelInformationCPU2</a> *get_level_information (integer L)<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns information about the level L<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_fsmoothing
bool
bool get_fsmoothing () const
bool get_fsmoothing ()<br><br>Member function of class <b>AMGBaseCPU2</b><br>returns f smoothing enabled<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
AMGBaseCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 IPreconditionerCPU3 
Group <b>AMGBase</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <a href="AMGBaseCPU3.html">AMGBaseCPU3</a> <br><table><tr><td colspan=2><h3>AMGBaseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check (const <a href="VectorCPU3.html">VectorCPU3</a> *x, const <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check2 (const <a href="VectorCPU3.html">VectorCPU3</a> *x, const <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_fsmoothing ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y_cycle (integer , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; basesmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_checkLevel_post_iterations (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer gamma)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_fsmoothing (bool enable)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix_write_path (c_string matrixWritePath)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: set the path where connectionviewer matrices of the levels are written<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_fill_before_base (number fillrate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_levels (integer max_levels)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_nodes_for_base (integer maxNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_min_nodes_on_one_processor (integer minNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_nr_of_preiterations_at_check (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: nr of mg cycles performed before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer nu2)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer nu1)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_one_init (bool b)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; postsmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preiterations_mimum_defect_at_check (number d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: minimum defect for preiterations before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; presmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_interfaces ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AMGBaseCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_cycle_type ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>get_fsmoothing ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns f smoothing enabled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_grid_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns grid complexity c_G<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="AMGLevelInformationCPU3.html">AMGLevelInformationCPU3</a> *</td><td class="memItemRight" valign=bottom>get_level_information (integer L)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns information about the level L<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_max_fill_before_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_nodes_for_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_min_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns minNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_postsmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_presmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_operator_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns operator complexity c_A<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_preferred_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns preferredNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_coarse_solver_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent in the coarse solver setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_whole_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent on the whole setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_used_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns used nr of AMG levels<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer nu1)
void set_num_presmooth (integer nu1)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: sets nr. of presmoothing steps (nu1)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer nu2)
void set_num_postsmooth (integer nu2)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: sets nr. of postsmoothing steps (nu2)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer gamma)
void set_cycle_type (integer gamma)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: sets cycle type in multigrid cycle (gamma)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_levels
void
void set_max_levels (integer max_levels)
void set_max_levels (integer max_levels)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: sets max nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_nodes_for_base
void
void set_max_nodes_for_base (integer maxNrOfNodes)
void set_max_nodes_for_base (integer maxNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: sets the maximal nr of nodes for base solver<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_min_nodes_on_one_processor
void
void set_min_nodes_on_one_processor (integer minNrOfNodes)
void set_min_nodes_on_one_processor (integer minNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: if the node number on one processor falls below this, agglomerate<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_preferred_nodes_on_one_processor
void
void set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)
void set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_fill_before_base
void
void set_max_fill_before_base (number fillrate)
void set_max_fill_before_base (number fillrate)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: sets maximal fill rate before base solver is used<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU3> presmoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; presmoother)<br><br>Member function of class <b>AMGBaseCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU3> postsmoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; postsmoother)<br><br>Member function of class <b>AMGBaseCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU3> basesmoother)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; basesmoother)<br><br>Member function of class <b>AMGBaseCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check
bool
bool check (const VectorCPU3x, const VectorCPU3b)
bool check (const <a href="VectorCPU3.html">VectorCPU3</a> *x, const <a href="VectorCPU3.html">VectorCPU3</a> *b)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: performs a check of convergence on all levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check2
bool
bool check2 (const VectorCPU3x, const VectorCPU3b)
bool check2 (const <a href="VectorCPU3.html">VectorCPU3</a> *x, const <a href="VectorCPU3.html">VectorCPU3</a> *b)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: performs a check of convergence on all levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_fsmoothing
bool
bool check_fsmoothing ()
bool check_fsmoothing ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_nr_of_preiterations_at_check
void
void set_nr_of_preiterations_at_check (integer i)
void set_nr_of_preiterations_at_check (integer i)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: nr of mg cycles performed before checking<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_preiterations_mimum_defect_at_check
void
void set_preiterations_mimum_defect_at_check (number d)
void set_preiterations_mimum_defect_at_check (number d)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: minimum defect for preiterations before checking<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_matrix_write_path
void
void set_matrix_write_path (c_string matrixWritePath)
void set_matrix_write_path (c_string matrixWritePath)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: set the path where connectionviewer matrices of the levels are written<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_fsmoothing
void
void set_fsmoothing (bool enable)
void set_fsmoothing (bool enable)<br><br>Member function of class <b>AMGBaseCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_one_init
void
void set_one_init (bool b)
void set_one_init (bool b)<br><br>Member function of class <b>AMGBaseCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_position_provider
void
void set_position_provider (IPositionProvider2dprov)
void set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: needed for connectionviewer output<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_position_provider
void
void set_position_provider (IPositionProvider3dprov)
void set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)<br><br>Member function of class <b>AMGBaseCPU3</b><br>tooltip: needed for connectionviewer output<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
write_interfaces
void
void write_interfaces ()
void write_interfaces ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_checkLevel_post_iterations
void
void set_checkLevel_post_iterations (integer )
void set_checkLevel_post_iterations (integer )<br><br>Member function of class <b>AMGBaseCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_Y_cycle
void
void set_Y_cycle (integer , number , number )
void set_Y_cycle (integer , number , number )<br><br>Member function of class <b>AMGBaseCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_num_presmooth
integer
integer get_num_presmooth () const
integer get_num_presmooth ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns nr. of presmoothing steps (nu1)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_num_postsmooth
integer
integer get_num_postsmooth () const
integer get_num_postsmooth ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns nr. of postsmoothing steps (nu2)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_cycle_type
integer
integer get_cycle_type () const
integer get_cycle_type ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns cycle type in multigrid cycle (gamma)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_levels
integer
integer get_max_levels () const
integer get_max_levels ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns max nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_used_levels
integer
integer get_used_levels () const
integer get_used_levels ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns used nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_nodes_for_base
integer
integer get_max_nodes_for_base () const
integer get_max_nodes_for_base ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns maximal nr of nodes for base solver<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_min_nodes_on_one_processor
integer
integer get_min_nodes_on_one_processor () const
integer get_min_nodes_on_one_processor ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns minNrOfNodes<br>tooltip: if the node number on one processor falls below this, agglomerate<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_preferred_nodes_on_one_processor
integer
integer get_preferred_nodes_on_one_processor () const
integer get_preferred_nodes_on_one_processor ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns preferredNrOfNodes<br>tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_fill_before_base
number
number get_max_fill_before_base () const
number get_max_fill_before_base ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns maximal fill rate before base solver is used<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_operator_complexity
number
number get_operator_complexity () const
number get_operator_complexity ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns operator complexity c_A<br>tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_grid_complexity
number
number get_grid_complexity () const
number get_grid_complexity ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns grid complexity c_G<br>tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_timing_whole_setup_ms
number
number get_timing_whole_setup_ms () const
number get_timing_whole_setup_ms ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns the time spent on the whole setup in ms<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_timing_coarse_solver_setup_ms
number
number get_timing_coarse_solver_setup_ms () const
number get_timing_coarse_solver_setup_ms ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns the time spent in the coarse solver setup in ms<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_level_information
const AMGLevelInformationCPU3*
const AMGLevelInformationCPU3get_level_information (integer L) const
const <a href="AMGLevelInformationCPU3.html">AMGLevelInformationCPU3</a> *get_level_information (integer L)<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns information about the level L<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_fsmoothing
bool
bool get_fsmoothing () const
bool get_fsmoothing ()<br><br>Member function of class <b>AMGBaseCPU3</b><br>returns f smoothing enabled<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
AMGLevelInformationCPU1

Group <b>AMGLevelInformation</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table><tr><td colspan=2><h3>AMGLevelInformationCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_creation_time_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns creation time of this level (in ms)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_fill_in ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros / (nr of nodes)^2<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, sum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz_max ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, maximum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz_min ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, minimum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_interface_elements ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of interface elements (including multiplicites)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, sum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes_max ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, maximum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes_min ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, minimum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>is_valid ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if this is a valid level information<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
get_creation_time_ms
number
number get_creation_time_ms () const
number get_creation_time_ms ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns creation time of this level (in ms)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes
integer
integer get_nr_of_nodes () const
integer get_nr_of_nodes ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of nodes of this level, sum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes_min
integer
integer get_nr_of_nodes_min () const
integer get_nr_of_nodes_min ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of nodes of this level, minimum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes_max
integer
integer get_nr_of_nodes_max () const
integer get_nr_of_nodes_max ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of nodes of this level, maximum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz
integer
integer get_nnz () const
integer get_nnz ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of non-zeros, sum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz_min
integer
integer get_nnz_min () const
integer get_nnz_min ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of non-zeros, minimum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz_max
integer
integer get_nnz_max () const
integer get_nnz_max ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of non-zeros, maximum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_fill_in
number
number get_fill_in () const
number get_fill_in ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of non-zeros / (nr of nodes)^2<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
is_valid
bool
bool is_valid () const
bool is_valid ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns true if this is a valid level information<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_interface_elements
integer
integer get_nr_of_interface_elements () const
integer get_nr_of_interface_elements ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of interface elements (including multiplicites)<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
AMGLevelInformationCPU2

Group <b>AMGLevelInformation</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table><tr><td colspan=2><h3>AMGLevelInformationCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_creation_time_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns creation time of this level (in ms)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_fill_in ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros / (nr of nodes)^2<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, sum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz_max ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, maximum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz_min ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, minimum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_interface_elements ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of interface elements (including multiplicites)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, sum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes_max ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, maximum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes_min ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, minimum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>is_valid ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if this is a valid level information<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
get_creation_time_ms
number
number get_creation_time_ms () const
number get_creation_time_ms ()<br><br>Member function of class <b>AMGLevelInformationCPU2</b><br>returns creation time of this level (in ms)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes
integer
integer get_nr_of_nodes () const
integer get_nr_of_nodes ()<br><br>Member function of class <b>AMGLevelInformationCPU2</b><br>returns nr of nodes of this level, sum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes_min
integer
integer get_nr_of_nodes_min () const
integer get_nr_of_nodes_min ()<br><br>Member function of class <b>AMGLevelInformationCPU2</b><br>returns nr of nodes of this level, minimum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes_max
integer
integer get_nr_of_nodes_max () const
integer get_nr_of_nodes_max ()<br><br>Member function of class <b>AMGLevelInformationCPU2</b><br>returns nr of nodes of this level, maximum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz
integer
integer get_nnz () const
integer get_nnz ()<br><br>Member function of class <b>AMGLevelInformationCPU2</b><br>returns nr of non-zeros, sum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz_min
integer
integer get_nnz_min () const
integer get_nnz_min ()<br><br>Member function of class <b>AMGLevelInformationCPU2</b><br>returns nr of non-zeros, minimum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz_max
integer
integer get_nnz_max () const
integer get_nnz_max ()<br><br>Member function of class <b>AMGLevelInformationCPU2</b><br>returns nr of non-zeros, maximum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_fill_in
number
number get_fill_in () const
number get_fill_in ()<br><br>Member function of class <b>AMGLevelInformationCPU2</b><br>returns nr of non-zeros / (nr of nodes)^2<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
is_valid
bool
bool is_valid () const
bool is_valid ()<br><br>Member function of class <b>AMGLevelInformationCPU2</b><br>returns true if this is a valid level information<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_interface_elements
integer
integer get_nr_of_interface_elements () const
integer get_nr_of_interface_elements ()<br><br>Member function of class <b>AMGLevelInformationCPU2</b><br>returns nr of interface elements (including multiplicites)<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
AMGLevelInformationCPU3

Group <b>AMGLevelInformation</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table><tr><td colspan=2><h3>AMGLevelInformationCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_creation_time_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns creation time of this level (in ms)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_fill_in ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros / (nr of nodes)^2<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, sum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz_max ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, maximum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz_min ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, minimum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_interface_elements ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of interface elements (including multiplicites)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, sum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes_max ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, maximum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes_min ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, minimum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>is_valid ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if this is a valid level information<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
get_creation_time_ms
number
number get_creation_time_ms () const
number get_creation_time_ms ()<br><br>Member function of class <b>AMGLevelInformationCPU3</b><br>returns creation time of this level (in ms)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes
integer
integer get_nr_of_nodes () const
integer get_nr_of_nodes ()<br><br>Member function of class <b>AMGLevelInformationCPU3</b><br>returns nr of nodes of this level, sum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes_min
integer
integer get_nr_of_nodes_min () const
integer get_nr_of_nodes_min ()<br><br>Member function of class <b>AMGLevelInformationCPU3</b><br>returns nr of nodes of this level, minimum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes_max
integer
integer get_nr_of_nodes_max () const
integer get_nr_of_nodes_max ()<br><br>Member function of class <b>AMGLevelInformationCPU3</b><br>returns nr of nodes of this level, maximum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz
integer
integer get_nnz () const
integer get_nnz ()<br><br>Member function of class <b>AMGLevelInformationCPU3</b><br>returns nr of non-zeros, sum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz_min
integer
integer get_nnz_min () const
integer get_nnz_min ()<br><br>Member function of class <b>AMGLevelInformationCPU3</b><br>returns nr of non-zeros, minimum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz_max
integer
integer get_nnz_max () const
integer get_nnz_max ()<br><br>Member function of class <b>AMGLevelInformationCPU3</b><br>returns nr of non-zeros, maximum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_fill_in
number
number get_fill_in () const
number get_fill_in ()<br><br>Member function of class <b>AMGLevelInformationCPU3</b><br>returns nr of non-zeros / (nr of nodes)^2<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
is_valid
bool
bool is_valid () const
bool is_valid ()<br><br>Member function of class <b>AMGLevelInformationCPU3</b><br>returns true if this is a valid level information<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_interface_elements
integer
integer get_nr_of_interface_elements () const
integer get_nr_of_interface_elements ()<br><br>Member function of class <b>AMGLevelInformationCPU3</b><br>returns nr of interface elements (including multiplicites)<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
AMPA

class has constructor. <br><table><tr><td colspan=2><h3>AMPA Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AMPA (number dt [ms])</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AMPA Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next (integer no. of parameters, number time [ms], number transmitter [nM], number membrane potential [mV], number IC calcium concentration [mM], number EC calcium concentration [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next_step (number time [ms], number transmitter [nM], number membrane potential [mV], number IC calcium concentration [mM], number EC calcicum concentration [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AMPA Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_e ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_e<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_i ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_i<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_current ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns current<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_density ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns density<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_dt ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dt<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_flux ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns flux<br/></td></tr><tr><td><br></td></tr></table>
constructor
AMPA

AMPA (number dt [ms])
AMPA (number dt [ms])<br>Constructor of class <b>AMPA</b><br>group: <b>ug4/Neuro/</b>
memberfunction
next
bool
bool next (integer no. of parameters, number time [ms], number transmitter [nM], number membrane potential [mV], number IC calcium concentration [mM], number EC calcium concentration [mM])
bool next (integer no. of parameters, number time [ms], number transmitter [nM], number membrane potential [mV], number IC calcium concentration [mM], number EC calcium concentration [mM])<br><br>Member function of class <b>AMPA</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
next_step
bool
bool next_step (number time [ms], number transmitter [nM], number membrane potential [mV], number IC calcium concentration [mM], number EC calcicum concentration [mM])
bool next_step (number time [ms], number transmitter [nM], number membrane potential [mV], number IC calcium concentration [mM], number EC calcicum concentration [mM])<br><br>Member function of class <b>AMPA</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
get_flux
number
number get_flux () const
number get_flux ()<br><br>Member function of class <b>AMPA</b><br>returns flux<br>group: <b>ug4/Neuro/</b>
memberfunction
get_current
number
number get_current () const
number get_current ()<br><br>Member function of class <b>AMPA</b><br>returns current<br>group: <b>ug4/Neuro/</b>
memberfunction
get_dt
number
number get_dt () const
number get_dt ()<br><br>Member function of class <b>AMPA</b><br>returns dt<br>group: <b>ug4/Neuro/</b>
memberfunction
get_density
number
number get_density () const
number get_density ()<br><br>Member function of class <b>AMPA</b><br>returns density<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_i
number
number dCadCa_i () const
number dCadCa_i ()<br><br>Member function of class <b>AMPA</b><br>returns dCa/dCa_i<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_e
number
number dCadCa_e () const
number dCadCa_e ()<br><br>Member function of class <b>AMPA</b><br>returns dCa/dCa_e<br>group: <b>ug4/Neuro/</b>
;
class
AMPA2

class has constructor. <br><table><tr><td colspan=2><h3>AMPA2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AMPA2 (number dt [ms], number Erev [mV], number g_max [pS], number tdecay [ms], number trise [ms], number density)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AMPA2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next (integer no. of parameters, number time [ms], number membrane potential [mV])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next_step (number time [ms], number membrane potential [mV])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AMPA2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_e ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_e<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_i ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_i<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_current ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns current<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_density ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns density<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_dt ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dt<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_flux ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns flux<br/></td></tr><tr><td><br></td></tr></table>
constructor
AMPA2

AMPA2 (number dt [ms], number Erev [mV], number g_max [pS], number tdecay [ms], number trise [ms], number density)
AMPA2 (number dt [ms], number Erev [mV], number g_max [pS], number tdecay [ms], number trise [ms], number density)<br>Constructor of class <b>AMPA2</b><br>group: <b>ug4/Neuro/</b>
memberfunction
next
bool
bool next (integer no. of parameters, number time [ms], number membrane potential [mV])
bool next (integer no. of parameters, number time [ms], number membrane potential [mV])<br><br>Member function of class <b>AMPA2</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
next_step
bool
bool next_step (number time [ms], number membrane potential [mV])
bool next_step (number time [ms], number membrane potential [mV])<br><br>Member function of class <b>AMPA2</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
get_flux
number
number get_flux () const
number get_flux ()<br><br>Member function of class <b>AMPA2</b><br>returns flux<br>group: <b>ug4/Neuro/</b>
memberfunction
get_current
number
number get_current () const
number get_current ()<br><br>Member function of class <b>AMPA2</b><br>returns current<br>group: <b>ug4/Neuro/</b>
memberfunction
get_dt
number
number get_dt () const
number get_dt ()<br><br>Member function of class <b>AMPA2</b><br>returns dt<br>group: <b>ug4/Neuro/</b>
memberfunction
get_density
number
number get_density () const
number get_density ()<br><br>Member function of class <b>AMPA2</b><br>returns density<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_i
number
number dCadCa_i () const
number dCadCa_i ()<br><br>Member function of class <b>AMPA2</b><br>returns dCa/dCa_i<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_e
number
number dCadCa_e () const
number dCadCa_e ()<br><br>Member function of class <b>AMPA2</b><br>returns dCa/dCa_e<br>group: <b>ug4/Neuro/</b>
;
class
AdaptiveRegularRefiner_MultiGrid
IRefiner HangingNodeRefiner_MultiGrid 
class has constructor. <br>Inheritance: <a href="IRefiner.html">IRefiner</a> <a href="HangingNodeRefiner_MultiGrid.html">HangingNodeRefiner_MultiGrid</a> <a href="AdaptiveRegularRefiner_MultiGrid.html">AdaptiveRegularRefiner_MultiGrid</a> <br><table><tr><td colspan=2><h3>AdaptiveRegularRefiner_MultiGrid Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AdaptiveRegularRefiner_MultiGrid ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AdaptiveRegularRefiner_MultiGrid Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>HangingNodeRefiner_MultiGrid Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>HangingNodeRefiner_MultiGrid ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited HangingNodeRefiner_MultiGrid Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IRefiner Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_marks ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>coarsen ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>refine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>save_marks_to_file (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_adjusted_marks_debug_filename (c_string )</td></tr><tr><td><br></td></tr></table>
constructor
AdaptiveRegularRefiner_MultiGrid

AdaptiveRegularRefiner_MultiGrid ()
AdaptiveRegularRefiner_MultiGrid ()<br>Constructor of class <b>AdaptiveRegularRefiner_MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
assign_grid
void
void assign_grid (MultiGrid)
void assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)<br><br>Member function of class <b>AdaptiveRegularRefiner_MultiGrid</b><br>group: <b>/ug4/Grid</b>
;
class
AlgebraType

class has constructor. <br><table><tr><td colspan=2><h3>AlgebraType Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AlgebraType (c_string Type, integer Blocksize)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AlgebraType (c_string Type  (Blocksize=variable))</td></tr><tr><td><br></td></tr></table>
constructor
AlgebraType

AlgebraType (c_string Type, integer Blocksize)
AlgebraType (c_string Type, integer Blocksize)<br>Constructor of class <b>AlgebraType</b><br>group: <b>/ug4/Init</b>
constructor
AlgebraType

AlgebraType (c_string Type  (Blocksize=variable))
AlgebraType (c_string Type  (Blocksize=variable))<br>Constructor of class <b>AlgebraType</b><br>group: <b>/ug4/Init</b>
;
class
ApproximationSpace1d
IApproximationSpace 
Group <b>ApproximationSpace</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IApproximationSpace.html">IApproximationSpace</a> <a href="ApproximationSpace1d.html">ApproximationSpace1d</a> <br><table><tr><td colspan=2><h3>ApproximationSpace1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ApproximationSpace1d (SmartPtr&lt;<a href="Domain1d.html">Domain1d</a>&gt; Domain)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ApproximationSpace1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="Domain1d.html">Domain1d</a>&gt; </td><td class="memItemRight" valign=bottom>domain ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ApproximationSpace1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="SurfaceView.html">SurfaceView</a>&gt; </td><td class="memItemRight" valign=bottom>surface_view ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IApproximationSpace Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type, integer Order, c_string Subsets)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type, integer Order)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>defragment ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_surfaces ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_top_surface ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited IApproximationSpace Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>dim (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>c_string </td><td class="memItemRight" valign=bottom>name (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_fct ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_layout_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_layout_statistic ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_local_dof_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_local_dof_statistic ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic ()</td></tr><tr><td><br></td></tr></table>
constructor
ApproximationSpace1d

ApproximationSpace1d (SmartPtr<Domain1d> Domain)
ApproximationSpace1d (SmartPtr&lt;<a href="Domain1d.html">Domain1d</a>&gt; Domain)<br>Constructor of class <b>ApproximationSpace1d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
domain
SmartPtr<Domain1d>
SmartPtr<Domain1d> domain ()
SmartPtr&lt;<a href="Domain1d.html">Domain1d</a>&gt; domain ()<br><br>Member function of class <b>ApproximationSpace1d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
surface_view
ConstSmartPtr<SurfaceView>
const SmartPtr<SurfaceView> surface_view () const
const SmartPtr&lt;<a href="SurfaceView.html">SurfaceView</a>&gt; surface_view ()<br><br>Member function of class <b>ApproximationSpace1d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
ApproximationSpace2d
IApproximationSpace 
Group <b>ApproximationSpace</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IApproximationSpace.html">IApproximationSpace</a> <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> <br><table><tr><td colspan=2><h3>ApproximationSpace2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ApproximationSpace2d (SmartPtr&lt;<a href="Domain2d.html">Domain2d</a>&gt; Domain)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ApproximationSpace2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="Domain2d.html">Domain2d</a>&gt; </td><td class="memItemRight" valign=bottom>domain ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ApproximationSpace2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="SurfaceView.html">SurfaceView</a>&gt; </td><td class="memItemRight" valign=bottom>surface_view ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IApproximationSpace Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type, integer Order, c_string Subsets)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type, integer Order)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>defragment ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_surfaces ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_top_surface ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited IApproximationSpace Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>dim (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>c_string </td><td class="memItemRight" valign=bottom>name (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_fct ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_layout_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_layout_statistic ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_local_dof_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_local_dof_statistic ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic ()</td></tr><tr><td><br></td></tr></table>
constructor
ApproximationSpace2d

ApproximationSpace2d (SmartPtr<Domain2d> Domain)
ApproximationSpace2d (SmartPtr&lt;<a href="Domain2d.html">Domain2d</a>&gt; Domain)<br>Constructor of class <b>ApproximationSpace2d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
domain
SmartPtr<Domain2d>
SmartPtr<Domain2d> domain ()
SmartPtr&lt;<a href="Domain2d.html">Domain2d</a>&gt; domain ()<br><br>Member function of class <b>ApproximationSpace2d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
surface_view
ConstSmartPtr<SurfaceView>
const SmartPtr<SurfaceView> surface_view () const
const SmartPtr&lt;<a href="SurfaceView.html">SurfaceView</a>&gt; surface_view ()<br><br>Member function of class <b>ApproximationSpace2d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
ApproximationSpace3d
IApproximationSpace 
Group <b>ApproximationSpace</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IApproximationSpace.html">IApproximationSpace</a> <a href="ApproximationSpace3d.html">ApproximationSpace3d</a> <br><table><tr><td colspan=2><h3>ApproximationSpace3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ApproximationSpace3d (SmartPtr&lt;<a href="Domain3d.html">Domain3d</a>&gt; Domain)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ApproximationSpace3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="Domain3d.html">Domain3d</a>&gt; </td><td class="memItemRight" valign=bottom>domain ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ApproximationSpace3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="SurfaceView.html">SurfaceView</a>&gt; </td><td class="memItemRight" valign=bottom>surface_view ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IApproximationSpace Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type, integer Order, c_string Subsets)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type, integer Order)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>defragment ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_surfaces ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_top_surface ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited IApproximationSpace Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>dim (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>c_string </td><td class="memItemRight" valign=bottom>name (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_fct ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_layout_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_layout_statistic ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_local_dof_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_local_dof_statistic ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic ()</td></tr><tr><td><br></td></tr></table>
constructor
ApproximationSpace3d

ApproximationSpace3d (SmartPtr<Domain3d> Domain)
ApproximationSpace3d (SmartPtr&lt;<a href="Domain3d.html">Domain3d</a>&gt; Domain)<br>Constructor of class <b>ApproximationSpace3d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
domain
SmartPtr<Domain3d>
SmartPtr<Domain3d> domain ()
SmartPtr&lt;<a href="Domain3d.html">Domain3d</a>&gt; domain ()<br><br>Member function of class <b>ApproximationSpace3d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
surface_view
ConstSmartPtr<SurfaceView>
const SmartPtr<SurfaceView> surface_view () const
const SmartPtr&lt;<a href="SurfaceView.html">SurfaceView</a>&gt; surface_view ()<br><br>Member function of class <b>ApproximationSpace3d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
AssembledLinearOperatorCPU1
MatrixCPU1 IOperatorCPU1 ILinearOperatorCPU1 MatrixOperatorCPU1 
Group <b>AssembledLinearOperator</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="MatrixCPU1.html">MatrixCPU1</a> <a href="IOperatorCPU1.html">IOperatorCPU1</a> <a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a> <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> <a href="AssembledLinearOperatorCPU1.html">AssembledLinearOperatorCPU1</a> <br><table><tr><td colspan=2><h3>AssembledLinearOperatorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledLinearOperatorCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledLinearOperatorCPU1 (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Assembling Routine)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AssembledLinearOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_op_and_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_values (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (const <a href="GridLevel.html">GridLevel</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixOperatorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixOperatorCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited MatrixCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
AssembledLinearOperatorCPU1

AssembledLinearOperatorCPU1 ()
AssembledLinearOperatorCPU1 ()<br>Constructor of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
constructor
AssembledLinearOperatorCPU1

AssembledLinearOperatorCPU1 (IAssembleCPU1Assembling Routine)
AssembledLinearOperatorCPU1 (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Assembling Routine)<br>Constructor of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU1)
void set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_level
void
void set_level (const GridLevel)
void set_level (const <a href="GridLevel.html">GridLevel</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_dirichlet_values
void
void set_dirichlet_values (VectorCPU1)
void set_dirichlet_values (<a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
memberfunction
init_op_and_rhs
void
void init_op_and_rhs (VectorCPU1)
void init_op_and_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
;
class
AssembledLinearOperatorCPU2
MatrixCPU2 IOperatorCPU2 ILinearOperatorCPU2 MatrixOperatorCPU2 
Group <b>AssembledLinearOperator</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="MatrixCPU2.html">MatrixCPU2</a> <a href="IOperatorCPU2.html">IOperatorCPU2</a> <a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a> <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> <a href="AssembledLinearOperatorCPU2.html">AssembledLinearOperatorCPU2</a> <br><table><tr><td colspan=2><h3>AssembledLinearOperatorCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledLinearOperatorCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledLinearOperatorCPU2 (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *Assembling Routine)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AssembledLinearOperatorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_op_and_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_values (<a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (const <a href="GridLevel.html">GridLevel</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixOperatorCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixOperatorCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *, const <a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited MatrixCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
AssembledLinearOperatorCPU2

AssembledLinearOperatorCPU2 ()
AssembledLinearOperatorCPU2 ()<br>Constructor of class <b>AssembledLinearOperatorCPU2</b><br>group: <b>/ug4/Discretization</b>
constructor
AssembledLinearOperatorCPU2

AssembledLinearOperatorCPU2 (IAssembleCPU2Assembling Routine)
AssembledLinearOperatorCPU2 (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *Assembling Routine)<br>Constructor of class <b>AssembledLinearOperatorCPU2</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU2)
void set_discretization (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU2</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_level
void
void set_level (const GridLevel)
void set_level (const <a href="GridLevel.html">GridLevel</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU2</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_dirichlet_values
void
void set_dirichlet_values (VectorCPU2)
void set_dirichlet_values (<a href="VectorCPU2.html">VectorCPU2</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU2</b><br>group: <b>/ug4/Discretization</b>
memberfunction
init_op_and_rhs
void
void init_op_and_rhs (VectorCPU2)
void init_op_and_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU2</b><br>group: <b>/ug4/Discretization</b>
;
class
AssembledLinearOperatorCPU3
MatrixCPU3 IOperatorCPU3 ILinearOperatorCPU3 MatrixOperatorCPU3 
Group <b>AssembledLinearOperator</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="MatrixCPU3.html">MatrixCPU3</a> <a href="IOperatorCPU3.html">IOperatorCPU3</a> <a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a> <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> <a href="AssembledLinearOperatorCPU3.html">AssembledLinearOperatorCPU3</a> <br><table><tr><td colspan=2><h3>AssembledLinearOperatorCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledLinearOperatorCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledLinearOperatorCPU3 (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *Assembling Routine)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AssembledLinearOperatorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_op_and_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_values (<a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (const <a href="GridLevel.html">GridLevel</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixOperatorCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixOperatorCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *, const <a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited MatrixCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
AssembledLinearOperatorCPU3

AssembledLinearOperatorCPU3 ()
AssembledLinearOperatorCPU3 ()<br>Constructor of class <b>AssembledLinearOperatorCPU3</b><br>group: <b>/ug4/Discretization</b>
constructor
AssembledLinearOperatorCPU3

AssembledLinearOperatorCPU3 (IAssembleCPU3Assembling Routine)
AssembledLinearOperatorCPU3 (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *Assembling Routine)<br>Constructor of class <b>AssembledLinearOperatorCPU3</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU3)
void set_discretization (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU3</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_level
void
void set_level (const GridLevel)
void set_level (const <a href="GridLevel.html">GridLevel</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU3</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_dirichlet_values
void
void set_dirichlet_values (VectorCPU3)
void set_dirichlet_values (<a href="VectorCPU3.html">VectorCPU3</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU3</b><br>group: <b>/ug4/Discretization</b>
memberfunction
init_op_and_rhs
void
void init_op_and_rhs (VectorCPU3)
void init_op_and_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU3</b><br>group: <b>/ug4/Discretization</b>
;
class
AssembledOperatorCPU1
IOperatorCPU1 
Group <b>AssembledOperator</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IOperatorCPU1.html">IOperatorCPU1</a> <a href="AssembledOperatorCPU1.html">AssembledOperatorCPU1</a> <br><table><tr><td colspan=2><h3>AssembledOperatorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledOperatorCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledOperatorCPU1 (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Assembling Routine)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AssembledOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *ass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (const <a href="GridLevel.html">GridLevel</a> *gridLevel)</td></tr><tr><td><br></td></tr></table>
constructor
AssembledOperatorCPU1

AssembledOperatorCPU1 ()
AssembledOperatorCPU1 ()<br>Constructor of class <b>AssembledOperatorCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
constructor
AssembledOperatorCPU1

AssembledOperatorCPU1 (IAssembleCPU1Assembling Routine)
AssembledOperatorCPU1 (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Assembling Routine)<br>Constructor of class <b>AssembledOperatorCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU1ass)
void set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *ass)<br><br>Member function of class <b>AssembledOperatorCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_level
void
void set_level (const GridLevelgridLevel)
void set_level (const <a href="GridLevel.html">GridLevel</a> *gridLevel)<br><br>Member function of class <b>AssembledOperatorCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>AssembledOperatorCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
AssembledOperatorCPU2
IOperatorCPU2 
Group <b>AssembledOperator</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IOperatorCPU2.html">IOperatorCPU2</a> <a href="AssembledOperatorCPU2.html">AssembledOperatorCPU2</a> <br><table><tr><td colspan=2><h3>AssembledOperatorCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledOperatorCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledOperatorCPU2 (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *Assembling Routine)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AssembledOperatorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *ass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (const <a href="GridLevel.html">GridLevel</a> *gridLevel)</td></tr><tr><td><br></td></tr></table>
constructor
AssembledOperatorCPU2

AssembledOperatorCPU2 ()
AssembledOperatorCPU2 ()<br>Constructor of class <b>AssembledOperatorCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
constructor
AssembledOperatorCPU2

AssembledOperatorCPU2 (IAssembleCPU2Assembling Routine)
AssembledOperatorCPU2 (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *Assembling Routine)<br>Constructor of class <b>AssembledOperatorCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU2ass)
void set_discretization (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *ass)<br><br>Member function of class <b>AssembledOperatorCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_level
void
void set_level (const GridLevelgridLevel)
void set_level (const <a href="GridLevel.html">GridLevel</a> *gridLevel)<br><br>Member function of class <b>AssembledOperatorCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>AssembledOperatorCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
AssembledOperatorCPU3
IOperatorCPU3 
Group <b>AssembledOperator</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IOperatorCPU3.html">IOperatorCPU3</a> <a href="AssembledOperatorCPU3.html">AssembledOperatorCPU3</a> <br><table><tr><td colspan=2><h3>AssembledOperatorCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledOperatorCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledOperatorCPU3 (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *Assembling Routine)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AssembledOperatorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *ass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (const <a href="GridLevel.html">GridLevel</a> *gridLevel)</td></tr><tr><td><br></td></tr></table>
constructor
AssembledOperatorCPU3

AssembledOperatorCPU3 ()
AssembledOperatorCPU3 ()<br>Constructor of class <b>AssembledOperatorCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
constructor
AssembledOperatorCPU3

AssembledOperatorCPU3 (IAssembleCPU3Assembling Routine)
AssembledOperatorCPU3 (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *Assembling Routine)<br>Constructor of class <b>AssembledOperatorCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU3ass)
void set_discretization (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *ass)<br><br>Member function of class <b>AssembledOperatorCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_level
void
void set_level (const GridLevelgridLevel)
void set_level (const <a href="GridLevel.html">GridLevel</a> *gridLevel)<br><br>Member function of class <b>AssembledOperatorCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>AssembledOperatorCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
AverageComponent1dCPU1
ITransferPostProcessCPU1 
Group <b>AverageComponent</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a> <a href="AverageComponent1dCPU1.html">AverageComponent1dCPU1</a> <br><table><tr><td colspan=2><h3>AverageComponent1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AverageComponent1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space, c_string Components)</td></tr><tr><td><br></td></tr></table>
constructor
AverageComponent1dCPU1

AverageComponent1dCPU1 (SmartPtr<ApproximationSpace1d> Approximation Space, c_string Components)
AverageComponent1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space, c_string Components)<br>Constructor of class <b>AverageComponent1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
AverageComponent1dCPU2
ITransferPostProcessCPU2 
Group <b>AverageComponent</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a> <a href="AverageComponent1dCPU2.html">AverageComponent1dCPU2</a> <br><table><tr><td colspan=2><h3>AverageComponent1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AverageComponent1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space, c_string Components)</td></tr><tr><td><br></td></tr></table>
constructor
AverageComponent1dCPU2

AverageComponent1dCPU2 (SmartPtr<ApproximationSpace1d> Approximation Space, c_string Components)
AverageComponent1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space, c_string Components)<br>Constructor of class <b>AverageComponent1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
AverageComponent1dCPU3
ITransferPostProcessCPU3 
Group <b>AverageComponent</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a> <a href="AverageComponent1dCPU3.html">AverageComponent1dCPU3</a> <br><table><tr><td colspan=2><h3>AverageComponent1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AverageComponent1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space, c_string Components)</td></tr><tr><td><br></td></tr></table>
constructor
AverageComponent1dCPU3

AverageComponent1dCPU3 (SmartPtr<ApproximationSpace1d> Approximation Space, c_string Components)
AverageComponent1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space, c_string Components)<br>Constructor of class <b>AverageComponent1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
AverageComponent2dCPU1
ITransferPostProcessCPU1 
Group <b>AverageComponent</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a> <a href="AverageComponent2dCPU1.html">AverageComponent2dCPU1</a> <br><table><tr><td colspan=2><h3>AverageComponent2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AverageComponent2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space, c_string Components)</td></tr><tr><td><br></td></tr></table>
constructor
AverageComponent2dCPU1

AverageComponent2dCPU1 (SmartPtr<ApproximationSpace2d> Approximation Space, c_string Components)
AverageComponent2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space, c_string Components)<br>Constructor of class <b>AverageComponent2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
AverageComponent2dCPU2
ITransferPostProcessCPU2 
Group <b>AverageComponent</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a> <a href="AverageComponent2dCPU2.html">AverageComponent2dCPU2</a> <br><table><tr><td colspan=2><h3>AverageComponent2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AverageComponent2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space, c_string Components)</td></tr><tr><td><br></td></tr></table>
constructor
AverageComponent2dCPU2

AverageComponent2dCPU2 (SmartPtr<ApproximationSpace2d> Approximation Space, c_string Components)
AverageComponent2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space, c_string Components)<br>Constructor of class <b>AverageComponent2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
AverageComponent2dCPU3
ITransferPostProcessCPU3 
Group <b>AverageComponent</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a> <a href="AverageComponent2dCPU3.html">AverageComponent2dCPU3</a> <br><table><tr><td colspan=2><h3>AverageComponent2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AverageComponent2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space, c_string Components)</td></tr><tr><td><br></td></tr></table>
constructor
AverageComponent2dCPU3

AverageComponent2dCPU3 (SmartPtr<ApproximationSpace2d> Approximation Space, c_string Components)
AverageComponent2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space, c_string Components)<br>Constructor of class <b>AverageComponent2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
AverageComponent3dCPU1
ITransferPostProcessCPU1 
Group <b>AverageComponent</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a> <a href="AverageComponent3dCPU1.html">AverageComponent3dCPU1</a> <br><table><tr><td colspan=2><h3>AverageComponent3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AverageComponent3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space, c_string Components)</td></tr><tr><td><br></td></tr></table>
constructor
AverageComponent3dCPU1

AverageComponent3dCPU1 (SmartPtr<ApproximationSpace3d> Approximation Space, c_string Components)
AverageComponent3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space, c_string Components)<br>Constructor of class <b>AverageComponent3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
AverageComponent3dCPU2
ITransferPostProcessCPU2 
Group <b>AverageComponent</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a> <a href="AverageComponent3dCPU2.html">AverageComponent3dCPU2</a> <br><table><tr><td colspan=2><h3>AverageComponent3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AverageComponent3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space, c_string Components)</td></tr><tr><td><br></td></tr></table>
constructor
AverageComponent3dCPU2

AverageComponent3dCPU2 (SmartPtr<ApproximationSpace3d> Approximation Space, c_string Components)
AverageComponent3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space, c_string Components)<br>Constructor of class <b>AverageComponent3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
AverageComponent3dCPU3
ITransferPostProcessCPU3 
Group <b>AverageComponent</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a> <a href="AverageComponent3dCPU3.html">AverageComponent3dCPU3</a> <br><table><tr><td colspan=2><h3>AverageComponent3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AverageComponent3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space, c_string Components)</td></tr><tr><td><br></td></tr></table>
constructor
AverageComponent3dCPU3

AverageComponent3dCPU3 (SmartPtr<ApproximationSpace3d> Approximation Space, c_string Components)
AverageComponent3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space, c_string Components)<br>Constructor of class <b>AverageComponent3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
BDFCPU1
IAssembleCPU1 ITimeDiscretizationCPU1 
Group <b>BDF</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="ITimeDiscretizationCPU1.html">ITimeDiscretizationCPU1</a> <a href="BDFCPU1.html">BDFCPU1</a> <br><table><tr><td colspan=2><h3>BDFCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BDFCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BDFCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, integer Order)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>BDFCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_order (integer Order)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ITimeDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ITimeDiscretizationCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
BDFCPU1

BDFCPU1 (SmartPtr<IDomainDiscretizationCPU1> Domain Discretization)
BDFCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization)<br>Constructor of class <b>BDFCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
BDFCPU1

BDFCPU1 (SmartPtr<IDomainDiscretizationCPU1> Domain Discretization, integer Order)
BDFCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, integer Order)<br>Constructor of class <b>BDFCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_order
void
void set_order (integer Order)
void set_order (integer Order)<br><br>Member function of class <b>BDFCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
BDFCPU2
IAssembleCPU2 ITimeDiscretizationCPU2 
Group <b>BDF</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IAssembleCPU2.html">IAssembleCPU2</a> <a href="ITimeDiscretizationCPU2.html">ITimeDiscretizationCPU2</a> <a href="BDFCPU2.html">BDFCPU2</a> <br><table><tr><td colspan=2><h3>BDFCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BDFCPU2 (SmartPtr&lt;<a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a>&gt; Domain Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BDFCPU2 (SmartPtr&lt;<a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a>&gt; Domain Discretization, integer Order)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>BDFCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_order (integer Order)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ITimeDiscretizationCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ITimeDiscretizationCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU2.html">VectorCPU2</a> *d(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *J(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *M, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
BDFCPU2

BDFCPU2 (SmartPtr<IDomainDiscretizationCPU2> Domain Discretization)
BDFCPU2 (SmartPtr&lt;<a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a>&gt; Domain Discretization)<br>Constructor of class <b>BDFCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
BDFCPU2

BDFCPU2 (SmartPtr<IDomainDiscretizationCPU2> Domain Discretization, integer Order)
BDFCPU2 (SmartPtr&lt;<a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a>&gt; Domain Discretization, integer Order)<br>Constructor of class <b>BDFCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_order
void
void set_order (integer Order)
void set_order (integer Order)<br><br>Member function of class <b>BDFCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
BDFCPU3
IAssembleCPU3 ITimeDiscretizationCPU3 
Group <b>BDF</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IAssembleCPU3.html">IAssembleCPU3</a> <a href="ITimeDiscretizationCPU3.html">ITimeDiscretizationCPU3</a> <a href="BDFCPU3.html">BDFCPU3</a> <br><table><tr><td colspan=2><h3>BDFCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BDFCPU3 (SmartPtr&lt;<a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a>&gt; Domain Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BDFCPU3 (SmartPtr&lt;<a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a>&gt; Domain Discretization, integer Order)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>BDFCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_order (integer Order)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ITimeDiscretizationCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ITimeDiscretizationCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU3.html">VectorCPU3</a> *d(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *J(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *M, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
BDFCPU3

BDFCPU3 (SmartPtr<IDomainDiscretizationCPU3> Domain Discretization)
BDFCPU3 (SmartPtr&lt;<a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a>&gt; Domain Discretization)<br>Constructor of class <b>BDFCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
BDFCPU3

BDFCPU3 (SmartPtr<IDomainDiscretizationCPU3> Domain Discretization, integer Order)
BDFCPU3 (SmartPtr&lt;<a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a>&gt; Domain Discretization, integer Order)<br>Constructor of class <b>BDFCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_order
void
void set_order (integer Order)
void set_order (integer Order)<br><br>Member function of class <b>BDFCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
BackwardGaussSeidelCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Group <b>BackwardGaussSeidel</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="BackwardGaussSeidelCPU1.html">BackwardGaussSeidelCPU1</a> <br><table><tr><td colspan=2><h3>BackwardGaussSeidelCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BackwardGaussSeidelCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
BackwardGaussSeidelCPU1

BackwardGaussSeidelCPU1 ()
BackwardGaussSeidelCPU1 ()<br>Constructor of class <b>BackwardGaussSeidelCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
BackwardGaussSeidelCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 IPreconditionerCPU2 
Group <b>BackwardGaussSeidel</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <a href="BackwardGaussSeidelCPU2.html">BackwardGaussSeidelCPU2</a> <br><table><tr><td colspan=2><h3>BackwardGaussSeidelCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BackwardGaussSeidelCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
BackwardGaussSeidelCPU2

BackwardGaussSeidelCPU2 ()
BackwardGaussSeidelCPU2 ()<br>Constructor of class <b>BackwardGaussSeidelCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
BackwardGaussSeidelCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 IPreconditionerCPU3 
Group <b>BackwardGaussSeidel</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <a href="BackwardGaussSeidelCPU3.html">BackwardGaussSeidelCPU3</a> <br><table><tr><td colspan=2><h3>BackwardGaussSeidelCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BackwardGaussSeidelCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
BackwardGaussSeidelCPU3

BackwardGaussSeidelCPU3 ()
BackwardGaussSeidelCPU3 ()<br>Constructor of class <b>BackwardGaussSeidelCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
BiCGStabCPU1
VectorDebugWritingObjectCPU1 ILinearOperatorInverseCPU1 IPreconditionedLinearOperatorInverseCPU1 
Group <b>BiCGStab</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IPreconditionedLinearOperatorInverseCPU1.html">IPreconditionedLinearOperatorInverseCPU1</a> <a href="BiCGStabCPU1.html">BiCGStabCPU1</a> <br><table><tr><td colspan=2><h3>BiCGStabCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BiCGStabCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
BiCGStabCPU1

BiCGStabCPU1 ()
BiCGStabCPU1 ()<br>Constructor of class <b>BiCGStabCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
BiCGStabCPU2
VectorDebugWritingObjectCPU2 ILinearOperatorInverseCPU2 IPreconditionedLinearOperatorInverseCPU2 
Group <b>BiCGStab</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a> <a href="IPreconditionedLinearOperatorInverseCPU2.html">IPreconditionedLinearOperatorInverseCPU2</a> <a href="BiCGStabCPU2.html">BiCGStabCPU2</a> <br><table><tr><td colspan=2><h3>BiCGStabCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BiCGStabCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *u, const <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU2.html">VectorCPU2</a> *u, <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
BiCGStabCPU2

BiCGStabCPU2 ()
BiCGStabCPU2 ()<br>Constructor of class <b>BiCGStabCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
BiCGStabCPU3
VectorDebugWritingObjectCPU3 ILinearOperatorInverseCPU3 IPreconditionedLinearOperatorInverseCPU3 
Group <b>BiCGStab</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a> <a href="IPreconditionedLinearOperatorInverseCPU3.html">IPreconditionedLinearOperatorInverseCPU3</a> <a href="BiCGStabCPU3.html">BiCGStabCPU3</a> <br><table><tr><td colspan=2><h3>BiCGStabCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BiCGStabCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *u, const <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU3.html">VectorCPU3</a> *u, <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
BiCGStabCPU3

BiCGStabCPU3 ()
BiCGStabCPU3 ()<br>Constructor of class <b>BiCGStabCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
CGCPU1
VectorDebugWritingObjectCPU1 ILinearOperatorInverseCPU1 IPreconditionedLinearOperatorInverseCPU1 
Group <b>CG</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Conjugate Gradient<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IPreconditionedLinearOperatorInverseCPU1.html">IPreconditionedLinearOperatorInverseCPU1</a> <a href="CGCPU1.html">CGCPU1</a> <br><table><tr><td colspan=2><h3>CGCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CGCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
CGCPU1

CGCPU1 ()
CGCPU1 ()<br>Constructor of class <b>CGCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
CGCPU2
VectorDebugWritingObjectCPU2 ILinearOperatorInverseCPU2 IPreconditionedLinearOperatorInverseCPU2 
Group <b>CG</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Conjugate Gradient<br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a> <a href="IPreconditionedLinearOperatorInverseCPU2.html">IPreconditionedLinearOperatorInverseCPU2</a> <a href="CGCPU2.html">CGCPU2</a> <br><table><tr><td colspan=2><h3>CGCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CGCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *u, const <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU2.html">VectorCPU2</a> *u, <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
CGCPU2

CGCPU2 ()
CGCPU2 ()<br>Constructor of class <b>CGCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
CGCPU3
VectorDebugWritingObjectCPU3 ILinearOperatorInverseCPU3 IPreconditionedLinearOperatorInverseCPU3 
Group <b>CG</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Conjugate Gradient<br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a> <a href="IPreconditionedLinearOperatorInverseCPU3.html">IPreconditionedLinearOperatorInverseCPU3</a> <a href="CGCPU3.html">CGCPU3</a> <br><table><tr><td colspan=2><h3>CGCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CGCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *u, const <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU3.html">VectorCPU3</a> *u, <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
CGCPU3

CGCPU3 ()
CGCPU3 ()<br>Constructor of class <b>CGCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
ComponentWiseConvergenceCheckCPU1
IConvergenceCheckCPU1 
Group <b>ComponentWiseConvergenceCheck</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="ComponentWiseConvergenceCheckCPU1.html">ComponentWiseConvergenceCheckCPU1</a> <br><table><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ComponentWiseConvergenceCheckCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ComponentWiseConvergenceCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_function_defects (c_string Special  Defects for the functions to be treated different)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_function_numbers (c_string Numbers of the functions with different convergence rates)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (number Minimum Defect)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_number_systems (number Number of Equations)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (number Relative Reduction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>previous_defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
ComponentWiseConvergenceCheckCPU1

ComponentWiseConvergenceCheckCPU1 ()
ComponentWiseConvergenceCheckCPU1 ()<br>Constructor of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
constructor
ComponentWiseConvergenceCheckCPU1

ComponentWiseConvergenceCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )
ComponentWiseConvergenceCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )<br>Constructor of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (number Minimum Defect)
void set_minimum_defect (number Minimum Defect)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (number Relative Reduction)
void set_reduction (number Relative Reduction)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_number_systems
void
void set_number_systems (number Number of Equations)
void set_number_systems (number Number of Equations)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_function_numbers
void
void set_function_numbers (c_string Numbers of the functions with different convergence rates)
void set_function_numbers (c_string Numbers of the functions with different convergence rates)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_function_defects
void
void set_function_defects (c_string Special  Defects for the functions to be treated different)
void set_function_defects (c_string Special  Defects for the functions to be treated different)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction<br>group: <b>ug4//Biogas</b>
memberfunction
previous_defect
number
number previous_defect () const
number previous_defect ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
;
class
ComponentWiseConvergenceCheckCPU2
IConvergenceCheckCPU2 
Group <b>ComponentWiseConvergenceCheck</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a> <a href="ComponentWiseConvergenceCheckCPU2.html">ComponentWiseConvergenceCheckCPU2</a> <br><table><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ComponentWiseConvergenceCheckCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ComponentWiseConvergenceCheckCPU2 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_function_defects (c_string Special  Defects for the functions to be treated different)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_function_numbers (c_string Numbers of the functions with different convergence rates)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (number Minimum Defect)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_number_systems (number Number of Equations)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (number Relative Reduction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>previous_defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
ComponentWiseConvergenceCheckCPU2

ComponentWiseConvergenceCheckCPU2 ()
ComponentWiseConvergenceCheckCPU2 ()<br>Constructor of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
constructor
ComponentWiseConvergenceCheckCPU2

ComponentWiseConvergenceCheckCPU2 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )
ComponentWiseConvergenceCheckCPU2 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )<br>Constructor of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (number Minimum Defect)
void set_minimum_defect (number Minimum Defect)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (number Relative Reduction)
void set_reduction (number Relative Reduction)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_number_systems
void
void set_number_systems (number Number of Equations)
void set_number_systems (number Number of Equations)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_function_numbers
void
void set_function_numbers (c_string Numbers of the functions with different convergence rates)
void set_function_numbers (c_string Numbers of the functions with different convergence rates)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_function_defects
void
void set_function_defects (c_string Special  Defects for the functions to be treated different)
void set_function_defects (c_string Special  Defects for the functions to be treated different)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>returns reduction<br>tooltip: returns the current relative reduction<br>group: <b>ug4//Biogas</b>
memberfunction
previous_defect
number
number previous_defect () const
number previous_defect ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU2</b><br>group: <b>ug4//Biogas</b>
;
class
ComponentWiseConvergenceCheckCPU3
IConvergenceCheckCPU3 
Group <b>ComponentWiseConvergenceCheck</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a> <a href="ComponentWiseConvergenceCheckCPU3.html">ComponentWiseConvergenceCheckCPU3</a> <br><table><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ComponentWiseConvergenceCheckCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ComponentWiseConvergenceCheckCPU3 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_function_defects (c_string Special  Defects for the functions to be treated different)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_function_numbers (c_string Numbers of the functions with different convergence rates)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (number Minimum Defect)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_number_systems (number Number of Equations)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (number Relative Reduction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>previous_defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
ComponentWiseConvergenceCheckCPU3

ComponentWiseConvergenceCheckCPU3 ()
ComponentWiseConvergenceCheckCPU3 ()<br>Constructor of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
constructor
ComponentWiseConvergenceCheckCPU3

ComponentWiseConvergenceCheckCPU3 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )
ComponentWiseConvergenceCheckCPU3 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )<br>Constructor of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (number Minimum Defect)
void set_minimum_defect (number Minimum Defect)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (number Relative Reduction)
void set_reduction (number Relative Reduction)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_number_systems
void
void set_number_systems (number Number of Equations)
void set_number_systems (number Number of Equations)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_function_numbers
void
void set_function_numbers (c_string Numbers of the functions with different convergence rates)
void set_function_numbers (c_string Numbers of the functions with different convergence rates)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_function_defects
void
void set_function_defects (c_string Special  Defects for the functions to be treated different)
void set_function_defects (c_string Special  Defects for the functions to be treated different)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>returns reduction<br>tooltip: returns the current relative reduction<br>group: <b>ug4//Biogas</b>
memberfunction
previous_defect
number
number previous_defect () const
number previous_defect ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU3</b><br>group: <b>ug4//Biogas</b>
;
class
CompositeConvCheck1dCPU1
IConvergenceCheckCPU1 
Group <b>CompositeConvCheck</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="CompositeConvCheck1dCPU1.html">CompositeConvCheck1dCPU1</a> <br><table><tr><td colspan=2><h3>CompositeConvCheck1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheck1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck1dCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheck1dCPU1

CompositeConvCheck1dCPU1 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
CompositeConvCheck1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheck1dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheck1dCPU1</b><br>group: <b>/ug4</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheck1dCPU1</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>/ug4</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheck1dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheck1dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheck1dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheck1dCPU1</b><br>group: <b>/ug4</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheck1dCPU1</b><br>group: <b>/ug4</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheck1dCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheck1dCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheck1dCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>/ug4</b>
;
class
CompositeConvCheck1dCPU2
IConvergenceCheckCPU2 
Group <b>CompositeConvCheck</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a> <a href="CompositeConvCheck1dCPU2.html">CompositeConvCheck1dCPU2</a> <br><table><tr><td colspan=2><h3>CompositeConvCheck1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheck1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck1dCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheck1dCPU2

CompositeConvCheck1dCPU2 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
CompositeConvCheck1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheck1dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheck1dCPU2</b><br>group: <b>/ug4</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheck1dCPU2</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>/ug4</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheck1dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheck1dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheck1dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheck1dCPU2</b><br>group: <b>/ug4</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheck1dCPU2</b><br>group: <b>/ug4</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheck1dCPU2</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheck1dCPU2</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheck1dCPU2</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>/ug4</b>
;
class
CompositeConvCheck1dCPU3
IConvergenceCheckCPU3 
Group <b>CompositeConvCheck</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a> <a href="CompositeConvCheck1dCPU3.html">CompositeConvCheck1dCPU3</a> <br><table><tr><td colspan=2><h3>CompositeConvCheck1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheck1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck1dCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheck1dCPU3

CompositeConvCheck1dCPU3 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
CompositeConvCheck1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheck1dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheck1dCPU3</b><br>group: <b>/ug4</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheck1dCPU3</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>/ug4</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheck1dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheck1dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheck1dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheck1dCPU3</b><br>group: <b>/ug4</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheck1dCPU3</b><br>group: <b>/ug4</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheck1dCPU3</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheck1dCPU3</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheck1dCPU3</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>/ug4</b>
;
class
CompositeConvCheck2dCPU1
IConvergenceCheckCPU1 
Group <b>CompositeConvCheck</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="CompositeConvCheck2dCPU1.html">CompositeConvCheck2dCPU1</a> <br><table><tr><td colspan=2><h3>CompositeConvCheck2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheck2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck2dCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheck2dCPU1

CompositeConvCheck2dCPU1 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
CompositeConvCheck2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>/ug4</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>/ug4</b>
;
class
CompositeConvCheck2dCPU2
IConvergenceCheckCPU2 
Group <b>CompositeConvCheck</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a> <a href="CompositeConvCheck2dCPU2.html">CompositeConvCheck2dCPU2</a> <br><table><tr><td colspan=2><h3>CompositeConvCheck2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheck2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck2dCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheck2dCPU2

CompositeConvCheck2dCPU2 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
CompositeConvCheck2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheck2dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheck2dCPU2</b><br>group: <b>/ug4</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheck2dCPU2</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>/ug4</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheck2dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheck2dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheck2dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheck2dCPU2</b><br>group: <b>/ug4</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheck2dCPU2</b><br>group: <b>/ug4</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheck2dCPU2</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheck2dCPU2</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheck2dCPU2</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>/ug4</b>
;
class
CompositeConvCheck2dCPU3
IConvergenceCheckCPU3 
Group <b>CompositeConvCheck</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a> <a href="CompositeConvCheck2dCPU3.html">CompositeConvCheck2dCPU3</a> <br><table><tr><td colspan=2><h3>CompositeConvCheck2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheck2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck2dCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheck2dCPU3

CompositeConvCheck2dCPU3 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
CompositeConvCheck2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheck2dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheck2dCPU3</b><br>group: <b>/ug4</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheck2dCPU3</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>/ug4</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheck2dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheck2dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheck2dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheck2dCPU3</b><br>group: <b>/ug4</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheck2dCPU3</b><br>group: <b>/ug4</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheck2dCPU3</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheck2dCPU3</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheck2dCPU3</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>/ug4</b>
;
class
CompositeConvCheck3dCPU1
IConvergenceCheckCPU1 
Group <b>CompositeConvCheck</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="CompositeConvCheck3dCPU1.html">CompositeConvCheck3dCPU1</a> <br><table><tr><td colspan=2><h3>CompositeConvCheck3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheck3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck3dCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheck3dCPU1

CompositeConvCheck3dCPU1 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
CompositeConvCheck3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheck3dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheck3dCPU1</b><br>group: <b>/ug4</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheck3dCPU1</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>/ug4</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheck3dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheck3dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheck3dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheck3dCPU1</b><br>group: <b>/ug4</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheck3dCPU1</b><br>group: <b>/ug4</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheck3dCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheck3dCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheck3dCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>/ug4</b>
;
class
CompositeConvCheck3dCPU2
IConvergenceCheckCPU2 
Group <b>CompositeConvCheck</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a> <a href="CompositeConvCheck3dCPU2.html">CompositeConvCheck3dCPU2</a> <br><table><tr><td colspan=2><h3>CompositeConvCheck3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheck3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck3dCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheck3dCPU2

CompositeConvCheck3dCPU2 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
CompositeConvCheck3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheck3dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheck3dCPU2</b><br>group: <b>/ug4</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheck3dCPU2</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>/ug4</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheck3dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheck3dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheck3dCPU2</b><br>group: <b>/ug4</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheck3dCPU2</b><br>group: <b>/ug4</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheck3dCPU2</b><br>group: <b>/ug4</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheck3dCPU2</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheck3dCPU2</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheck3dCPU2</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>/ug4</b>
;
class
CompositeConvCheck3dCPU3
IConvergenceCheckCPU3 
Group <b>CompositeConvCheck</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a> <a href="CompositeConvCheck3dCPU3.html">CompositeConvCheck3dCPU3</a> <br><table><tr><td colspan=2><h3>CompositeConvCheck3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheck3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck3dCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheck3dCPU3

CompositeConvCheck3dCPU3 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
CompositeConvCheck3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheck3dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheck3dCPU3</b><br>group: <b>/ug4</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheck3dCPU3</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>/ug4</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheck3dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheck3dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheck3dCPU3</b><br>group: <b>/ug4</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheck3dCPU3</b><br>group: <b>/ug4</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheck3dCPU3</b><br>group: <b>/ug4</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheck3dCPU3</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheck3dCPU3</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheck3dCPU3</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>/ug4</b>
;
class
CompositeConvCheckBiogas1dCPU1
IConvergenceCheckCPU1 
Group <b>CompositeConvCheckBiogas</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="CompositeConvCheckBiogas1dCPU1.html">CompositeConvCheckBiogas1dCPU1</a> <br><table><tr><td colspan=2><h3>CompositeConvCheckBiogas1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheckBiogas1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas1dCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheckBiogas1dCPU1

CompositeConvCheckBiogas1dCPU1 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
CompositeConvCheckBiogas1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheckBiogas1dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU1</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>ug4//Biogas</b>
;
class
CompositeConvCheckBiogas1dCPU2
IConvergenceCheckCPU2 
Group <b>CompositeConvCheckBiogas</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a> <a href="CompositeConvCheckBiogas1dCPU2.html">CompositeConvCheckBiogas1dCPU2</a> <br><table><tr><td colspan=2><h3>CompositeConvCheckBiogas1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheckBiogas1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas1dCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheckBiogas1dCPU2

CompositeConvCheckBiogas1dCPU2 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
CompositeConvCheckBiogas1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheckBiogas1dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU2</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU2</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU2</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU2</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>ug4//Biogas</b>
;
class
CompositeConvCheckBiogas1dCPU3
IConvergenceCheckCPU3 
Group <b>CompositeConvCheckBiogas</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a> <a href="CompositeConvCheckBiogas1dCPU3.html">CompositeConvCheckBiogas1dCPU3</a> <br><table><tr><td colspan=2><h3>CompositeConvCheckBiogas1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheckBiogas1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas1dCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheckBiogas1dCPU3

CompositeConvCheckBiogas1dCPU3 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
CompositeConvCheckBiogas1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheckBiogas1dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU3</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU3</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU3</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas1dCPU3</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>ug4//Biogas</b>
;
class
CompositeConvCheckBiogas2dCPU1
IConvergenceCheckCPU1 
Group <b>CompositeConvCheckBiogas</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="CompositeConvCheckBiogas2dCPU1.html">CompositeConvCheckBiogas2dCPU1</a> <br><table><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheckBiogas2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheckBiogas2dCPU1

CompositeConvCheckBiogas2dCPU1 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
CompositeConvCheckBiogas2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>ug4//Biogas</b>
;
class
CompositeConvCheckBiogas2dCPU2
IConvergenceCheckCPU2 
Group <b>CompositeConvCheckBiogas</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a> <a href="CompositeConvCheckBiogas2dCPU2.html">CompositeConvCheckBiogas2dCPU2</a> <br><table><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheckBiogas2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheckBiogas2dCPU2

CompositeConvCheckBiogas2dCPU2 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
CompositeConvCheckBiogas2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheckBiogas2dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU2</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU2</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU2</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU2</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>ug4//Biogas</b>
;
class
CompositeConvCheckBiogas2dCPU3
IConvergenceCheckCPU3 
Group <b>CompositeConvCheckBiogas</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a> <a href="CompositeConvCheckBiogas2dCPU3.html">CompositeConvCheckBiogas2dCPU3</a> <br><table><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheckBiogas2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheckBiogas2dCPU3

CompositeConvCheckBiogas2dCPU3 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
CompositeConvCheckBiogas2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheckBiogas2dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU3</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU3</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU3</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU3</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>ug4//Biogas</b>
;
class
CompositeConvCheckBiogas3dCPU1
IConvergenceCheckCPU1 
Group <b>CompositeConvCheckBiogas</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="CompositeConvCheckBiogas3dCPU1.html">CompositeConvCheckBiogas3dCPU1</a> <br><table><tr><td colspan=2><h3>CompositeConvCheckBiogas3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheckBiogas3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas3dCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheckBiogas3dCPU1

CompositeConvCheckBiogas3dCPU1 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
CompositeConvCheckBiogas3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheckBiogas3dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU1</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>ug4//Biogas</b>
;
class
CompositeConvCheckBiogas3dCPU2
IConvergenceCheckCPU2 
Group <b>CompositeConvCheckBiogas</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a> <a href="CompositeConvCheckBiogas3dCPU2.html">CompositeConvCheckBiogas3dCPU2</a> <br><table><tr><td colspan=2><h3>CompositeConvCheckBiogas3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheckBiogas3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas3dCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheckBiogas3dCPU2

CompositeConvCheckBiogas3dCPU2 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
CompositeConvCheckBiogas3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheckBiogas3dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU2</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU2</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU2</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU2</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU2</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>ug4//Biogas</b>
;
class
CompositeConvCheckBiogas3dCPU3
IConvergenceCheckCPU3 
Group <b>CompositeConvCheckBiogas</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a> <a href="CompositeConvCheckBiogas3dCPU3.html">CompositeConvCheckBiogas3dCPU3</a> <br><table><tr><td colspan=2><h3>CompositeConvCheckBiogas3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheckBiogas3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas3dCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheckBiogas3dCPU3

CompositeConvCheckBiogas3dCPU3 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
CompositeConvCheckBiogas3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheckBiogas3dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU3</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU3</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU3</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU3</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas3dCPU3</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>ug4//Biogas</b>
;
class
Concliquid2P1d
IUserData UserNumber1d DependentUserDataNumber1d DataLinkerNumber1d 
Group <b>Concliquid2P</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <a href="DataLinkerNumber1d.html">DataLinkerNumber1d</a> <a href="Concliquid2P1d.html">Concliquid2P1d</a> <br><table><tr><td colspan=2><h3>Concliquid2P1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Concliquid2P1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Concliquid2P1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Concliquid2P1d

Concliquid2P1d ()
Concliquid2P1d ()<br>Constructor of class <b>Concliquid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Concliquid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber1d> )
void set_phi (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Concliquid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Concliquid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber1d> )
void set_rho (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Concliquid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (number )
void set_omega (number )<br><br>Member function of class <b>Concliquid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (SmartPtr<UserNumber1d> )
void set_omega (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Concliquid2P1d</b><br>group: <b>ug4//Biogas</b>
;
class
Concliquid2P2d
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Group <b>Concliquid2P</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="Concliquid2P2d.html">Concliquid2P2d</a> <br><table><tr><td colspan=2><h3>Concliquid2P2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Concliquid2P2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Concliquid2P2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Concliquid2P2d

Concliquid2P2d ()
Concliquid2P2d ()<br>Constructor of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber2d> )
void set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber2d> )
void set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (number )
void set_omega (number )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (SmartPtr<UserNumber2d> )
void set_omega (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
;
class
Concliquid2P3d
IUserData UserNumber3d DependentUserDataNumber3d DataLinkerNumber3d 
Group <b>Concliquid2P</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <a href="DataLinkerNumber3d.html">DataLinkerNumber3d</a> <a href="Concliquid2P3d.html">Concliquid2P3d</a> <br><table><tr><td colspan=2><h3>Concliquid2P3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Concliquid2P3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Concliquid2P3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Concliquid2P3d

Concliquid2P3d ()
Concliquid2P3d ()<br>Constructor of class <b>Concliquid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Concliquid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber3d> )
void set_phi (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Concliquid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Concliquid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber3d> )
void set_rho (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Concliquid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (number )
void set_omega (number )<br><br>Member function of class <b>Concliquid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (SmartPtr<UserNumber3d> )
void set_omega (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Concliquid2P3d</b><br>group: <b>ug4//Biogas</b>
;
class
Concsolid2P1d
IUserData UserNumber1d DependentUserDataNumber1d DataLinkerNumber1d 
Group <b>Concsolid2P</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <a href="DataLinkerNumber1d.html">DataLinkerNumber1d</a> <a href="Concsolid2P1d.html">Concsolid2P1d</a> <br><table><tr><td colspan=2><h3>Concsolid2P1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Concsolid2P1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Concsolid2P1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Concsolid2P1d

Concsolid2P1d ()
Concsolid2P1d ()<br>Constructor of class <b>Concsolid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Concsolid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber1d> )
void set_phi (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Concsolid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Concsolid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber1d> )
void set_rho (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Concsolid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (number )
void set_omega (number )<br><br>Member function of class <b>Concsolid2P1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (SmartPtr<UserNumber1d> )
void set_omega (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Concsolid2P1d</b><br>group: <b>ug4//Biogas</b>
;
class
Concsolid2P2d
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Group <b>Concsolid2P</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="Concsolid2P2d.html">Concsolid2P2d</a> <br><table><tr><td colspan=2><h3>Concsolid2P2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Concsolid2P2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Concsolid2P2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Concsolid2P2d

Concsolid2P2d ()
Concsolid2P2d ()<br>Constructor of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber2d> )
void set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber2d> )
void set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (number )
void set_omega (number )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (SmartPtr<UserNumber2d> )
void set_omega (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
;
class
Concsolid2P3d
IUserData UserNumber3d DependentUserDataNumber3d DataLinkerNumber3d 
Group <b>Concsolid2P</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <a href="DataLinkerNumber3d.html">DataLinkerNumber3d</a> <a href="Concsolid2P3d.html">Concsolid2P3d</a> <br><table><tr><td colspan=2><h3>Concsolid2P3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Concsolid2P3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Concsolid2P3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Concsolid2P3d

Concsolid2P3d ()
Concsolid2P3d ()<br>Constructor of class <b>Concsolid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Concsolid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber3d> )
void set_phi (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Concsolid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Concsolid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber3d> )
void set_rho (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Concsolid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (number )
void set_omega (number )<br><br>Member function of class <b>Concsolid2P3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (SmartPtr<UserNumber3d> )
void set_omega (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Concsolid2P3d</b><br>group: <b>ug4//Biogas</b>
;
class
CondUserMatrix1d
IUserData 
Group <b>CondUserMatrix</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserMatrix1d.html">CondUserMatrix1d</a> <br><table></table>
;
class
CondUserMatrix2d
IUserData 
Group <b>CondUserMatrix</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserMatrix2d.html">CondUserMatrix2d</a> <br><table></table>
;
class
CondUserMatrix3d
IUserData 
Group <b>CondUserMatrix</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserMatrix3d.html">CondUserMatrix3d</a> <br><table></table>
;
class
CondUserNumber1d
IUserData 
Group <b>CondUserNumber</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserNumber1d.html">CondUserNumber1d</a> <br><table></table>
;
class
CondUserNumber2d
IUserData 
Group <b>CondUserNumber</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserNumber2d.html">CondUserNumber2d</a> <br><table></table>
;
class
CondUserNumber3d
IUserData 
Group <b>CondUserNumber</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserNumber3d.html">CondUserNumber3d</a> <br><table></table>
;
class
CondUserTensor41d
IUserData 
Group <b>CondUserTensor4</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserTensor41d.html">CondUserTensor41d</a> <br><table></table>
;
class
CondUserTensor42d
IUserData 
Group <b>CondUserTensor4</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserTensor42d.html">CondUserTensor42d</a> <br><table></table>
;
class
CondUserTensor43d
IUserData 
Group <b>CondUserTensor4</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserTensor43d.html">CondUserTensor43d</a> <br><table></table>
;
class
CondUserVector1d
IUserData 
Group <b>CondUserVector</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserVector1d.html">CondUserVector1d</a> <br><table></table>
;
class
CondUserVector2d
IUserData 
Group <b>CondUserVector</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserVector2d.html">CondUserVector2d</a> <br><table></table>
;
class
CondUserVector3d
IUserData 
Group <b>CondUserVector</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserVector3d.html">CondUserVector3d</a> <br><table></table>
;
class
ConstUserMatrix1d
IUserData UserMatrix1d 
Group <b>ConstUserMatrix</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix1d.html">UserMatrix1d</a> <a href="ConstUserMatrix1d.html">ConstUserMatrix1d</a> <br><table><tr><td colspan=2><h3>ConstUserMatrix1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserMatrix1d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserMatrix1d (number Diagonal Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserMatrix1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_all_entries (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diag_tensor (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_entry (integer , integer , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserMatrix1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserMatrix1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserMatrix1d

ConstUserMatrix1d ()
ConstUserMatrix1d ()<br>Constructor of class <b>ConstUserMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserMatrix1d

ConstUserMatrix1d (number Diagonal Value)
ConstUserMatrix1d (number Diagonal Value)<br>Constructor of class <b>ConstUserMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_diag_tensor
void
void set_diag_tensor (number )
void set_diag_tensor (number )<br><br>Member function of class <b>ConstUserMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_all_entries
void
void set_all_entries (number )
void set_all_entries (number )<br><br>Member function of class <b>ConstUserMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_entry
void
void set_entry (integer , integer , number )
void set_entry (integer , integer , number )<br><br>Member function of class <b>ConstUserMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserMatrix2d
IUserData UserMatrix2d 
Group <b>ConstUserMatrix</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix2d.html">UserMatrix2d</a> <a href="ConstUserMatrix2d.html">ConstUserMatrix2d</a> <br><table><tr><td colspan=2><h3>ConstUserMatrix2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserMatrix2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserMatrix2d (number Diagonal Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserMatrix2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_all_entries (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diag_tensor (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_entry (integer , integer , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserMatrix2d

ConstUserMatrix2d ()
ConstUserMatrix2d ()<br>Constructor of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserMatrix2d

ConstUserMatrix2d (number Diagonal Value)
ConstUserMatrix2d (number Diagonal Value)<br>Constructor of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_diag_tensor
void
void set_diag_tensor (number )
void set_diag_tensor (number )<br><br>Member function of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_all_entries
void
void set_all_entries (number )
void set_all_entries (number )<br><br>Member function of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_entry
void
void set_entry (integer , integer , number )
void set_entry (integer , integer , number )<br><br>Member function of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserMatrix3d
IUserData UserMatrix3d 
Group <b>ConstUserMatrix</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix3d.html">UserMatrix3d</a> <a href="ConstUserMatrix3d.html">ConstUserMatrix3d</a> <br><table><tr><td colspan=2><h3>ConstUserMatrix3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserMatrix3d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserMatrix3d (number Diagonal Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserMatrix3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_all_entries (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diag_tensor (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_entry (integer , integer , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserMatrix3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserMatrix3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserMatrix3d

ConstUserMatrix3d ()
ConstUserMatrix3d ()<br>Constructor of class <b>ConstUserMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserMatrix3d

ConstUserMatrix3d (number Diagonal Value)
ConstUserMatrix3d (number Diagonal Value)<br>Constructor of class <b>ConstUserMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_diag_tensor
void
void set_diag_tensor (number )
void set_diag_tensor (number )<br><br>Member function of class <b>ConstUserMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_all_entries
void
void set_all_entries (number )
void set_all_entries (number )<br><br>Member function of class <b>ConstUserMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_entry
void
void set_entry (integer , integer , number )
void set_entry (integer , integer , number )<br><br>Member function of class <b>ConstUserMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserNumber1d
IUserData UserNumber1d 
Group <b>ConstUserNumber</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="ConstUserNumber1d.html">ConstUserNumber1d</a> <br><table><tr><td colspan=2><h3>ConstUserNumber1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserNumber1d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserNumber1d (number Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserNumber1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set (number Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserNumber1d

ConstUserNumber1d ()
ConstUserNumber1d ()<br>Constructor of class <b>ConstUserNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserNumber1d

ConstUserNumber1d (number Value)
ConstUserNumber1d (number Value)<br>Constructor of class <b>ConstUserNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set
void
void set (number Value)
void set (number Value)<br><br>Member function of class <b>ConstUserNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserNumber2d
IUserData UserNumber2d 
Group <b>ConstUserNumber</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="ConstUserNumber2d.html">ConstUserNumber2d</a> <br><table><tr><td colspan=2><h3>ConstUserNumber2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserNumber2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserNumber2d (number Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserNumber2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set (number Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserNumber2d

ConstUserNumber2d ()
ConstUserNumber2d ()<br>Constructor of class <b>ConstUserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserNumber2d

ConstUserNumber2d (number Value)
ConstUserNumber2d (number Value)<br>Constructor of class <b>ConstUserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set
void
void set (number Value)
void set (number Value)<br><br>Member function of class <b>ConstUserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserNumber3d
IUserData UserNumber3d 
Group <b>ConstUserNumber</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="ConstUserNumber3d.html">ConstUserNumber3d</a> <br><table><tr><td colspan=2><h3>ConstUserNumber3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserNumber3d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserNumber3d (number Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserNumber3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set (number Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserNumber3d

ConstUserNumber3d ()
ConstUserNumber3d ()<br>Constructor of class <b>ConstUserNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserNumber3d

ConstUserNumber3d (number Value)
ConstUserNumber3d (number Value)<br>Constructor of class <b>ConstUserNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set
void
void set (number Value)
void set (number Value)<br><br>Member function of class <b>ConstUserNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserVector1d
IUserData UserVector1d 
Group <b>ConstUserVector</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="ConstUserVector1d.html">ConstUserVector1d</a> <br><table><tr><td colspan=2><h3>ConstUserVector1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserVector1d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserVector1d (number Values)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserVector1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_all_entries (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_entry (integer , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserVector1d

ConstUserVector1d ()
ConstUserVector1d ()<br>Constructor of class <b>ConstUserVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserVector1d

ConstUserVector1d (number Values)
ConstUserVector1d (number Values)<br>Constructor of class <b>ConstUserVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_all_entries
void
void set_all_entries (number )
void set_all_entries (number )<br><br>Member function of class <b>ConstUserVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_entry
void
void set_entry (integer , number )
void set_entry (integer , number )<br><br>Member function of class <b>ConstUserVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserVector2d
IUserData UserVector2d 
Group <b>ConstUserVector</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="ConstUserVector2d.html">ConstUserVector2d</a> <br><table><tr><td colspan=2><h3>ConstUserVector2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserVector2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserVector2d (number Values)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserVector2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_all_entries (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_entry (integer , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserVector2d

ConstUserVector2d ()
ConstUserVector2d ()<br>Constructor of class <b>ConstUserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserVector2d

ConstUserVector2d (number Values)
ConstUserVector2d (number Values)<br>Constructor of class <b>ConstUserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_all_entries
void
void set_all_entries (number )
void set_all_entries (number )<br><br>Member function of class <b>ConstUserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_entry
void
void set_entry (integer , number )
void set_entry (integer , number )<br><br>Member function of class <b>ConstUserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserVector3d
IUserData UserVector3d 
Group <b>ConstUserVector</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="ConstUserVector3d.html">ConstUserVector3d</a> <br><table><tr><td colspan=2><h3>ConstUserVector3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserVector3d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserVector3d (number Values)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserVector3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_all_entries (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_entry (integer , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserVector3d

ConstUserVector3d ()
ConstUserVector3d ()<br>Constructor of class <b>ConstUserVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserVector3d

ConstUserVector3d (number Values)
ConstUserVector3d (number Values)<br>Constructor of class <b>ConstUserVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_all_entries
void
void set_all_entries (number )
void set_all_entries (number )<br><br>Member function of class <b>ConstUserVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_entry
void
void set_entry (integer , number )
void set_entry (integer , number )<br><br>Member function of class <b>ConstUserVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstantEquation1d
IElemDisc IDomainElemDisc1d 
Group <b>ConstantEquation</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="ConstantEquation1d.html">ConstantEquation1d</a> <br><table><tr><td colspan=2><h3>ConstantEquation1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstantEquation1d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstantEquation1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; </td><td class="memItemRight" valign=bottom>gradient ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (number Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (c_string Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (number Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (c_string Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, Vel_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (c_string Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; </td><td class="memItemRight" valign=bottom>value ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstantEquation1d

ConstantEquation1d (c_string Function(s), c_string Subset(s))
ConstantEquation1d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (SmartPtr<UserVector1d> Velocity Field)
void set_velocity (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Velocity Field)<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x)
void set_velocity (number Vel_x)<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, number )
void set_velocity (number Vel_x, Vel_y, number )<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (c_string Velocity Field)
void set_velocity (c_string Velocity Field)<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (SmartPtr<UserNumber1d> Source)
void set_source (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Source)<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (number Source)
void set_source (number Source)<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (c_string Source)
void set_source (c_string Source)<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (SmartPtr<UserNumber1d> Mass)
void set_mass (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Mass)<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (number Mass)
void set_mass (number Mass)<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (c_string Mass)
void set_mass (c_string Mass)<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
value
SmartPtr<UserNumber1d>
SmartPtr<UserNumber1d> value ()
SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; value ()<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
gradient
SmartPtr<UserVector1d>
SmartPtr<UserVector1d> gradient ()
SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; gradient ()<br><br>Member function of class <b>ConstantEquation1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
;
class
ConstantEquation2d
IElemDisc IDomainElemDisc2d 
Group <b>ConstantEquation</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="ConstantEquation2d.html">ConstantEquation2d</a> <br><table><tr><td colspan=2><h3>ConstantEquation2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstantEquation2d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstantEquation2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>gradient ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (number Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (c_string Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (number Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (c_string Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, Vel_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (c_string Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; </td><td class="memItemRight" valign=bottom>value ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstantEquation2d

ConstantEquation2d (c_string Function(s), c_string Subset(s))
ConstantEquation2d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (SmartPtr<UserVector2d> Velocity Field)
void set_velocity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Velocity Field)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x)
void set_velocity (number Vel_x)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, number )
void set_velocity (number Vel_x, Vel_y, number )<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (c_string Velocity Field)
void set_velocity (c_string Velocity Field)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (SmartPtr<UserNumber2d> Source)
void set_source (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Source)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (number Source)
void set_source (number Source)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (c_string Source)
void set_source (c_string Source)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (SmartPtr<UserNumber2d> Mass)
void set_mass (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (number Mass)
void set_mass (number Mass)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (c_string Mass)
void set_mass (c_string Mass)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
value
SmartPtr<UserNumber2d>
SmartPtr<UserNumber2d> value ()
SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; value ()<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
gradient
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> gradient ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; gradient ()<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
;
class
ConstantEquation3d
IElemDisc IDomainElemDisc3d 
Group <b>ConstantEquation</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="ConstantEquation3d.html">ConstantEquation3d</a> <br><table><tr><td colspan=2><h3>ConstantEquation3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstantEquation3d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstantEquation3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; </td><td class="memItemRight" valign=bottom>gradient ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (number Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (c_string Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (number Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (c_string Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, Vel_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (c_string Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; </td><td class="memItemRight" valign=bottom>value ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstantEquation3d

ConstantEquation3d (c_string Function(s), c_string Subset(s))
ConstantEquation3d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (SmartPtr<UserVector3d> Velocity Field)
void set_velocity (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Velocity Field)<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x)
void set_velocity (number Vel_x)<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, number )
void set_velocity (number Vel_x, Vel_y, number )<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (c_string Velocity Field)
void set_velocity (c_string Velocity Field)<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (SmartPtr<UserNumber3d> Source)
void set_source (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Source)<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (number Source)
void set_source (number Source)<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (c_string Source)
void set_source (c_string Source)<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (SmartPtr<UserNumber3d> Mass)
void set_mass (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Mass)<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (number Mass)
void set_mass (number Mass)<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (c_string Mass)
void set_mass (c_string Mass)<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
value
SmartPtr<UserNumber3d>
SmartPtr<UserNumber3d> value ()
SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; value ()<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
gradient
SmartPtr<UserVector3d>
SmartPtr<UserVector3d> gradient ()
SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; gradient ()<br><br>Member function of class <b>ConstantEquation3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
;
class
ConvCheckCPU1
IConvergenceCheckCPU1 
Group <b>ConvCheck</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="ConvCheckCPU1.html">ConvCheckCPU1</a> <br><table><tr><td colspan=2><h3>ConvCheckCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvCheckCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (number Minimum Defect)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (number Relative Reduction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvCheckCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>previous_defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
ConvCheckCPU1

ConvCheckCPU1 ()
ConvCheckCPU1 ()<br>Constructor of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
constructor
ConvCheckCPU1

ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)
ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)<br>Constructor of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
constructor
ConvCheckCPU1

ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)
ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)<br>Constructor of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (number Minimum Defect)
void set_minimum_defect (number Minimum Defect)<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_reduction
void
void set_reduction (number Relative Reduction)
void set_reduction (number Relative Reduction)<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ConvCheckCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4/Algebra</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ConvCheckCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4/Algebra</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ConvCheckCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction<br>group: <b>/ug4/Algebra</b>
memberfunction
previous_defect
number
number previous_defect () const
number previous_defect ()<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
ConvCheckCPU2
IConvergenceCheckCPU2 
Group <b>ConvCheck</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a> <a href="ConvCheckCPU2.html">ConvCheckCPU2</a> <br><table><tr><td colspan=2><h3>ConvCheckCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU2 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU2 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvCheckCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (number Minimum Defect)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (number Relative Reduction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvCheckCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>previous_defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
ConvCheckCPU2

ConvCheckCPU2 ()
ConvCheckCPU2 ()<br>Constructor of class <b>ConvCheckCPU2</b><br>group: <b>/ug4/Algebra</b>
constructor
ConvCheckCPU2

ConvCheckCPU2 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)
ConvCheckCPU2 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)<br>Constructor of class <b>ConvCheckCPU2</b><br>group: <b>/ug4/Algebra</b>
constructor
ConvCheckCPU2

ConvCheckCPU2 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)
ConvCheckCPU2 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)<br>Constructor of class <b>ConvCheckCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>ConvCheckCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (number Minimum Defect)
void set_minimum_defect (number Minimum Defect)<br><br>Member function of class <b>ConvCheckCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_reduction
void
void set_reduction (number Relative Reduction)
void set_reduction (number Relative Reduction)<br><br>Member function of class <b>ConvCheckCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>ConvCheckCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>ConvCheckCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ConvCheckCPU2</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4/Algebra</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ConvCheckCPU2</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4/Algebra</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ConvCheckCPU2</b><br>returns reduction<br>tooltip: returns the current relative reduction<br>group: <b>/ug4/Algebra</b>
memberfunction
previous_defect
number
number previous_defect () const
number previous_defect ()<br><br>Member function of class <b>ConvCheckCPU2</b><br>group: <b>/ug4/Algebra</b>
;
class
ConvCheckCPU3
IConvergenceCheckCPU3 
Group <b>ConvCheck</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a> <a href="ConvCheckCPU3.html">ConvCheckCPU3</a> <br><table><tr><td colspan=2><h3>ConvCheckCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU3 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU3 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvCheckCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (number Minimum Defect)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (number Relative Reduction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvCheckCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>previous_defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
ConvCheckCPU3

ConvCheckCPU3 ()
ConvCheckCPU3 ()<br>Constructor of class <b>ConvCheckCPU3</b><br>group: <b>/ug4/Algebra</b>
constructor
ConvCheckCPU3

ConvCheckCPU3 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)
ConvCheckCPU3 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)<br>Constructor of class <b>ConvCheckCPU3</b><br>group: <b>/ug4/Algebra</b>
constructor
ConvCheckCPU3

ConvCheckCPU3 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)
ConvCheckCPU3 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)<br>Constructor of class <b>ConvCheckCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>ConvCheckCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (number Minimum Defect)
void set_minimum_defect (number Minimum Defect)<br><br>Member function of class <b>ConvCheckCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_reduction
void
void set_reduction (number Relative Reduction)
void set_reduction (number Relative Reduction)<br><br>Member function of class <b>ConvCheckCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>ConvCheckCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>ConvCheckCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ConvCheckCPU3</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4/Algebra</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ConvCheckCPU3</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4/Algebra</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ConvCheckCPU3</b><br>returns reduction<br>tooltip: returns the current relative reduction<br>group: <b>/ug4/Algebra</b>
memberfunction
previous_defect
number
number previous_defect () const
number previous_defect ()<br><br>Member function of class <b>ConvCheckCPU3</b><br>group: <b>/ug4/Algebra</b>
;
class
ConvectionDiffusion1d
IElemDisc IDomainElemDisc1d 
Group <b>ConvectionDiffusion</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="ConvectionDiffusion1d.html">ConvectionDiffusion1d</a> <br><table><tr><td colspan=2><h3>ConvectionDiffusion1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvectionDiffusion1d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvectionDiffusion1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; </td><td class="memItemRight" valign=bottom>gradient ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (c_string Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (number Diagonal Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_disc_scheme (c_string Disc Scheme)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (c_string Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (number Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (c_string Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (number Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order_scv (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order_scvf (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (c_string Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (number Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (c_string Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (number Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (number Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (c_string Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes1d.html">IConvectionShapes1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (c_string Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, Vel_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; </td><td class="memItemRight" valign=bottom>value ()</td></tr><tr><td><br></td></tr></table>
constructor
ConvectionDiffusion1d

ConvectionDiffusion1d (c_string Function(s), c_string Subset(s))
ConvectionDiffusion1d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_disc_scheme
void
void set_disc_scheme (c_string Disc Scheme)
void set_disc_scheme (c_string Disc Scheme)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order
void
void set_quad_order (integer )
void set_quad_order (integer )<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order_scvf
void
void set_quad_order_scvf (integer )
void set_quad_order_scvf (integer )<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order_scv
void
void set_quad_order_scv (integer )
void set_quad_order_scv (integer )<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (SmartPtr<UserMatrix1d> Diffusion)
void set_diffusion (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; Diffusion)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (number Diagonal Diffusion)
void set_diffusion (number Diagonal Diffusion)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (c_string Diffusion)
void set_diffusion (c_string Diffusion)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (SmartPtr<UserVector1d> Velocity Field)
void set_velocity (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Velocity Field)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x)
void set_velocity (number Vel_x)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, number )
void set_velocity (number Vel_x, Vel_y, number )<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (c_string Velocity Field)
void set_velocity (c_string Velocity Field)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (SmartPtr<UserNumber1d> Reaction Rate)
void set_reaction_rate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (number Reaction Rate)
void set_reaction_rate (number Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (c_string Reaction Rate)
void set_reaction_rate (c_string Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (SmartPtr<UserNumber1d> Reaction)
void set_reaction (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Reaction)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (number Reaction)
void set_reaction (number Reaction)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (c_string Reaction)
void set_reaction (c_string Reaction)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (SmartPtr<UserNumber1d> Source)
void set_source (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Source)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (number Source)
void set_source (number Source)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (c_string Source)
void set_source (c_string Source)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (SmartPtr<UserNumber1d> Mass Scale)
void set_mass_scale (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (number Mass Scale)
void set_mass_scale (number Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (c_string Mass Scale)
void set_mass_scale (c_string Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (SmartPtr<UserNumber1d> Mass)
void set_mass (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Mass)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (number Mass)
void set_mass (number Mass)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (c_string Mass)
void set_mass (c_string Mass)<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes1d> )
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes1d.html">IConvectionShapes1d</a>&gt; )<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
value
SmartPtr<UserNumber1d>
SmartPtr<UserNumber1d> value ()
SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; value ()<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
gradient
SmartPtr<UserVector1d>
SmartPtr<UserVector1d> gradient ()
SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; gradient ()<br><br>Member function of class <b>ConvectionDiffusion1d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
;
class
ConvectionDiffusion2d
IElemDisc IDomainElemDisc2d 
Group <b>ConvectionDiffusion</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="ConvectionDiffusion2d.html">ConvectionDiffusion2d</a> <br><table><tr><td colspan=2><h3>ConvectionDiffusion2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvectionDiffusion2d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvectionDiffusion2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>gradient ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (c_string Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (number Diagonal Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_disc_scheme (c_string Disc Scheme)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (c_string Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (number Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (c_string Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (number Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order_scv (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order_scvf (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (c_string Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (number Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (c_string Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (number Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (number Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (c_string Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (c_string Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, Vel_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; </td><td class="memItemRight" valign=bottom>value ()</td></tr><tr><td><br></td></tr></table>
constructor
ConvectionDiffusion2d

ConvectionDiffusion2d (c_string Function(s), c_string Subset(s))
ConvectionDiffusion2d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_disc_scheme
void
void set_disc_scheme (c_string Disc Scheme)
void set_disc_scheme (c_string Disc Scheme)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order
void
void set_quad_order (integer )
void set_quad_order (integer )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order_scvf
void
void set_quad_order_scvf (integer )
void set_quad_order_scvf (integer )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order_scv
void
void set_quad_order_scv (integer )
void set_quad_order_scv (integer )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (SmartPtr<UserMatrix2d> Diffusion)
void set_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Diffusion)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (number Diagonal Diffusion)
void set_diffusion (number Diagonal Diffusion)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (c_string Diffusion)
void set_diffusion (c_string Diffusion)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (SmartPtr<UserVector2d> Velocity Field)
void set_velocity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Velocity Field)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x)
void set_velocity (number Vel_x)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, number )
void set_velocity (number Vel_x, Vel_y, number )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (c_string Velocity Field)
void set_velocity (c_string Velocity Field)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (SmartPtr<UserNumber2d> Reaction Rate)
void set_reaction_rate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (number Reaction Rate)
void set_reaction_rate (number Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (c_string Reaction Rate)
void set_reaction_rate (c_string Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (SmartPtr<UserNumber2d> Reaction)
void set_reaction (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Reaction)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (number Reaction)
void set_reaction (number Reaction)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (c_string Reaction)
void set_reaction (c_string Reaction)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (SmartPtr<UserNumber2d> Source)
void set_source (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Source)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (number Source)
void set_source (number Source)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (c_string Source)
void set_source (c_string Source)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (SmartPtr<UserNumber2d> Mass Scale)
void set_mass_scale (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (number Mass Scale)
void set_mass_scale (number Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (c_string Mass Scale)
void set_mass_scale (c_string Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (SmartPtr<UserNumber2d> Mass)
void set_mass (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (number Mass)
void set_mass (number Mass)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (c_string Mass)
void set_mass (c_string Mass)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes2d> )
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
value
SmartPtr<UserNumber2d>
SmartPtr<UserNumber2d> value ()
SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; value ()<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
gradient
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> gradient ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; gradient ()<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
;
class
ConvectionDiffusion3d
IElemDisc IDomainElemDisc3d 
Group <b>ConvectionDiffusion</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="ConvectionDiffusion3d.html">ConvectionDiffusion3d</a> <br><table><tr><td colspan=2><h3>ConvectionDiffusion3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvectionDiffusion3d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvectionDiffusion3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; </td><td class="memItemRight" valign=bottom>gradient ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (c_string Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (number Diagonal Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_disc_scheme (c_string Disc Scheme)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (c_string Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (number Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (c_string Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (number Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order_scv (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order_scvf (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (c_string Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (number Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (c_string Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (number Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (number Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (c_string Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes3d.html">IConvectionShapes3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (c_string Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, Vel_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; </td><td class="memItemRight" valign=bottom>value ()</td></tr><tr><td><br></td></tr></table>
constructor
ConvectionDiffusion3d

ConvectionDiffusion3d (c_string Function(s), c_string Subset(s))
ConvectionDiffusion3d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_disc_scheme
void
void set_disc_scheme (c_string Disc Scheme)
void set_disc_scheme (c_string Disc Scheme)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order
void
void set_quad_order (integer )
void set_quad_order (integer )<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order_scvf
void
void set_quad_order_scvf (integer )
void set_quad_order_scvf (integer )<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order_scv
void
void set_quad_order_scv (integer )
void set_quad_order_scv (integer )<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (SmartPtr<UserMatrix3d> Diffusion)
void set_diffusion (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; Diffusion)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (number Diagonal Diffusion)
void set_diffusion (number Diagonal Diffusion)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (c_string Diffusion)
void set_diffusion (c_string Diffusion)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (SmartPtr<UserVector3d> Velocity Field)
void set_velocity (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Velocity Field)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x)
void set_velocity (number Vel_x)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, number )
void set_velocity (number Vel_x, Vel_y, number )<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (c_string Velocity Field)
void set_velocity (c_string Velocity Field)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (SmartPtr<UserNumber3d> Reaction Rate)
void set_reaction_rate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (number Reaction Rate)
void set_reaction_rate (number Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (c_string Reaction Rate)
void set_reaction_rate (c_string Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (SmartPtr<UserNumber3d> Reaction)
void set_reaction (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Reaction)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (number Reaction)
void set_reaction (number Reaction)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (c_string Reaction)
void set_reaction (c_string Reaction)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (SmartPtr<UserNumber3d> Source)
void set_source (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Source)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (number Source)
void set_source (number Source)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (c_string Source)
void set_source (c_string Source)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (SmartPtr<UserNumber3d> Mass Scale)
void set_mass_scale (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (number Mass Scale)
void set_mass_scale (number Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (c_string Mass Scale)
void set_mass_scale (c_string Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (SmartPtr<UserNumber3d> Mass)
void set_mass (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Mass)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (number Mass)
void set_mass (number Mass)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (c_string Mass)
void set_mass (c_string Mass)<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes3d> )
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes3d.html">IConvectionShapes3d</a>&gt; )<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
value
SmartPtr<UserNumber3d>
SmartPtr<UserNumber3d> value ()
SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; value ()<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
gradient
SmartPtr<UserVector3d>
SmartPtr<UserVector3d> gradient ()
SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; gradient ()<br><br>Member function of class <b>ConvectionDiffusion3d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
;
class
DarcyVelocityLinker1d
IUserData UserVector1d DependentUserDataVector1d DataLinkerVector1d 
Group <b>DarcyVelocityLinker</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="DependentUserDataVector1d.html">DependentUserDataVector1d</a> <a href="DataLinkerVector1d.html">DataLinkerVector1d</a> <a href="DarcyVelocityLinker1d.html">DarcyVelocityLinker1d</a> <br><table><tr><td colspan=2><h3>DarcyVelocityLinker1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DarcyVelocityLinker1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DarcyVelocityLinker1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_pressure_gradient (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
DarcyVelocityLinker1d

DarcyVelocityLinker1d ()
DarcyVelocityLinker1d ()<br>Constructor of class <b>DarcyVelocityLinker1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber1d> )
void set_density (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector1d> )
void set_gravity (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_permeability
void
void set_permeability (number )
void set_permeability (number )<br><br>Member function of class <b>DarcyVelocityLinker1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix1d> )
void set_permeability (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_pressure_gradient
void
void set_pressure_gradient (SmartPtr<UserVector1d> )
void set_pressure_gradient (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_viscosity
void
void set_viscosity (number )
void set_viscosity (number )<br><br>Member function of class <b>DarcyVelocityLinker1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber1d> )
void set_viscosity (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
DarcyVelocityLinker2d
IUserData UserVector2d DependentUserDataVector2d DataLinkerVector2d 
Group <b>DarcyVelocityLinker</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="DependentUserDataVector2d.html">DependentUserDataVector2d</a> <a href="DataLinkerVector2d.html">DataLinkerVector2d</a> <a href="DarcyVelocityLinker2d.html">DarcyVelocityLinker2d</a> <br><table><tr><td colspan=2><h3>DarcyVelocityLinker2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DarcyVelocityLinker2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DarcyVelocityLinker2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_pressure_gradient (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
DarcyVelocityLinker2d

DarcyVelocityLinker2d ()
DarcyVelocityLinker2d ()<br>Constructor of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber2d> )
void set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector2d> )
void set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_permeability
void
void set_permeability (number )
void set_permeability (number )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix2d> )
void set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_pressure_gradient
void
void set_pressure_gradient (SmartPtr<UserVector2d> )
void set_pressure_gradient (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_viscosity
void
void set_viscosity (number )
void set_viscosity (number )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber2d> )
void set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
DarcyVelocityLinker3d
IUserData UserVector3d DependentUserDataVector3d DataLinkerVector3d 
Group <b>DarcyVelocityLinker</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="DependentUserDataVector3d.html">DependentUserDataVector3d</a> <a href="DataLinkerVector3d.html">DataLinkerVector3d</a> <a href="DarcyVelocityLinker3d.html">DarcyVelocityLinker3d</a> <br><table><tr><td colspan=2><h3>DarcyVelocityLinker3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DarcyVelocityLinker3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DarcyVelocityLinker3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_pressure_gradient (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
DarcyVelocityLinker3d

DarcyVelocityLinker3d ()
DarcyVelocityLinker3d ()<br>Constructor of class <b>DarcyVelocityLinker3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber3d> )
void set_density (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector3d> )
void set_gravity (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_permeability
void
void set_permeability (number )
void set_permeability (number )<br><br>Member function of class <b>DarcyVelocityLinker3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix3d> )
void set_permeability (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_pressure_gradient
void
void set_pressure_gradient (SmartPtr<UserVector3d> )
void set_pressure_gradient (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_viscosity
void
void set_viscosity (number )
void set_viscosity (number )<br><br>Member function of class <b>DarcyVelocityLinker3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber3d> )
void set_viscosity (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
DataLinkerMatrix1d
IUserData UserMatrix1d DependentUserDataMatrix1d 
Group <b>DataLinkerMatrix</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix1d.html">UserMatrix1d</a> <a href="DependentUserDataMatrix1d.html">DependentUserDataMatrix1d</a> <a href="DataLinkerMatrix1d.html">DataLinkerMatrix1d</a> <br><table><tr><td colspan=2><h3> Inherited UserMatrix1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerMatrix2d
IUserData UserMatrix2d DependentUserDataMatrix2d 
Group <b>DataLinkerMatrix</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix2d.html">UserMatrix2d</a> <a href="DependentUserDataMatrix2d.html">DependentUserDataMatrix2d</a> <a href="DataLinkerMatrix2d.html">DataLinkerMatrix2d</a> <br><table><tr><td colspan=2><h3> Inherited UserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerMatrix3d
IUserData UserMatrix3d DependentUserDataMatrix3d 
Group <b>DataLinkerMatrix</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix3d.html">UserMatrix3d</a> <a href="DependentUserDataMatrix3d.html">DependentUserDataMatrix3d</a> <a href="DataLinkerMatrix3d.html">DataLinkerMatrix3d</a> <br><table><tr><td colspan=2><h3> Inherited UserMatrix3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerNumber1d
IUserData UserNumber1d DependentUserDataNumber1d 
Group <b>DataLinkerNumber</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <a href="DataLinkerNumber1d.html">DataLinkerNumber1d</a> <br><table><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerNumber2d
IUserData UserNumber2d DependentUserDataNumber2d 
Group <b>DataLinkerNumber</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <br><table><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerNumber3d
IUserData UserNumber3d DependentUserDataNumber3d 
Group <b>DataLinkerNumber</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <a href="DataLinkerNumber3d.html">DataLinkerNumber3d</a> <br><table><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerTensor41d
IUserData UserTensor41d DependentUserDataTensor41d 
Group <b>DataLinkerTensor4</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor41d.html">UserTensor41d</a> <a href="DependentUserDataTensor41d.html">DependentUserDataTensor41d</a> <a href="DataLinkerTensor41d.html">DataLinkerTensor41d</a> <br><table><tr><td colspan=2><h3> Inherited UserTensor41d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerTensor42d
IUserData UserTensor42d DependentUserDataTensor42d 
Group <b>DataLinkerTensor4</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor42d.html">UserTensor42d</a> <a href="DependentUserDataTensor42d.html">DependentUserDataTensor42d</a> <a href="DataLinkerTensor42d.html">DataLinkerTensor42d</a> <br><table><tr><td colspan=2><h3> Inherited UserTensor42d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerTensor43d
IUserData UserTensor43d DependentUserDataTensor43d 
Group <b>DataLinkerTensor4</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor43d.html">UserTensor43d</a> <a href="DependentUserDataTensor43d.html">DependentUserDataTensor43d</a> <a href="DataLinkerTensor43d.html">DataLinkerTensor43d</a> <br><table><tr><td colspan=2><h3> Inherited UserTensor43d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerVector1d
IUserData UserVector1d DependentUserDataVector1d 
Group <b>DataLinkerVector</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="DependentUserDataVector1d.html">DependentUserDataVector1d</a> <a href="DataLinkerVector1d.html">DataLinkerVector1d</a> <br><table><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerVector2d
IUserData UserVector2d DependentUserDataVector2d 
Group <b>DataLinkerVector</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="DependentUserDataVector2d.html">DependentUserDataVector2d</a> <a href="DataLinkerVector2d.html">DataLinkerVector2d</a> <br><table><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerVector3d
IUserData UserVector3d DependentUserDataVector3d 
Group <b>DataLinkerVector</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="DependentUserDataVector3d.html">DependentUserDataVector3d</a> <a href="DataLinkerVector3d.html">DataLinkerVector3d</a> <br><table><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DebugWritingObjectCPU1
VectorDebugWritingObjectCPU1 
Group <b>DebugWritingObject</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <br><table><tr><td colspan=2><h3>DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> d)
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)<br><br>Member function of class <b>DebugWritingObjectCPU1</b><br>returns sets a debug writer<br>group: <b>/ug4/Algebra</b>
memberfunction
debug_writer
SmartPtr<IDebugWriterCPU1>
SmartPtr<IDebugWriterCPU1> debug_writer ()
SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; debug_writer ()<br><br>Member function of class <b>DebugWritingObjectCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
debug_writer
ConstSmartPtr<IDebugWriterCPU1>
const SmartPtr<IDebugWriterCPU1> debug_writer () const
const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; debug_writer ()<br><br>Member function of class <b>DebugWritingObjectCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
DebugWritingObjectCPU2
VectorDebugWritingObjectCPU2 
Group <b>DebugWritingObject</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <br><table><tr><td colspan=2><h3>DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU2> d)
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)<br><br>Member function of class <b>DebugWritingObjectCPU2</b><br>returns sets a debug writer<br>group: <b>/ug4/Algebra</b>
memberfunction
debug_writer
SmartPtr<IDebugWriterCPU2>
SmartPtr<IDebugWriterCPU2> debug_writer ()
SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; debug_writer ()<br><br>Member function of class <b>DebugWritingObjectCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
debug_writer
ConstSmartPtr<IDebugWriterCPU2>
const SmartPtr<IDebugWriterCPU2> debug_writer () const
const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; debug_writer ()<br><br>Member function of class <b>DebugWritingObjectCPU2</b><br>group: <b>/ug4/Algebra</b>
;
class
DebugWritingObjectCPU3
VectorDebugWritingObjectCPU3 
Group <b>DebugWritingObject</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <br><table><tr><td colspan=2><h3>DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU3> d)
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)<br><br>Member function of class <b>DebugWritingObjectCPU3</b><br>returns sets a debug writer<br>group: <b>/ug4/Algebra</b>
memberfunction
debug_writer
SmartPtr<IDebugWriterCPU3>
SmartPtr<IDebugWriterCPU3> debug_writer ()
SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; debug_writer ()<br><br>Member function of class <b>DebugWritingObjectCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
debug_writer
ConstSmartPtr<IDebugWriterCPU3>
const SmartPtr<IDebugWriterCPU3> debug_writer () const
const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; debug_writer ()<br><br>Member function of class <b>DebugWritingObjectCPU3</b><br>group: <b>/ug4/Algebra</b>
;
class
DecayKinetik1d
IUserData UserNumber1d DependentUserDataNumber1d DataLinkerNumber1d 
Group <b>DecayKinetik</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <a href="DataLinkerNumber1d.html">DataLinkerNumber1d</a> <a href="DecayKinetik1d.html">DecayKinetik1d</a> <br><table><tr><td colspan=2><h3>DecayKinetik1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DecayKinetik1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DecayKinetik1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_f (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_f (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
DecayKinetik1d

DecayKinetik1d ()
DecayKinetik1d ()<br>Constructor of class <b>DecayKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C
void
void set_C (number )
void set_C (number )<br><br>Member function of class <b>DecayKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C
void
void set_C (SmartPtr<UserNumber1d> )
void set_C (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>DecayKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_f
void
void set_f (number )
void set_f (number )<br><br>Member function of class <b>DecayKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_f
void
void set_f (SmartPtr<UserNumber1d> )
void set_f (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>DecayKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (number )
void set_k (number )<br><br>Member function of class <b>DecayKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (SmartPtr<UserNumber1d> )
void set_k (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>DecayKinetik1d</b><br>group: <b>ug4//Biogas</b>
;
class
DecayKinetik2d
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Group <b>DecayKinetik</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="DecayKinetik2d.html">DecayKinetik2d</a> <br><table><tr><td colspan=2><h3>DecayKinetik2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DecayKinetik2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DecayKinetik2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_f (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_f (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
DecayKinetik2d

DecayKinetik2d ()
DecayKinetik2d ()<br>Constructor of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C
void
void set_C (number )
void set_C (number )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C
void
void set_C (SmartPtr<UserNumber2d> )
void set_C (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_f
void
void set_f (number )
void set_f (number )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_f
void
void set_f (SmartPtr<UserNumber2d> )
void set_f (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (number )
void set_k (number )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (SmartPtr<UserNumber2d> )
void set_k (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
;
class
DecayKinetik3d
IUserData UserNumber3d DependentUserDataNumber3d DataLinkerNumber3d 
Group <b>DecayKinetik</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <a href="DataLinkerNumber3d.html">DataLinkerNumber3d</a> <a href="DecayKinetik3d.html">DecayKinetik3d</a> <br><table><tr><td colspan=2><h3>DecayKinetik3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DecayKinetik3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DecayKinetik3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_f (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_f (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
DecayKinetik3d

DecayKinetik3d ()
DecayKinetik3d ()<br>Constructor of class <b>DecayKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C
void
void set_C (number )
void set_C (number )<br><br>Member function of class <b>DecayKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C
void
void set_C (SmartPtr<UserNumber3d> )
void set_C (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>DecayKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_f
void
void set_f (number )
void set_f (number )<br><br>Member function of class <b>DecayKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_f
void
void set_f (SmartPtr<UserNumber3d> )
void set_f (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>DecayKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (number )
void set_k (number )<br><br>Member function of class <b>DecayKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (SmartPtr<UserNumber3d> )
void set_k (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>DecayKinetik3d</b><br>group: <b>ug4//Biogas</b>
;
class
DensityDrivenFlow1d
IElemDisc IDomainElemDisc1d 
Group <b>DensityDrivenFlow</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="DensityDrivenFlow1d.html">DensityDrivenFlow1d</a> <br><table><tr><td colspan=2><h3>DensityDrivenFlow1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DensityDrivenFlow1d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DensityDrivenFlow1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; </td><td class="memItemRight" valign=bottom>brine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; </td><td class="memItemRight" valign=bottom>darcy_velocity ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; </td><td class="memItemRight" valign=bottom>pressure_grad ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_flow (bool Boussinesq Flow)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_transport (bool Boussinesq Transport)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_consistent_gravity (bool Consistent Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Density)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, g_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (c_string Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (number MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (c_string MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (c_string Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (c_string Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (number Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes1d.html">IConvectionShapes1d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (c_string Viscosity)</td></tr><tr><td><br></td></tr></table>
constructor
DensityDrivenFlow1d

DensityDrivenFlow1d (c_string Function(s), c_string Subset(s))
DensityDrivenFlow1d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_consistent_gravity
void
void set_consistent_gravity (bool Consistent Gravity)
void set_consistent_gravity (bool Consistent Gravity)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_transport
void
void set_boussinesq_transport (bool Boussinesq Transport)
void set_boussinesq_transport (bool Boussinesq Transport)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_flow
void
void set_boussinesq_flow (bool Boussinesq Flow)
void set_boussinesq_flow (bool Boussinesq Flow)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes1d> Upwind (no, part, full))
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes1d.html">IConvectionShapes1d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (SmartPtr<UserNumber1d> Porosity)
void set_porosity (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Porosity)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (number Porosity)
void set_porosity (number Porosity)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (c_string Porosity)
void set_porosity (c_string Porosity)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector1d> Gravity)
void set_gravity (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Gravity)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x)
void set_gravity (number g_x)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, number )
void set_gravity (number g_x, g_y, number )<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, g_z, number , number )
void set_gravity (number g_x, g_y, g_z, number , number )<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (c_string Gravity)
void set_gravity (c_string Gravity)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (SmartPtr<UserMatrix1d> MolecularDiffusion)
void set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (number MolecularDiffusion)
void set_molecular_diffusion (number MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (c_string MolecularDiffusion)
void set_molecular_diffusion (c_string MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix1d> Permeability)
void set_permeability (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; Permeability)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (number Permeability)
void set_permeability (number Permeability)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (c_string Permeability)
void set_permeability (c_string Permeability)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber1d> Viscosity)
void set_viscosity (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Viscosity)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (number Viscosity)
void set_viscosity (number Viscosity)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (c_string Viscosity)
void set_viscosity (c_string Viscosity)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber1d> Density)
void set_density (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Density)<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
darcy_velocity
SmartPtr<UserVector1d>
SmartPtr<UserVector1d> darcy_velocity ()
SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; darcy_velocity ()<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
brine
SmartPtr<UserNumber1d>
SmartPtr<UserNumber1d> brine ()
SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; brine ()<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
pressure_grad
SmartPtr<UserVector1d>
SmartPtr<UserVector1d> pressure_grad ()
SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; pressure_grad ()<br><br>Member function of class <b>DensityDrivenFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
;
class
DensityDrivenFlow2d
IElemDisc IDomainElemDisc2d 
Group <b>DensityDrivenFlow</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="DensityDrivenFlow2d.html">DensityDrivenFlow2d</a> <br><table><tr><td colspan=2><h3>DensityDrivenFlow2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DensityDrivenFlow2d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DensityDrivenFlow2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; </td><td class="memItemRight" valign=bottom>brine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>darcy_velocity ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>pressure_grad ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_flow (bool Boussinesq Flow)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_transport (bool Boussinesq Transport)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_consistent_gravity (bool Consistent Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Density)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, g_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (c_string Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (number MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (c_string MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (c_string Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (c_string Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (number Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (c_string Viscosity)</td></tr><tr><td><br></td></tr></table>
constructor
DensityDrivenFlow2d

DensityDrivenFlow2d (c_string Function(s), c_string Subset(s))
DensityDrivenFlow2d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_consistent_gravity
void
void set_consistent_gravity (bool Consistent Gravity)
void set_consistent_gravity (bool Consistent Gravity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_transport
void
void set_boussinesq_transport (bool Boussinesq Transport)
void set_boussinesq_transport (bool Boussinesq Transport)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_flow
void
void set_boussinesq_flow (bool Boussinesq Flow)
void set_boussinesq_flow (bool Boussinesq Flow)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes2d> Upwind (no, part, full))
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (SmartPtr<UserNumber2d> Porosity)
void set_porosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Porosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (number Porosity)
void set_porosity (number Porosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (c_string Porosity)
void set_porosity (c_string Porosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector2d> Gravity)
void set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Gravity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x)
void set_gravity (number g_x)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, number )
void set_gravity (number g_x, g_y, number )<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, g_z, number , number )
void set_gravity (number g_x, g_y, g_z, number , number )<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (c_string Gravity)
void set_gravity (c_string Gravity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (SmartPtr<UserMatrix2d> MolecularDiffusion)
void set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (number MolecularDiffusion)
void set_molecular_diffusion (number MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (c_string MolecularDiffusion)
void set_molecular_diffusion (c_string MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix2d> Permeability)
void set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Permeability)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (number Permeability)
void set_permeability (number Permeability)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (c_string Permeability)
void set_permeability (c_string Permeability)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber2d> Viscosity)
void set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Viscosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (number Viscosity)
void set_viscosity (number Viscosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (c_string Viscosity)
void set_viscosity (c_string Viscosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber2d> Density)
void set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Density)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
darcy_velocity
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> darcy_velocity ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; darcy_velocity ()<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
brine
SmartPtr<UserNumber2d>
SmartPtr<UserNumber2d> brine ()
SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; brine ()<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
pressure_grad
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> pressure_grad ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; pressure_grad ()<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
;
class
DensityDrivenFlow3d
IElemDisc IDomainElemDisc3d 
Group <b>DensityDrivenFlow</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="DensityDrivenFlow3d.html">DensityDrivenFlow3d</a> <br><table><tr><td colspan=2><h3>DensityDrivenFlow3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DensityDrivenFlow3d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DensityDrivenFlow3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; </td><td class="memItemRight" valign=bottom>brine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; </td><td class="memItemRight" valign=bottom>darcy_velocity ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; </td><td class="memItemRight" valign=bottom>pressure_grad ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_flow (bool Boussinesq Flow)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_transport (bool Boussinesq Transport)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_consistent_gravity (bool Consistent Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Density)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, g_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (c_string Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (number MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (c_string MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (c_string Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (c_string Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (number Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes3d.html">IConvectionShapes3d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (c_string Viscosity)</td></tr><tr><td><br></td></tr></table>
constructor
DensityDrivenFlow3d

DensityDrivenFlow3d (c_string Function(s), c_string Subset(s))
DensityDrivenFlow3d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_consistent_gravity
void
void set_consistent_gravity (bool Consistent Gravity)
void set_consistent_gravity (bool Consistent Gravity)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_transport
void
void set_boussinesq_transport (bool Boussinesq Transport)
void set_boussinesq_transport (bool Boussinesq Transport)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_flow
void
void set_boussinesq_flow (bool Boussinesq Flow)
void set_boussinesq_flow (bool Boussinesq Flow)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes3d> Upwind (no, part, full))
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes3d.html">IConvectionShapes3d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (SmartPtr<UserNumber3d> Porosity)
void set_porosity (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Porosity)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (number Porosity)
void set_porosity (number Porosity)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (c_string Porosity)
void set_porosity (c_string Porosity)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector3d> Gravity)
void set_gravity (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Gravity)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x)
void set_gravity (number g_x)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, number )
void set_gravity (number g_x, g_y, number )<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, g_z, number , number )
void set_gravity (number g_x, g_y, g_z, number , number )<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (c_string Gravity)
void set_gravity (c_string Gravity)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (SmartPtr<UserMatrix3d> MolecularDiffusion)
void set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (number MolecularDiffusion)
void set_molecular_diffusion (number MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (c_string MolecularDiffusion)
void set_molecular_diffusion (c_string MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix3d> Permeability)
void set_permeability (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; Permeability)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (number Permeability)
void set_permeability (number Permeability)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (c_string Permeability)
void set_permeability (c_string Permeability)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber3d> Viscosity)
void set_viscosity (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Viscosity)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (number Viscosity)
void set_viscosity (number Viscosity)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (c_string Viscosity)
void set_viscosity (c_string Viscosity)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber3d> Density)
void set_density (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Density)<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
darcy_velocity
SmartPtr<UserVector3d>
SmartPtr<UserVector3d> darcy_velocity ()
SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; darcy_velocity ()<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
brine
SmartPtr<UserNumber3d>
SmartPtr<UserNumber3d> brine ()
SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; brine ()<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
pressure_grad
SmartPtr<UserVector3d>
SmartPtr<UserVector3d> pressure_grad ()
SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; pressure_grad ()<br><br>Member function of class <b>DensityDrivenFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
;
class
DependentUserDataMatrix1d
IUserData UserMatrix1d 
Group <b>DependentUserDataMatrix</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix1d.html">UserMatrix1d</a> <a href="DependentUserDataMatrix1d.html">DependentUserDataMatrix1d</a> <br><table><tr><td colspan=2><h3> Inherited UserMatrix1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataMatrix2d
IUserData UserMatrix2d 
Group <b>DependentUserDataMatrix</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix2d.html">UserMatrix2d</a> <a href="DependentUserDataMatrix2d.html">DependentUserDataMatrix2d</a> <br><table><tr><td colspan=2><h3> Inherited UserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataMatrix3d
IUserData UserMatrix3d 
Group <b>DependentUserDataMatrix</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix3d.html">UserMatrix3d</a> <a href="DependentUserDataMatrix3d.html">DependentUserDataMatrix3d</a> <br><table><tr><td colspan=2><h3> Inherited UserMatrix3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataNumber1d
IUserData UserNumber1d 
Group <b>DependentUserDataNumber</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <br><table><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataNumber2d
IUserData UserNumber2d 
Group <b>DependentUserDataNumber</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <br><table><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataNumber3d
IUserData UserNumber3d 
Group <b>DependentUserDataNumber</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <br><table><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataTensor41d
IUserData UserTensor41d 
Group <b>DependentUserDataTensor4</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor41d.html">UserTensor41d</a> <a href="DependentUserDataTensor41d.html">DependentUserDataTensor41d</a> <br><table><tr><td colspan=2><h3> Inherited UserTensor41d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataTensor42d
IUserData UserTensor42d 
Group <b>DependentUserDataTensor4</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor42d.html">UserTensor42d</a> <a href="DependentUserDataTensor42d.html">DependentUserDataTensor42d</a> <br><table><tr><td colspan=2><h3> Inherited UserTensor42d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataTensor43d
IUserData UserTensor43d 
Group <b>DependentUserDataTensor4</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor43d.html">UserTensor43d</a> <a href="DependentUserDataTensor43d.html">DependentUserDataTensor43d</a> <br><table><tr><td colspan=2><h3> Inherited UserTensor43d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataVector1d
IUserData UserVector1d 
Group <b>DependentUserDataVector</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="DependentUserDataVector1d.html">DependentUserDataVector1d</a> <br><table><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataVector2d
IUserData UserVector2d 
Group <b>DependentUserDataVector</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="DependentUserDataVector2d.html">DependentUserDataVector2d</a> <br><table><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DependentUserDataVector3d
IUserData UserVector3d 
Group <b>DependentUserDataVector</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="DependentUserDataVector3d.html">DependentUserDataVector3d</a> <br><table><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DiagVankaCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Group <b>DiagVanka</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Diagonal Vanka Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="DiagVankaCPU1.html">DiagVankaCPU1</a> <br><table><tr><td colspan=2><h3>DiagVankaCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DiagVankaCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DiagVankaCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_relax (number relax)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
DiagVankaCPU1

DiagVankaCPU1 ()
DiagVankaCPU1 ()<br>Constructor of class <b>DiagVankaCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_relax
void
void set_relax (number relax)
void set_relax (number relax)<br><br>Member function of class <b>DiagVankaCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
DiagVankaCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 IPreconditionerCPU2 
Group <b>DiagVanka</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Diagonal Vanka Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <a href="DiagVankaCPU2.html">DiagVankaCPU2</a> <br><table><tr><td colspan=2><h3>DiagVankaCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DiagVankaCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DiagVankaCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_relax (number relax)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
DiagVankaCPU2

DiagVankaCPU2 ()
DiagVankaCPU2 ()<br>Constructor of class <b>DiagVankaCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_relax
void
void set_relax (number relax)
void set_relax (number relax)<br><br>Member function of class <b>DiagVankaCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
DiagVankaCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 IPreconditionerCPU3 
Group <b>DiagVanka</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Diagonal Vanka Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <a href="DiagVankaCPU3.html">DiagVankaCPU3</a> <br><table><tr><td colspan=2><h3>DiagVankaCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DiagVankaCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DiagVankaCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_relax (number relax)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
DiagVankaCPU3

DiagVankaCPU3 ()
DiagVankaCPU3 ()<br>Constructor of class <b>DiagVankaCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_relax
void
void set_relax (number relax)
void set_relax (number relax)<br><br>Member function of class <b>DiagVankaCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
DirichletBoundary1dCPU1
IConstraintCPU1 IDomainConstraint1dCPU1 
Group <b>DirichletBoundary</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint1dCPU1.html">IDomainConstraint1dCPU1</a> <a href="DirichletBoundary1dCPU1.html">DirichletBoundary1dCPU1</a> <br><table><tr><td colspan=2><h3>DirichletBoundary1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletBoundary1dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletBoundary1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber1d.html">CondUserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Vector, c_string Functions, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number ConstantValue, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string LuaCallback, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletBoundary1dCPU1

DirichletBoundary1dCPU1 ()
DirichletBoundary1dCPU1 ()<br>Constructor of class <b>DirichletBoundary1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber1d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="CondUserNumber1d.html">CondUserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector1d> Vector, c_string Functions, c_string Subsets)
void add (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Vector, c_string Functions, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (number ConstantValue, c_string Function, c_string Subsets)
void add (number ConstantValue, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (c_string LuaCallback, c_string Function, c_string Subsets)
void add (c_string LuaCallback, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace1d> ApproximationSpace)
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br><br>Member function of class <b>DirichletBoundary1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>DirichletBoundary1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DirichletBoundary1dCPU2
IConstraintCPU2 IDomainConstraint1dCPU2 
Group <b>DirichletBoundary</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint1dCPU2.html">IDomainConstraint1dCPU2</a> <a href="DirichletBoundary1dCPU2.html">DirichletBoundary1dCPU2</a> <br><table><tr><td colspan=2><h3>DirichletBoundary1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletBoundary1dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletBoundary1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber1d.html">CondUserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Vector, c_string Functions, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number ConstantValue, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string LuaCallback, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletBoundary1dCPU2

DirichletBoundary1dCPU2 ()
DirichletBoundary1dCPU2 ()<br>Constructor of class <b>DirichletBoundary1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber1d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="CondUserNumber1d.html">CondUserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector1d> Vector, c_string Functions, c_string Subsets)
void add (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Vector, c_string Functions, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (number ConstantValue, c_string Function, c_string Subsets)
void add (number ConstantValue, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (c_string LuaCallback, c_string Function, c_string Subsets)
void add (c_string LuaCallback, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace1d> ApproximationSpace)
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br><br>Member function of class <b>DirichletBoundary1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>DirichletBoundary1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DirichletBoundary1dCPU3
IConstraintCPU3 IDomainConstraint1dCPU3 
Group <b>DirichletBoundary</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint1dCPU3.html">IDomainConstraint1dCPU3</a> <a href="DirichletBoundary1dCPU3.html">DirichletBoundary1dCPU3</a> <br><table><tr><td colspan=2><h3>DirichletBoundary1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletBoundary1dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletBoundary1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber1d.html">CondUserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Vector, c_string Functions, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number ConstantValue, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string LuaCallback, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletBoundary1dCPU3

DirichletBoundary1dCPU3 ()
DirichletBoundary1dCPU3 ()<br>Constructor of class <b>DirichletBoundary1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber1d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="CondUserNumber1d.html">CondUserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector1d> Vector, c_string Functions, c_string Subsets)
void add (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Vector, c_string Functions, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (number ConstantValue, c_string Function, c_string Subsets)
void add (number ConstantValue, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (c_string LuaCallback, c_string Function, c_string Subsets)
void add (c_string LuaCallback, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace1d> ApproximationSpace)
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br><br>Member function of class <b>DirichletBoundary1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>DirichletBoundary1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DirichletBoundary2dCPU1
IConstraintCPU1 IDomainConstraint2dCPU1 
Group <b>DirichletBoundary</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a> <a href="DirichletBoundary2dCPU1.html">DirichletBoundary2dCPU1</a> <br><table><tr><td colspan=2><h3>DirichletBoundary2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletBoundary2dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletBoundary2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Vector, c_string Functions, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number ConstantValue, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string LuaCallback, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletBoundary2dCPU1

DirichletBoundary2dCPU1 ()
DirichletBoundary2dCPU1 ()<br>Constructor of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber2d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector2d> Vector, c_string Functions, c_string Subsets)
void add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Vector, c_string Functions, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (number ConstantValue, c_string Function, c_string Subsets)
void add (number ConstantValue, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (c_string LuaCallback, c_string Function, c_string Subsets)
void add (c_string LuaCallback, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace2d> ApproximationSpace)
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DirichletBoundary2dCPU2
IConstraintCPU2 IDomainConstraint2dCPU2 
Group <b>DirichletBoundary</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint2dCPU2.html">IDomainConstraint2dCPU2</a> <a href="DirichletBoundary2dCPU2.html">DirichletBoundary2dCPU2</a> <br><table><tr><td colspan=2><h3>DirichletBoundary2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletBoundary2dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletBoundary2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Vector, c_string Functions, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number ConstantValue, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string LuaCallback, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletBoundary2dCPU2

DirichletBoundary2dCPU2 ()
DirichletBoundary2dCPU2 ()<br>Constructor of class <b>DirichletBoundary2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber2d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector2d> Vector, c_string Functions, c_string Subsets)
void add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Vector, c_string Functions, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (number ConstantValue, c_string Function, c_string Subsets)
void add (number ConstantValue, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (c_string LuaCallback, c_string Function, c_string Subsets)
void add (c_string LuaCallback, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace2d> ApproximationSpace)
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br><br>Member function of class <b>DirichletBoundary2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>DirichletBoundary2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DirichletBoundary2dCPU3
IConstraintCPU3 IDomainConstraint2dCPU3 
Group <b>DirichletBoundary</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint2dCPU3.html">IDomainConstraint2dCPU3</a> <a href="DirichletBoundary2dCPU3.html">DirichletBoundary2dCPU3</a> <br><table><tr><td colspan=2><h3>DirichletBoundary2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletBoundary2dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletBoundary2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Vector, c_string Functions, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number ConstantValue, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string LuaCallback, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletBoundary2dCPU3

DirichletBoundary2dCPU3 ()
DirichletBoundary2dCPU3 ()<br>Constructor of class <b>DirichletBoundary2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber2d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector2d> Vector, c_string Functions, c_string Subsets)
void add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Vector, c_string Functions, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (number ConstantValue, c_string Function, c_string Subsets)
void add (number ConstantValue, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (c_string LuaCallback, c_string Function, c_string Subsets)
void add (c_string LuaCallback, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace2d> ApproximationSpace)
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br><br>Member function of class <b>DirichletBoundary2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>DirichletBoundary2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DirichletBoundary3dCPU1
IConstraintCPU1 IDomainConstraint3dCPU1 
Group <b>DirichletBoundary</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint3dCPU1.html">IDomainConstraint3dCPU1</a> <a href="DirichletBoundary3dCPU1.html">DirichletBoundary3dCPU1</a> <br><table><tr><td colspan=2><h3>DirichletBoundary3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletBoundary3dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletBoundary3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber3d.html">CondUserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Vector, c_string Functions, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number ConstantValue, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string LuaCallback, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletBoundary3dCPU1

DirichletBoundary3dCPU1 ()
DirichletBoundary3dCPU1 ()<br>Constructor of class <b>DirichletBoundary3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber3d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="CondUserNumber3d.html">CondUserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector3d> Vector, c_string Functions, c_string Subsets)
void add (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Vector, c_string Functions, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (number ConstantValue, c_string Function, c_string Subsets)
void add (number ConstantValue, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (c_string LuaCallback, c_string Function, c_string Subsets)
void add (c_string LuaCallback, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace3d> ApproximationSpace)
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br><br>Member function of class <b>DirichletBoundary3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>DirichletBoundary3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DirichletBoundary3dCPU2
IConstraintCPU2 IDomainConstraint3dCPU2 
Group <b>DirichletBoundary</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint3dCPU2.html">IDomainConstraint3dCPU2</a> <a href="DirichletBoundary3dCPU2.html">DirichletBoundary3dCPU2</a> <br><table><tr><td colspan=2><h3>DirichletBoundary3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletBoundary3dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletBoundary3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber3d.html">CondUserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Vector, c_string Functions, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number ConstantValue, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string LuaCallback, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletBoundary3dCPU2

DirichletBoundary3dCPU2 ()
DirichletBoundary3dCPU2 ()<br>Constructor of class <b>DirichletBoundary3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber3d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="CondUserNumber3d.html">CondUserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector3d> Vector, c_string Functions, c_string Subsets)
void add (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Vector, c_string Functions, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (number ConstantValue, c_string Function, c_string Subsets)
void add (number ConstantValue, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (c_string LuaCallback, c_string Function, c_string Subsets)
void add (c_string LuaCallback, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace3d> ApproximationSpace)
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br><br>Member function of class <b>DirichletBoundary3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>DirichletBoundary3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DirichletBoundary3dCPU3
IConstraintCPU3 IDomainConstraint3dCPU3 
Group <b>DirichletBoundary</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint3dCPU3.html">IDomainConstraint3dCPU3</a> <a href="DirichletBoundary3dCPU3.html">DirichletBoundary3dCPU3</a> <br><table><tr><td colspan=2><h3>DirichletBoundary3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletBoundary3dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletBoundary3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber3d.html">CondUserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Vector, c_string Functions, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number ConstantValue, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string LuaCallback, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletBoundary3dCPU3

DirichletBoundary3dCPU3 ()
DirichletBoundary3dCPU3 ()<br>Constructor of class <b>DirichletBoundary3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber3d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="CondUserNumber3d.html">CondUserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector3d> Vector, c_string Functions, c_string Subsets)
void add (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Vector, c_string Functions, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (number ConstantValue, c_string Function, c_string Subsets)
void add (number ConstantValue, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (c_string LuaCallback, c_string Function, c_string Subsets)
void add (c_string LuaCallback, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace3d> ApproximationSpace)
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br><br>Member function of class <b>DirichletBoundary3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>DirichletBoundary3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DirichletTimeDependent1d
IElemDisc IDomainElemDisc1d 
Group <b>DirichletTimeDependent</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="DirichletTimeDependent1d.html">DirichletTimeDependent1d</a> <br><table><tr><td colspan=2><h3>DirichletTimeDependent1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletTimeDependent1d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletTimeDependent1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_name (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletTimeDependent1d

DirichletTimeDependent1d (c_string Functions, c_string Subset(s))
DirichletTimeDependent1d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>DirichletTimeDependent1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_rhs
void
void set_rhs (IFunctionNumber)
void set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>DirichletTimeDependent1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_name
void
void set_name (c_string )
void set_name (c_string )<br><br>Member function of class <b>DirichletTimeDependent1d</b><br>group: <b>ug4/Neuron/</b>
;
class
DirichletTimeDependent2d
IElemDisc IDomainElemDisc2d 
Group <b>DirichletTimeDependent</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="DirichletTimeDependent2d.html">DirichletTimeDependent2d</a> <br><table><tr><td colspan=2><h3>DirichletTimeDependent2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletTimeDependent2d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletTimeDependent2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_name (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletTimeDependent2d

DirichletTimeDependent2d (c_string Functions, c_string Subset(s))
DirichletTimeDependent2d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>DirichletTimeDependent2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_rhs
void
void set_rhs (IFunctionNumber)
void set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>DirichletTimeDependent2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_name
void
void set_name (c_string )
void set_name (c_string )<br><br>Member function of class <b>DirichletTimeDependent2d</b><br>group: <b>ug4/Neuron/</b>
;
class
DirichletTimeDependent3d
IElemDisc IDomainElemDisc3d 
Group <b>DirichletTimeDependent</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="DirichletTimeDependent3d.html">DirichletTimeDependent3d</a> <br><table><tr><td colspan=2><h3>DirichletTimeDependent3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletTimeDependent3d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletTimeDependent3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_name (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletTimeDependent3d

DirichletTimeDependent3d (c_string Functions, c_string Subset(s))
DirichletTimeDependent3d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>DirichletTimeDependent3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_rhs
void
void set_rhs (IFunctionNumber)
void set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>DirichletTimeDependent3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_name
void
void set_name (c_string )
void set_name (c_string )<br><br>Member function of class <b>DirichletTimeDependent3d</b><br>group: <b>ug4/Neuron/</b>
;
class
Domain1d
IDomain 
Group <b>Domain</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IDomain.html">IDomain</a> <a href="Domain1d.html">Domain1d</a> <br><table><tr><td colspan=2><h3>Domain1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Domain1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomain Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="MultiGrid.html">MultiGrid</a>&gt; </td><td class="memItemRight" valign=bottom>grid ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="MGSubsetHandler.html">MGSubsetHandler</a>&gt; </td><td class="memItemRight" valign=bottom>subset_handler ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited IDomain Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td><br></td></tr></table>
constructor
Domain1d

Domain1d ()
Domain1d ()<br>Constructor of class <b>Domain1d</b><br>group: <b>/ug4/Domain</b>
;
class
Domain2d
IDomain 
Group <b>Domain</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IDomain.html">IDomain</a> <a href="Domain2d.html">Domain2d</a> <br><table><tr><td colspan=2><h3>Domain2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Domain2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomain Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="MultiGrid.html">MultiGrid</a>&gt; </td><td class="memItemRight" valign=bottom>grid ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="MGSubsetHandler.html">MGSubsetHandler</a>&gt; </td><td class="memItemRight" valign=bottom>subset_handler ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited IDomain Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td><br></td></tr></table>
constructor
Domain2d

Domain2d ()
Domain2d ()<br>Constructor of class <b>Domain2d</b><br>group: <b>/ug4/Domain</b>
;
class
Domain3d
IDomain 
Group <b>Domain</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IDomain.html">IDomain</a> <a href="Domain3d.html">Domain3d</a> <br><table><tr><td colspan=2><h3>Domain3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Domain3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomain Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="MultiGrid.html">MultiGrid</a>&gt; </td><td class="memItemRight" valign=bottom>grid ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="MGSubsetHandler.html">MGSubsetHandler</a>&gt; </td><td class="memItemRight" valign=bottom>subset_handler ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited IDomain Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td><br></td></tr></table>
constructor
Domain3d

Domain3d ()
Domain3d ()<br>Constructor of class <b>Domain3d</b><br>group: <b>/ug4/Domain</b>
;
class
DomainDiscretization1dCPU1
IAssembleCPU1 IDomainDiscretizationCPU1 
Group <b>DomainDiscretization</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a> <a href="DomainDiscretization1dCPU1.html">DomainDiscretization1dCPU1</a> <br><table><tr><td colspan=2><h3>DomainDiscretization1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DomainDiscretization1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DomainDiscretization1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainConstraint1dCPU1.html">IDomainConstraint1dCPU1</a>&gt; Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a>&gt; Element Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDiscretizationItem1dCPU1.html">IDiscretizationItem1dCPU1</a>&gt; DiscItem)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>force_regular_grid (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomainDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
DomainDiscretization1dCPU1

DomainDiscretization1dCPU1 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
DomainDiscretization1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>DomainDiscretization1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainConstraint1dCPU1> Post Process)
void add (SmartPtr&lt;<a href="IDomainConstraint1dCPU1.html">IDomainConstraint1dCPU1</a>&gt; Post Process)<br><br>Member function of class <b>DomainDiscretization1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainElemDisc1d> Element Discretization)
void add (SmartPtr&lt;<a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a>&gt; Element Discretization)<br><br>Member function of class <b>DomainDiscretization1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDiscretizationItem1dCPU1> DiscItem)
void add (SmartPtr&lt;<a href="IDiscretizationItem1dCPU1.html">IDiscretizationItem1dCPU1</a>&gt; DiscItem)<br><br>Member function of class <b>DomainDiscretization1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
force_regular_grid
void
void force_regular_grid (bool )
void force_regular_grid (bool )<br><br>Member function of class <b>DomainDiscretization1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DomainDiscretization1dCPU2
IAssembleCPU2 IDomainDiscretizationCPU2 
Group <b>DomainDiscretization</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IAssembleCPU2.html">IAssembleCPU2</a> <a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a> <a href="DomainDiscretization1dCPU2.html">DomainDiscretization1dCPU2</a> <br><table><tr><td colspan=2><h3>DomainDiscretization1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DomainDiscretization1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DomainDiscretization1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainConstraint1dCPU2.html">IDomainConstraint1dCPU2</a>&gt; Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a>&gt; Element Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDiscretizationItem1dCPU2.html">IDiscretizationItem1dCPU2</a>&gt; DiscItem)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>force_regular_grid (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomainDiscretizationCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU2.html">VectorCPU2</a> *d(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *J(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *M, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
DomainDiscretization1dCPU2

DomainDiscretization1dCPU2 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
DomainDiscretization1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>DomainDiscretization1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainConstraint1dCPU2> Post Process)
void add (SmartPtr&lt;<a href="IDomainConstraint1dCPU2.html">IDomainConstraint1dCPU2</a>&gt; Post Process)<br><br>Member function of class <b>DomainDiscretization1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainElemDisc1d> Element Discretization)
void add (SmartPtr&lt;<a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a>&gt; Element Discretization)<br><br>Member function of class <b>DomainDiscretization1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDiscretizationItem1dCPU2> DiscItem)
void add (SmartPtr&lt;<a href="IDiscretizationItem1dCPU2.html">IDiscretizationItem1dCPU2</a>&gt; DiscItem)<br><br>Member function of class <b>DomainDiscretization1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
force_regular_grid
void
void force_regular_grid (bool )
void force_regular_grid (bool )<br><br>Member function of class <b>DomainDiscretization1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DomainDiscretization1dCPU3
IAssembleCPU3 IDomainDiscretizationCPU3 
Group <b>DomainDiscretization</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IAssembleCPU3.html">IAssembleCPU3</a> <a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a> <a href="DomainDiscretization1dCPU3.html">DomainDiscretization1dCPU3</a> <br><table><tr><td colspan=2><h3>DomainDiscretization1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DomainDiscretization1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DomainDiscretization1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainConstraint1dCPU3.html">IDomainConstraint1dCPU3</a>&gt; Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a>&gt; Element Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDiscretizationItem1dCPU3.html">IDiscretizationItem1dCPU3</a>&gt; DiscItem)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>force_regular_grid (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomainDiscretizationCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU3.html">VectorCPU3</a> *d(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *J(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *M, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
DomainDiscretization1dCPU3

DomainDiscretization1dCPU3 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
DomainDiscretization1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>DomainDiscretization1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainConstraint1dCPU3> Post Process)
void add (SmartPtr&lt;<a href="IDomainConstraint1dCPU3.html">IDomainConstraint1dCPU3</a>&gt; Post Process)<br><br>Member function of class <b>DomainDiscretization1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainElemDisc1d> Element Discretization)
void add (SmartPtr&lt;<a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a>&gt; Element Discretization)<br><br>Member function of class <b>DomainDiscretization1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDiscretizationItem1dCPU3> DiscItem)
void add (SmartPtr&lt;<a href="IDiscretizationItem1dCPU3.html">IDiscretizationItem1dCPU3</a>&gt; DiscItem)<br><br>Member function of class <b>DomainDiscretization1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
force_regular_grid
void
void force_regular_grid (bool )
void force_regular_grid (bool )<br><br>Member function of class <b>DomainDiscretization1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DomainDiscretization2dCPU1
IAssembleCPU1 IDomainDiscretizationCPU1 
Group <b>DomainDiscretization</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a> <a href="DomainDiscretization2dCPU1.html">DomainDiscretization2dCPU1</a> <br><table><tr><td colspan=2><h3>DomainDiscretization2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DomainDiscretization2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DomainDiscretization2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a>&gt; Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a>&gt; Element Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDiscretizationItem2dCPU1.html">IDiscretizationItem2dCPU1</a>&gt; DiscItem)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>force_regular_grid (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomainDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
DomainDiscretization2dCPU1

DomainDiscretization2dCPU1 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
DomainDiscretization2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>DomainDiscretization2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainConstraint2dCPU1> Post Process)
void add (SmartPtr&lt;<a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a>&gt; Post Process)<br><br>Member function of class <b>DomainDiscretization2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainElemDisc2d> Element Discretization)
void add (SmartPtr&lt;<a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a>&gt; Element Discretization)<br><br>Member function of class <b>DomainDiscretization2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDiscretizationItem2dCPU1> DiscItem)
void add (SmartPtr&lt;<a href="IDiscretizationItem2dCPU1.html">IDiscretizationItem2dCPU1</a>&gt; DiscItem)<br><br>Member function of class <b>DomainDiscretization2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
force_regular_grid
void
void force_regular_grid (bool )
void force_regular_grid (bool )<br><br>Member function of class <b>DomainDiscretization2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DomainDiscretization2dCPU2
IAssembleCPU2 IDomainDiscretizationCPU2 
Group <b>DomainDiscretization</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IAssembleCPU2.html">IAssembleCPU2</a> <a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a> <a href="DomainDiscretization2dCPU2.html">DomainDiscretization2dCPU2</a> <br><table><tr><td colspan=2><h3>DomainDiscretization2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DomainDiscretization2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DomainDiscretization2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainConstraint2dCPU2.html">IDomainConstraint2dCPU2</a>&gt; Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a>&gt; Element Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDiscretizationItem2dCPU2.html">IDiscretizationItem2dCPU2</a>&gt; DiscItem)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>force_regular_grid (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomainDiscretizationCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU2.html">VectorCPU2</a> *d(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *J(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *M, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
DomainDiscretization2dCPU2

DomainDiscretization2dCPU2 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
DomainDiscretization2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>DomainDiscretization2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainConstraint2dCPU2> Post Process)
void add (SmartPtr&lt;<a href="IDomainConstraint2dCPU2.html">IDomainConstraint2dCPU2</a>&gt; Post Process)<br><br>Member function of class <b>DomainDiscretization2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainElemDisc2d> Element Discretization)
void add (SmartPtr&lt;<a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a>&gt; Element Discretization)<br><br>Member function of class <b>DomainDiscretization2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDiscretizationItem2dCPU2> DiscItem)
void add (SmartPtr&lt;<a href="IDiscretizationItem2dCPU2.html">IDiscretizationItem2dCPU2</a>&gt; DiscItem)<br><br>Member function of class <b>DomainDiscretization2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
force_regular_grid
void
void force_regular_grid (bool )
void force_regular_grid (bool )<br><br>Member function of class <b>DomainDiscretization2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DomainDiscretization2dCPU3
IAssembleCPU3 IDomainDiscretizationCPU3 
Group <b>DomainDiscretization</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IAssembleCPU3.html">IAssembleCPU3</a> <a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a> <a href="DomainDiscretization2dCPU3.html">DomainDiscretization2dCPU3</a> <br><table><tr><td colspan=2><h3>DomainDiscretization2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DomainDiscretization2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DomainDiscretization2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainConstraint2dCPU3.html">IDomainConstraint2dCPU3</a>&gt; Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a>&gt; Element Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDiscretizationItem2dCPU3.html">IDiscretizationItem2dCPU3</a>&gt; DiscItem)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>force_regular_grid (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomainDiscretizationCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU3.html">VectorCPU3</a> *d(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *J(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *M, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
DomainDiscretization2dCPU3

DomainDiscretization2dCPU3 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
DomainDiscretization2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>DomainDiscretization2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainConstraint2dCPU3> Post Process)
void add (SmartPtr&lt;<a href="IDomainConstraint2dCPU3.html">IDomainConstraint2dCPU3</a>&gt; Post Process)<br><br>Member function of class <b>DomainDiscretization2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainElemDisc2d> Element Discretization)
void add (SmartPtr&lt;<a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a>&gt; Element Discretization)<br><br>Member function of class <b>DomainDiscretization2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDiscretizationItem2dCPU3> DiscItem)
void add (SmartPtr&lt;<a href="IDiscretizationItem2dCPU3.html">IDiscretizationItem2dCPU3</a>&gt; DiscItem)<br><br>Member function of class <b>DomainDiscretization2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
force_regular_grid
void
void force_regular_grid (bool )
void force_regular_grid (bool )<br><br>Member function of class <b>DomainDiscretization2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DomainDiscretization3dCPU1
IAssembleCPU1 IDomainDiscretizationCPU1 
Group <b>DomainDiscretization</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a> <a href="DomainDiscretization3dCPU1.html">DomainDiscretization3dCPU1</a> <br><table><tr><td colspan=2><h3>DomainDiscretization3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DomainDiscretization3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DomainDiscretization3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainConstraint3dCPU1.html">IDomainConstraint3dCPU1</a>&gt; Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a>&gt; Element Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDiscretizationItem3dCPU1.html">IDiscretizationItem3dCPU1</a>&gt; DiscItem)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>force_regular_grid (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomainDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
DomainDiscretization3dCPU1

DomainDiscretization3dCPU1 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
DomainDiscretization3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>DomainDiscretization3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainConstraint3dCPU1> Post Process)
void add (SmartPtr&lt;<a href="IDomainConstraint3dCPU1.html">IDomainConstraint3dCPU1</a>&gt; Post Process)<br><br>Member function of class <b>DomainDiscretization3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainElemDisc3d> Element Discretization)
void add (SmartPtr&lt;<a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a>&gt; Element Discretization)<br><br>Member function of class <b>DomainDiscretization3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDiscretizationItem3dCPU1> DiscItem)
void add (SmartPtr&lt;<a href="IDiscretizationItem3dCPU1.html">IDiscretizationItem3dCPU1</a>&gt; DiscItem)<br><br>Member function of class <b>DomainDiscretization3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
force_regular_grid
void
void force_regular_grid (bool )
void force_regular_grid (bool )<br><br>Member function of class <b>DomainDiscretization3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DomainDiscretization3dCPU2
IAssembleCPU2 IDomainDiscretizationCPU2 
Group <b>DomainDiscretization</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IAssembleCPU2.html">IAssembleCPU2</a> <a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a> <a href="DomainDiscretization3dCPU2.html">DomainDiscretization3dCPU2</a> <br><table><tr><td colspan=2><h3>DomainDiscretization3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DomainDiscretization3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DomainDiscretization3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainConstraint3dCPU2.html">IDomainConstraint3dCPU2</a>&gt; Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a>&gt; Element Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDiscretizationItem3dCPU2.html">IDiscretizationItem3dCPU2</a>&gt; DiscItem)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>force_regular_grid (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomainDiscretizationCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU2.html">VectorCPU2</a> *d(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *J(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *M, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
DomainDiscretization3dCPU2

DomainDiscretization3dCPU2 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
DomainDiscretization3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>DomainDiscretization3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainConstraint3dCPU2> Post Process)
void add (SmartPtr&lt;<a href="IDomainConstraint3dCPU2.html">IDomainConstraint3dCPU2</a>&gt; Post Process)<br><br>Member function of class <b>DomainDiscretization3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainElemDisc3d> Element Discretization)
void add (SmartPtr&lt;<a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a>&gt; Element Discretization)<br><br>Member function of class <b>DomainDiscretization3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDiscretizationItem3dCPU2> DiscItem)
void add (SmartPtr&lt;<a href="IDiscretizationItem3dCPU2.html">IDiscretizationItem3dCPU2</a>&gt; DiscItem)<br><br>Member function of class <b>DomainDiscretization3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
force_regular_grid
void
void force_regular_grid (bool )
void force_regular_grid (bool )<br><br>Member function of class <b>DomainDiscretization3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DomainDiscretization3dCPU3
IAssembleCPU3 IDomainDiscretizationCPU3 
Group <b>DomainDiscretization</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IAssembleCPU3.html">IAssembleCPU3</a> <a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a> <a href="DomainDiscretization3dCPU3.html">DomainDiscretization3dCPU3</a> <br><table><tr><td colspan=2><h3>DomainDiscretization3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DomainDiscretization3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DomainDiscretization3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainConstraint3dCPU3.html">IDomainConstraint3dCPU3</a>&gt; Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a>&gt; Element Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDiscretizationItem3dCPU3.html">IDiscretizationItem3dCPU3</a>&gt; DiscItem)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>force_regular_grid (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomainDiscretizationCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU3.html">VectorCPU3</a> *d(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *J(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *M, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
DomainDiscretization3dCPU3

DomainDiscretization3dCPU3 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
DomainDiscretization3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>DomainDiscretization3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainConstraint3dCPU3> Post Process)
void add (SmartPtr&lt;<a href="IDomainConstraint3dCPU3.html">IDomainConstraint3dCPU3</a>&gt; Post Process)<br><br>Member function of class <b>DomainDiscretization3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainElemDisc3d> Element Discretization)
void add (SmartPtr&lt;<a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a>&gt; Element Discretization)<br><br>Member function of class <b>DomainDiscretization3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDiscretizationItem3dCPU3> DiscItem)
void add (SmartPtr&lt;<a href="IDiscretizationItem3dCPU3.html">IDiscretizationItem3dCPU3</a>&gt; DiscItem)<br><br>Member function of class <b>DomainDiscretization3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
force_regular_grid
void
void force_regular_grid (bool )
void force_regular_grid (bool )<br><br>Member function of class <b>DomainDiscretization3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
EigenSolverCPU1

Group <b>EigenSolver</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br><table><tr><td colspan=2><h3>EigenSolverCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>EigenSolverCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>EigenSolverCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_vector (<a href="VectorCPU1.html">VectorCPU1</a> *vector)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>apply ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_linear_operator_A (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; LinearOperatorA)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_linear_operator_B (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *LinearOperatorB)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_iterations (integer precision)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_pinvit (integer iPINVIT)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: 1 = preconditioned inverse block iteration, 2 = preconditioned block gradient descent, 3 = LOBPCG<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_precision (number precision)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr></table>
constructor
EigenSolverCPU1

EigenSolverCPU1 ()
EigenSolverCPU1 ()<br>Constructor of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
add_vector
void
void add_vector (VectorCPU1vector)
void add_vector (<a href="VectorCPU1.html">VectorCPU1</a> *vector)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_preconditioner
void
void set_preconditioner (SmartPtr<ILinearIteratorCPU1> Preconditioner)
void set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_linear_operator_A
bool
bool set_linear_operator_A (SmartPtr<ILinearOperatorCPU1> LinearOperatorA)
bool set_linear_operator_A (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; LinearOperatorA)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_linear_operator_B
bool
bool set_linear_operator_B (MatrixOperatorCPU1LinearOperatorB)
bool set_linear_operator_B (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *LinearOperatorB)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_max_iterations
void
void set_max_iterations (integer precision)
void set_max_iterations (integer precision)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_precision
void
void set_precision (number precision)
void set_precision (number precision)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_pinvit
void
void set_pinvit (integer iPINVIT)
void set_pinvit (integer iPINVIT)<br><br>Member function of class <b>EigenSolverCPU1</b><br>tooltip: 1 = preconditioned inverse block iteration, 2 = preconditioned block gradient descent, 3 = LOBPCG<br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
apply
integer
integer apply ()
integer apply ()<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
EigenSolverCPU2

Group <b>EigenSolver</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br><table><tr><td colspan=2><h3>EigenSolverCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>EigenSolverCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>EigenSolverCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_vector (<a href="VectorCPU2.html">VectorCPU2</a> *vector)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>apply ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_linear_operator_A (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; LinearOperatorA)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_linear_operator_B (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *LinearOperatorB)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_iterations (integer precision)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_pinvit (integer iPINVIT)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: 1 = preconditioned inverse block iteration, 2 = preconditioned block gradient descent, 3 = LOBPCG<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_precision (number precision)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr></table>
constructor
EigenSolverCPU2

EigenSolverCPU2 ()
EigenSolverCPU2 ()<br>Constructor of class <b>EigenSolverCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
add_vector
void
void add_vector (VectorCPU2vector)
void add_vector (<a href="VectorCPU2.html">VectorCPU2</a> *vector)<br><br>Member function of class <b>EigenSolverCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_preconditioner
void
void set_preconditioner (SmartPtr<ILinearIteratorCPU2> Preconditioner)
void set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Preconditioner)<br><br>Member function of class <b>EigenSolverCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_linear_operator_A
bool
bool set_linear_operator_A (SmartPtr<ILinearOperatorCPU2> LinearOperatorA)
bool set_linear_operator_A (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; LinearOperatorA)<br><br>Member function of class <b>EigenSolverCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_linear_operator_B
bool
bool set_linear_operator_B (MatrixOperatorCPU2LinearOperatorB)
bool set_linear_operator_B (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *LinearOperatorB)<br><br>Member function of class <b>EigenSolverCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_max_iterations
void
void set_max_iterations (integer precision)
void set_max_iterations (integer precision)<br><br>Member function of class <b>EigenSolverCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_precision
void
void set_precision (number precision)
void set_precision (number precision)<br><br>Member function of class <b>EigenSolverCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_pinvit
void
void set_pinvit (integer iPINVIT)
void set_pinvit (integer iPINVIT)<br><br>Member function of class <b>EigenSolverCPU2</b><br>tooltip: 1 = preconditioned inverse block iteration, 2 = preconditioned block gradient descent, 3 = LOBPCG<br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
apply
integer
integer apply ()
integer apply ()<br><br>Member function of class <b>EigenSolverCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
EigenSolverCPU3

Group <b>EigenSolver</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br><table><tr><td colspan=2><h3>EigenSolverCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>EigenSolverCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>EigenSolverCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_vector (<a href="VectorCPU3.html">VectorCPU3</a> *vector)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>apply ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_linear_operator_A (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; LinearOperatorA)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_linear_operator_B (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *LinearOperatorB)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_iterations (integer precision)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_pinvit (integer iPINVIT)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: 1 = preconditioned inverse block iteration, 2 = preconditioned block gradient descent, 3 = LOBPCG<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_precision (number precision)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr></table>
constructor
EigenSolverCPU3

EigenSolverCPU3 ()
EigenSolverCPU3 ()<br>Constructor of class <b>EigenSolverCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
add_vector
void
void add_vector (VectorCPU3vector)
void add_vector (<a href="VectorCPU3.html">VectorCPU3</a> *vector)<br><br>Member function of class <b>EigenSolverCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_preconditioner
void
void set_preconditioner (SmartPtr<ILinearIteratorCPU3> Preconditioner)
void set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Preconditioner)<br><br>Member function of class <b>EigenSolverCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_linear_operator_A
bool
bool set_linear_operator_A (SmartPtr<ILinearOperatorCPU3> LinearOperatorA)
bool set_linear_operator_A (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; LinearOperatorA)<br><br>Member function of class <b>EigenSolverCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_linear_operator_B
bool
bool set_linear_operator_B (MatrixOperatorCPU3LinearOperatorB)
bool set_linear_operator_B (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *LinearOperatorB)<br><br>Member function of class <b>EigenSolverCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_max_iterations
void
void set_max_iterations (integer precision)
void set_max_iterations (integer precision)<br><br>Member function of class <b>EigenSolverCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_precision
void
void set_precision (number precision)
void set_precision (number precision)<br><br>Member function of class <b>EigenSolverCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_pinvit
void
void set_pinvit (integer iPINVIT)
void set_pinvit (integer iPINVIT)<br><br>Member function of class <b>EigenSolverCPU3</b><br>tooltip: 1 = preconditioned inverse block iteration, 2 = preconditioned block gradient descent, 3 = LOBPCG<br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
apply
integer
integer apply ()
integer apply ()<br><br>Member function of class <b>EigenSolverCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
ExpandLayersDesc
FractureInfoVec 
class has constructor. <br>Inheritance: <a href="FractureInfoVec.html">FractureInfoVec</a> <a href="ExpandLayersDesc.html">ExpandLayersDesc</a> <br><table><tr><td colspan=2><h3>ExpandLayersDesc Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ExpandLayersDesc ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ExpandLayersDesc Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_layer (integer , integer , number )</td></tr><tr><td><br></td></tr></table>
constructor
ExpandLayersDesc

ExpandLayersDesc ()
ExpandLayersDesc ()<br>Constructor of class <b>ExpandLayersDesc</b><br>group: <b>/ug4/Grid</b>
memberfunction
add_layer
void
void add_layer (integer , integer , number )
void add_layer (integer , integer , number )<br><br>Member function of class <b>ExpandLayersDesc</b><br>group: <b>/ug4/Grid</b>
;
class
FAMGPreconditionerCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 AMGBaseCPU1 
Group <b>FAMGPreconditioner</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Filtering Algebraic Multigrid<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="AMGBaseCPU1.html">AMGBaseCPU1</a> <a href="FAMGPreconditionerCPU1.html">FAMGPreconditionerCPU1</a> <br><table><tr><td colspan=2><h3>FAMGPreconditionerCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FAMGPreconditionerCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FAMGPreconditionerCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_testvector (<a href="VectorCPU1.html">VectorCPU1</a> *adds a testvector with weight, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns testVector#weight<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_testvector (<a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> *adds a testvector with weight by using the IVectorWriter interface, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns testVector#weight<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector (integer fromlevel, integer tolevel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector (integer fromlevel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_strong_connection_external ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset_testvectors ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: we can restrict the number of parent nodes by looking at the entries of H(i,j) to prevent high fill in rates (e.g. 1e-3)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_aggressive_coarsening (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damping_for_smoother_in_interpolation_calculation (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_after_communciate_prolongation (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_aggressive_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_calculate_parent_pairs (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_coloring (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_communicate_prolongation (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_external_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_get_ratings (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_overlap (integer , integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_phase_3 (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_precalculate_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_recv_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_send_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_testvector_calc (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_delta (number delta)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: "Interpolation quality" F may not be worse than this (F < m_delta). e.g. 0.5<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns bExternalCoarsening<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_galerkin_truncation (number galerkin_tr)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets galerkin truncation, a parameter used to truncate the galerkin product. use with care! (like 1e-9)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *parallelCoarsening)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: e.g. GetColorCoarsening()<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prereduce_A_parameter (number prereduceA)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: by setting this != 0.0, we reduce the matrix A before using it to its strong connections. (e.g. 1e-3)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation_truncation (number prolongation_tr)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets prolongation_truncation, a parameter used for truncation of interpolation. use with care! (like 1e-5)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_read_coarsening ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns epsilon<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_from_matrix_rows ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; sets the smoother to smooth testvectors)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns smoother<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_smooths (integer number of smoothing steps to smooth testvectors)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns n<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvectors_LE (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_theta (number theta)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: with multiple parents paris, discard pairs with m_theta * F > min F. e.g. 0.9<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_use_precalculate (bool bUsePrecalculate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: experimental way of coarsening. beta.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_coarsening ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_f_values (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns bWrite<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FAMGPreconditionerCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_H_reduce_interpolation_nodes_parameter ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns HreduceParameter<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_delta ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns delta<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_galerkin_truncation ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns galerkin_tr<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_prereduce_A_parameter ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns prereduceA<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_prolongation_truncation ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns prolongation_tr<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_theta ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns theta<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>tostring ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited AMGBaseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check2 (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_fsmoothing ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y_cycle (integer , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; basesmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_checkLevel_post_iterations (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer gamma)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_fsmoothing (bool enable)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix_write_path (c_string matrixWritePath)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: set the path where connectionviewer matrices of the levels are written<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_fill_before_base (number fillrate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_levels (integer max_levels)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_nodes_for_base (integer maxNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_min_nodes_on_one_processor (integer minNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_nr_of_preiterations_at_check (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: nr of mg cycles performed before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer nu2)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer nu1)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_one_init (bool b)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; postsmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preiterations_mimum_defect_at_check (number d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: minimum defect for preiterations before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; presmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_interfaces ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited AMGBaseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_cycle_type ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>get_fsmoothing ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns f smoothing enabled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_grid_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns grid complexity c_G<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="AMGLevelInformationCPU1.html">AMGLevelInformationCPU1</a> *</td><td class="memItemRight" valign=bottom>get_level_information (integer L)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns information about the level L<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_max_fill_before_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_nodes_for_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_min_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns minNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_postsmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_presmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_operator_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns operator complexity c_A<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_preferred_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns preferredNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_coarse_solver_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent in the coarse solver setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_whole_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent on the whole setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_used_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns used nr of AMG levels<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
FAMGPreconditionerCPU1

FAMGPreconditionerCPU1 ()
FAMGPreconditionerCPU1 ()<br>Constructor of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_aggressive_coarsening
void
void set_aggressive_coarsening (bool )
void set_aggressive_coarsening (bool )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_delta
void
void set_delta (number delta)
void set_delta (number delta)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: "Interpolation quality" F may not be worse than this (F < m_delta). e.g. 0.5<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_theta
void
void set_theta (number theta)
void set_theta (number theta)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: with multiple parents paris, discard pairs with m_theta * F > min F. e.g. 0.9<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_damping_for_smoother_in_interpolation_calculation
void
void set_damping_for_smoother_in_interpolation_calculation (number )
void set_damping_for_smoother_in_interpolation_calculation (number )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
add_testvector
void
void add_testvector (VectorCPU1adds a testvector with weight, number )
void add_testvector (<a href="VectorCPU1.html">VectorCPU1</a> *adds a testvector with weight, number )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns testVector#weight<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
add_testvector
void
void add_testvector (IVectorWriterCPU1adds a testvector with weight by using the IVectorWriter interface, number )
void add_testvector (<a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> *adds a testvector with weight by using the IVectorWriter interface, number )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns testVector#weight<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_testvectors
void
void set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)
void set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns bWrite<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_smoother
void
void set_testvector_smoother (SmartPtr<ILinearIteratorCPU1> sets the smoother to smooth testvectors)
void set_testvector_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; sets the smoother to smooth testvectors)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns smoother<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_smooths
void
void set_testvector_smooths (integer number of smoothing steps to smooth testvectors)
void set_testvector_smooths (integer number of smoothing steps to smooth testvectors)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns n<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_from_matrix_rows
void
void set_testvector_from_matrix_rows ()
void set_testvector_from_matrix_rows ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvectors_LE
void
void set_testvectors_LE (number )
void set_testvectors_LE (number )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
reset_testvectors
void
void reset_testvectors ()
void reset_testvectors ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_prolongation_truncation
void
void set_prolongation_truncation (number prolongation_tr)
void set_prolongation_truncation (number prolongation_tr)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: sets prolongation_truncation, a parameter used for truncation of interpolation. use with care! (like 1e-5)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_galerkin_truncation
void
void set_galerkin_truncation (number galerkin_tr)
void set_galerkin_truncation (number galerkin_tr)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: sets galerkin truncation, a parameter used to truncate the galerkin product. use with care! (like 1e-9)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_H_reduce_interpolation_nodes_parameter
void
void set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)
void set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: we can restrict the number of parent nodes by looking at the entries of H(i,j) to prevent high fill in rates (e.g. 1e-3)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_prereduce_A_parameter
void
void set_prereduce_A_parameter (number prereduceA)
void set_prereduce_A_parameter (number prereduceA)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: by setting this != 0.0, we reduce the matrix A before using it to its strong connections. (e.g. 1e-3)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_external_coarsening
void
void set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)
void set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns bExternalCoarsening<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_strong_connection_external
void
void set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))
void set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns epsilon<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_strong_connection_external
number
number get_strong_connection_external ()
number get_strong_connection_external ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_coarsening
void
void set_write_coarsening ()
void set_write_coarsening ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_read_coarsening
void
void set_read_coarsening ()
void set_read_coarsening ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_parallel_coarsening
void
void set_parallel_coarsening (IParallelCoarseningparallelCoarsening)
void set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *parallelCoarsening)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: e.g. GetColorCoarsening()<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_use_precalculate
void
void set_use_precalculate (bool bUsePrecalculate)
void set_use_precalculate (bool bUsePrecalculate)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: experimental way of coarsening. beta.<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_overlap
void
void set_debug_level_overlap (integer , integer )
void set_debug_level_overlap (integer , integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_testvector_calc
void
void set_debug_level_testvector_calc (integer )
void set_debug_level_testvector_calc (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_phase_3
void
void set_debug_level_phase_3 (integer )
void set_debug_level_phase_3 (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_calculate_parent_pairs
void
void set_debug_level_calculate_parent_pairs (integer )
void set_debug_level_calculate_parent_pairs (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_recv_coarsening
void
void set_debug_level_recv_coarsening (integer )
void set_debug_level_recv_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_coloring
void
void set_debug_level_coloring (integer )
void set_debug_level_coloring (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_get_ratings
void
void set_debug_level_get_ratings (integer )
void set_debug_level_get_ratings (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_precalculate_coarsening
void
void set_debug_level_precalculate_coarsening (integer )
void set_debug_level_precalculate_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_aggressive_coarsening
void
void set_debug_level_aggressive_coarsening (integer )
void set_debug_level_aggressive_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_send_coarsening
void
void set_debug_level_send_coarsening (integer )
void set_debug_level_send_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_communicate_prolongation
void
void set_debug_level_communicate_prolongation (integer )
void set_debug_level_communicate_prolongation (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_after_communciate_prolongation
void
void set_debug_level_after_communciate_prolongation (integer )
void set_debug_level_after_communciate_prolongation (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_external_coarsening
void
void set_debug_level_external_coarsening (integer )
void set_debug_level_external_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_f_values
void
void set_write_f_values (bool )
void set_write_f_values (bool )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector ()
bool check_testvector ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector (integer fromlevel)
bool check_testvector (integer fromlevel)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector (integer fromlevel, integer tolevel)
bool check_testvector (integer fromlevel, integer tolevel)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
tostring
void
void tostring () const
void tostring ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_delta
number
number get_delta () const
number get_delta ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns delta<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_theta
number
number get_theta () const
number get_theta ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns theta<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_prolongation_truncation
number
number get_prolongation_truncation () const
number get_prolongation_truncation ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns prolongation_tr<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_galerkin_truncation
number
number get_galerkin_truncation () const
number get_galerkin_truncation ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns galerkin_tr<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_H_reduce_interpolation_nodes_parameter
number
number get_H_reduce_interpolation_nodes_parameter () const
number get_H_reduce_interpolation_nodes_parameter ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns HreduceParameter<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_prereduce_A_parameter
number
number get_prereduce_A_parameter () const
number get_prereduce_A_parameter ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns prereduceA<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
FAMGPreconditionerCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 IPreconditionerCPU2 AMGBaseCPU2 
Group <b>FAMGPreconditioner</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Filtering Algebraic Multigrid<br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <a href="AMGBaseCPU2.html">AMGBaseCPU2</a> <a href="FAMGPreconditionerCPU2.html">FAMGPreconditionerCPU2</a> <br><table><tr><td colspan=2><h3>FAMGPreconditionerCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FAMGPreconditionerCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FAMGPreconditionerCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_testvector (<a href="VectorCPU2.html">VectorCPU2</a> *adds a testvector with weight, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns testVector#weight<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_testvector (<a href="IVectorWriterCPU2.html">IVectorWriterCPU2</a> *adds a testvector with weight by using the IVectorWriter interface, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns testVector#weight<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector (integer fromlevel, integer tolevel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector (integer fromlevel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_strong_connection_external ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset_testvectors ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: we can restrict the number of parent nodes by looking at the entries of H(i,j) to prevent high fill in rates (e.g. 1e-3)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_aggressive_coarsening (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damping_for_smoother_in_interpolation_calculation (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_after_communciate_prolongation (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_aggressive_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_calculate_parent_pairs (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_coloring (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_communicate_prolongation (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_external_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_get_ratings (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_overlap (integer , integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_phase_3 (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_precalculate_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_recv_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_send_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_testvector_calc (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_delta (number delta)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: "Interpolation quality" F may not be worse than this (F < m_delta). e.g. 0.5<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns bExternalCoarsening<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_galerkin_truncation (number galerkin_tr)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets galerkin truncation, a parameter used to truncate the galerkin product. use with care! (like 1e-9)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *parallelCoarsening)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: e.g. GetColorCoarsening()<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prereduce_A_parameter (number prereduceA)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: by setting this != 0.0, we reduce the matrix A before using it to its strong connections. (e.g. 1e-3)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation_truncation (number prolongation_tr)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets prolongation_truncation, a parameter used for truncation of interpolation. use with care! (like 1e-5)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_read_coarsening ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns epsilon<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_from_matrix_rows ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; sets the smoother to smooth testvectors)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns smoother<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_smooths (integer number of smoothing steps to smooth testvectors)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns n<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvectors_LE (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_theta (number theta)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: with multiple parents paris, discard pairs with m_theta * F > min F. e.g. 0.9<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_use_precalculate (bool bUsePrecalculate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: experimental way of coarsening. beta.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_coarsening ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_f_values (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns bWrite<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FAMGPreconditionerCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_H_reduce_interpolation_nodes_parameter ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns HreduceParameter<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_delta ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns delta<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_galerkin_truncation ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns galerkin_tr<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_prereduce_A_parameter ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns prereduceA<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_prolongation_truncation ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns prolongation_tr<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_theta ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns theta<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>tostring ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited AMGBaseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check (const <a href="VectorCPU2.html">VectorCPU2</a> *x, const <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check2 (const <a href="VectorCPU2.html">VectorCPU2</a> *x, const <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_fsmoothing ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y_cycle (integer , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; basesmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_checkLevel_post_iterations (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer gamma)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_fsmoothing (bool enable)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix_write_path (c_string matrixWritePath)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: set the path where connectionviewer matrices of the levels are written<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_fill_before_base (number fillrate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_levels (integer max_levels)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_nodes_for_base (integer maxNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_min_nodes_on_one_processor (integer minNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_nr_of_preiterations_at_check (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: nr of mg cycles performed before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer nu2)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer nu1)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_one_init (bool b)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; postsmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preiterations_mimum_defect_at_check (number d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: minimum defect for preiterations before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; presmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_interfaces ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited AMGBaseCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_cycle_type ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>get_fsmoothing ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns f smoothing enabled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_grid_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns grid complexity c_G<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="AMGLevelInformationCPU2.html">AMGLevelInformationCPU2</a> *</td><td class="memItemRight" valign=bottom>get_level_information (integer L)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns information about the level L<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_max_fill_before_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_nodes_for_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_min_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns minNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_postsmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_presmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_operator_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns operator complexity c_A<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_preferred_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns preferredNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_coarse_solver_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent in the coarse solver setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_whole_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent on the whole setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_used_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns used nr of AMG levels<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
FAMGPreconditionerCPU2

FAMGPreconditionerCPU2 ()
FAMGPreconditionerCPU2 ()<br>Constructor of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_aggressive_coarsening
void
void set_aggressive_coarsening (bool )
void set_aggressive_coarsening (bool )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_delta
void
void set_delta (number delta)
void set_delta (number delta)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>tooltip: "Interpolation quality" F may not be worse than this (F < m_delta). e.g. 0.5<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_theta
void
void set_theta (number theta)
void set_theta (number theta)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>tooltip: with multiple parents paris, discard pairs with m_theta * F > min F. e.g. 0.9<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_damping_for_smoother_in_interpolation_calculation
void
void set_damping_for_smoother_in_interpolation_calculation (number )
void set_damping_for_smoother_in_interpolation_calculation (number )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
add_testvector
void
void add_testvector (VectorCPU2adds a testvector with weight, number )
void add_testvector (<a href="VectorCPU2.html">VectorCPU2</a> *adds a testvector with weight, number )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns testVector#weight<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
add_testvector
void
void add_testvector (IVectorWriterCPU2adds a testvector with weight by using the IVectorWriter interface, number )
void add_testvector (<a href="IVectorWriterCPU2.html">IVectorWriterCPU2</a> *adds a testvector with weight by using the IVectorWriter interface, number )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns testVector#weight<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_testvectors
void
void set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)
void set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns bWrite<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_smoother
void
void set_testvector_smoother (SmartPtr<ILinearIteratorCPU2> sets the smoother to smooth testvectors)
void set_testvector_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; sets the smoother to smooth testvectors)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns smoother<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_smooths
void
void set_testvector_smooths (integer number of smoothing steps to smooth testvectors)
void set_testvector_smooths (integer number of smoothing steps to smooth testvectors)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns n<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_from_matrix_rows
void
void set_testvector_from_matrix_rows ()
void set_testvector_from_matrix_rows ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvectors_LE
void
void set_testvectors_LE (number )
void set_testvectors_LE (number )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
reset_testvectors
void
void reset_testvectors ()
void reset_testvectors ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_prolongation_truncation
void
void set_prolongation_truncation (number prolongation_tr)
void set_prolongation_truncation (number prolongation_tr)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>tooltip: sets prolongation_truncation, a parameter used for truncation of interpolation. use with care! (like 1e-5)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_galerkin_truncation
void
void set_galerkin_truncation (number galerkin_tr)
void set_galerkin_truncation (number galerkin_tr)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>tooltip: sets galerkin truncation, a parameter used to truncate the galerkin product. use with care! (like 1e-9)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_H_reduce_interpolation_nodes_parameter
void
void set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)
void set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>tooltip: we can restrict the number of parent nodes by looking at the entries of H(i,j) to prevent high fill in rates (e.g. 1e-3)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_prereduce_A_parameter
void
void set_prereduce_A_parameter (number prereduceA)
void set_prereduce_A_parameter (number prereduceA)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>tooltip: by setting this != 0.0, we reduce the matrix A before using it to its strong connections. (e.g. 1e-3)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_external_coarsening
void
void set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)
void set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns bExternalCoarsening<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_strong_connection_external
void
void set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))
void set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns epsilon<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_strong_connection_external
number
number get_strong_connection_external ()
number get_strong_connection_external ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_coarsening
void
void set_write_coarsening ()
void set_write_coarsening ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_read_coarsening
void
void set_read_coarsening ()
void set_read_coarsening ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_parallel_coarsening
void
void set_parallel_coarsening (IParallelCoarseningparallelCoarsening)
void set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *parallelCoarsening)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>tooltip: e.g. GetColorCoarsening()<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_use_precalculate
void
void set_use_precalculate (bool bUsePrecalculate)
void set_use_precalculate (bool bUsePrecalculate)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>tooltip: experimental way of coarsening. beta.<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_overlap
void
void set_debug_level_overlap (integer , integer )
void set_debug_level_overlap (integer , integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_testvector_calc
void
void set_debug_level_testvector_calc (integer )
void set_debug_level_testvector_calc (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_phase_3
void
void set_debug_level_phase_3 (integer )
void set_debug_level_phase_3 (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_calculate_parent_pairs
void
void set_debug_level_calculate_parent_pairs (integer )
void set_debug_level_calculate_parent_pairs (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_recv_coarsening
void
void set_debug_level_recv_coarsening (integer )
void set_debug_level_recv_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_coloring
void
void set_debug_level_coloring (integer )
void set_debug_level_coloring (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_get_ratings
void
void set_debug_level_get_ratings (integer )
void set_debug_level_get_ratings (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_precalculate_coarsening
void
void set_debug_level_precalculate_coarsening (integer )
void set_debug_level_precalculate_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_aggressive_coarsening
void
void set_debug_level_aggressive_coarsening (integer )
void set_debug_level_aggressive_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_send_coarsening
void
void set_debug_level_send_coarsening (integer )
void set_debug_level_send_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_communicate_prolongation
void
void set_debug_level_communicate_prolongation (integer )
void set_debug_level_communicate_prolongation (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_after_communciate_prolongation
void
void set_debug_level_after_communciate_prolongation (integer )
void set_debug_level_after_communciate_prolongation (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_external_coarsening
void
void set_debug_level_external_coarsening (integer )
void set_debug_level_external_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_f_values
void
void set_write_f_values (bool )
void set_write_f_values (bool )<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector ()
bool check_testvector ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector (integer fromlevel)
bool check_testvector (integer fromlevel)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector (integer fromlevel, integer tolevel)
bool check_testvector (integer fromlevel, integer tolevel)<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
tostring
void
void tostring () const
void tostring ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_delta
number
number get_delta () const
number get_delta ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns delta<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_theta
number
number get_theta () const
number get_theta ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns theta<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_prolongation_truncation
number
number get_prolongation_truncation () const
number get_prolongation_truncation ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns prolongation_tr<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_galerkin_truncation
number
number get_galerkin_truncation () const
number get_galerkin_truncation ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns galerkin_tr<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_H_reduce_interpolation_nodes_parameter
number
number get_H_reduce_interpolation_nodes_parameter () const
number get_H_reduce_interpolation_nodes_parameter ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns HreduceParameter<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_prereduce_A_parameter
number
number get_prereduce_A_parameter () const
number get_prereduce_A_parameter ()<br><br>Member function of class <b>FAMGPreconditionerCPU2</b><br>returns prereduceA<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
FAMGPreconditionerCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 IPreconditionerCPU3 AMGBaseCPU3 
Group <b>FAMGPreconditioner</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Filtering Algebraic Multigrid<br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <a href="AMGBaseCPU3.html">AMGBaseCPU3</a> <a href="FAMGPreconditionerCPU3.html">FAMGPreconditionerCPU3</a> <br><table><tr><td colspan=2><h3>FAMGPreconditionerCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FAMGPreconditionerCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FAMGPreconditionerCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_testvector (<a href="VectorCPU3.html">VectorCPU3</a> *adds a testvector with weight, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns testVector#weight<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_testvector (<a href="IVectorWriterCPU3.html">IVectorWriterCPU3</a> *adds a testvector with weight by using the IVectorWriter interface, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns testVector#weight<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector (integer fromlevel, integer tolevel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector (integer fromlevel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_strong_connection_external ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset_testvectors ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: we can restrict the number of parent nodes by looking at the entries of H(i,j) to prevent high fill in rates (e.g. 1e-3)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_aggressive_coarsening (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damping_for_smoother_in_interpolation_calculation (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_after_communciate_prolongation (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_aggressive_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_calculate_parent_pairs (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_coloring (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_communicate_prolongation (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_external_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_get_ratings (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_overlap (integer , integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_phase_3 (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_precalculate_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_recv_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_send_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_testvector_calc (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_delta (number delta)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: "Interpolation quality" F may not be worse than this (F < m_delta). e.g. 0.5<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns bExternalCoarsening<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_galerkin_truncation (number galerkin_tr)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets galerkin truncation, a parameter used to truncate the galerkin product. use with care! (like 1e-9)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *parallelCoarsening)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: e.g. GetColorCoarsening()<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prereduce_A_parameter (number prereduceA)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: by setting this != 0.0, we reduce the matrix A before using it to its strong connections. (e.g. 1e-3)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation_truncation (number prolongation_tr)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets prolongation_truncation, a parameter used for truncation of interpolation. use with care! (like 1e-5)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_read_coarsening ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns epsilon<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_from_matrix_rows ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; sets the smoother to smooth testvectors)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns smoother<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_smooths (integer number of smoothing steps to smooth testvectors)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns n<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvectors_LE (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_theta (number theta)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: with multiple parents paris, discard pairs with m_theta * F > min F. e.g. 0.9<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_use_precalculate (bool bUsePrecalculate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: experimental way of coarsening. beta.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_coarsening ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_f_values (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns bWrite<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FAMGPreconditionerCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_H_reduce_interpolation_nodes_parameter ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns HreduceParameter<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_delta ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns delta<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_galerkin_truncation ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns galerkin_tr<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_prereduce_A_parameter ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns prereduceA<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_prolongation_truncation ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns prolongation_tr<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_theta ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns theta<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>tostring ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited AMGBaseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check (const <a href="VectorCPU3.html">VectorCPU3</a> *x, const <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check2 (const <a href="VectorCPU3.html">VectorCPU3</a> *x, const <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_fsmoothing ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y_cycle (integer , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; basesmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_checkLevel_post_iterations (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer gamma)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_fsmoothing (bool enable)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix_write_path (c_string matrixWritePath)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: set the path where connectionviewer matrices of the levels are written<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_fill_before_base (number fillrate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_levels (integer max_levels)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_nodes_for_base (integer maxNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_min_nodes_on_one_processor (integer minNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_nr_of_preiterations_at_check (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: nr of mg cycles performed before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer nu2)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer nu1)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_one_init (bool b)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; postsmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preiterations_mimum_defect_at_check (number d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: minimum defect for preiterations before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; presmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_interfaces ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited AMGBaseCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_cycle_type ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>get_fsmoothing ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns f smoothing enabled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_grid_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns grid complexity c_G<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="AMGLevelInformationCPU3.html">AMGLevelInformationCPU3</a> *</td><td class="memItemRight" valign=bottom>get_level_information (integer L)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns information about the level L<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_max_fill_before_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_nodes_for_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_min_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns minNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_postsmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_presmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_operator_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns operator complexity c_A<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_preferred_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns preferredNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_coarse_solver_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent in the coarse solver setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_whole_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent on the whole setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_used_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns used nr of AMG levels<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
FAMGPreconditionerCPU3

FAMGPreconditionerCPU3 ()
FAMGPreconditionerCPU3 ()<br>Constructor of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_aggressive_coarsening
void
void set_aggressive_coarsening (bool )
void set_aggressive_coarsening (bool )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_delta
void
void set_delta (number delta)
void set_delta (number delta)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>tooltip: "Interpolation quality" F may not be worse than this (F < m_delta). e.g. 0.5<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_theta
void
void set_theta (number theta)
void set_theta (number theta)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>tooltip: with multiple parents paris, discard pairs with m_theta * F > min F. e.g. 0.9<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_damping_for_smoother_in_interpolation_calculation
void
void set_damping_for_smoother_in_interpolation_calculation (number )
void set_damping_for_smoother_in_interpolation_calculation (number )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
add_testvector
void
void add_testvector (VectorCPU3adds a testvector with weight, number )
void add_testvector (<a href="VectorCPU3.html">VectorCPU3</a> *adds a testvector with weight, number )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns testVector#weight<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
add_testvector
void
void add_testvector (IVectorWriterCPU3adds a testvector with weight by using the IVectorWriter interface, number )
void add_testvector (<a href="IVectorWriterCPU3.html">IVectorWriterCPU3</a> *adds a testvector with weight by using the IVectorWriter interface, number )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns testVector#weight<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_testvectors
void
void set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)
void set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns bWrite<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_smoother
void
void set_testvector_smoother (SmartPtr<ILinearIteratorCPU3> sets the smoother to smooth testvectors)
void set_testvector_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; sets the smoother to smooth testvectors)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns smoother<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_smooths
void
void set_testvector_smooths (integer number of smoothing steps to smooth testvectors)
void set_testvector_smooths (integer number of smoothing steps to smooth testvectors)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns n<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_from_matrix_rows
void
void set_testvector_from_matrix_rows ()
void set_testvector_from_matrix_rows ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvectors_LE
void
void set_testvectors_LE (number )
void set_testvectors_LE (number )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
reset_testvectors
void
void reset_testvectors ()
void reset_testvectors ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_prolongation_truncation
void
void set_prolongation_truncation (number prolongation_tr)
void set_prolongation_truncation (number prolongation_tr)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>tooltip: sets prolongation_truncation, a parameter used for truncation of interpolation. use with care! (like 1e-5)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_galerkin_truncation
void
void set_galerkin_truncation (number galerkin_tr)
void set_galerkin_truncation (number galerkin_tr)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>tooltip: sets galerkin truncation, a parameter used to truncate the galerkin product. use with care! (like 1e-9)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_H_reduce_interpolation_nodes_parameter
void
void set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)
void set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>tooltip: we can restrict the number of parent nodes by looking at the entries of H(i,j) to prevent high fill in rates (e.g. 1e-3)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_prereduce_A_parameter
void
void set_prereduce_A_parameter (number prereduceA)
void set_prereduce_A_parameter (number prereduceA)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>tooltip: by setting this != 0.0, we reduce the matrix A before using it to its strong connections. (e.g. 1e-3)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_external_coarsening
void
void set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)
void set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns bExternalCoarsening<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_strong_connection_external
void
void set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))
void set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns epsilon<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_strong_connection_external
number
number get_strong_connection_external ()
number get_strong_connection_external ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_coarsening
void
void set_write_coarsening ()
void set_write_coarsening ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_read_coarsening
void
void set_read_coarsening ()
void set_read_coarsening ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_parallel_coarsening
void
void set_parallel_coarsening (IParallelCoarseningparallelCoarsening)
void set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *parallelCoarsening)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>tooltip: e.g. GetColorCoarsening()<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_use_precalculate
void
void set_use_precalculate (bool bUsePrecalculate)
void set_use_precalculate (bool bUsePrecalculate)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>tooltip: experimental way of coarsening. beta.<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_overlap
void
void set_debug_level_overlap (integer , integer )
void set_debug_level_overlap (integer , integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_testvector_calc
void
void set_debug_level_testvector_calc (integer )
void set_debug_level_testvector_calc (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_phase_3
void
void set_debug_level_phase_3 (integer )
void set_debug_level_phase_3 (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_calculate_parent_pairs
void
void set_debug_level_calculate_parent_pairs (integer )
void set_debug_level_calculate_parent_pairs (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_recv_coarsening
void
void set_debug_level_recv_coarsening (integer )
void set_debug_level_recv_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_coloring
void
void set_debug_level_coloring (integer )
void set_debug_level_coloring (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_get_ratings
void
void set_debug_level_get_ratings (integer )
void set_debug_level_get_ratings (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_precalculate_coarsening
void
void set_debug_level_precalculate_coarsening (integer )
void set_debug_level_precalculate_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_aggressive_coarsening
void
void set_debug_level_aggressive_coarsening (integer )
void set_debug_level_aggressive_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_send_coarsening
void
void set_debug_level_send_coarsening (integer )
void set_debug_level_send_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_communicate_prolongation
void
void set_debug_level_communicate_prolongation (integer )
void set_debug_level_communicate_prolongation (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_after_communciate_prolongation
void
void set_debug_level_after_communciate_prolongation (integer )
void set_debug_level_after_communciate_prolongation (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_external_coarsening
void
void set_debug_level_external_coarsening (integer )
void set_debug_level_external_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_f_values
void
void set_write_f_values (bool )
void set_write_f_values (bool )<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector ()
bool check_testvector ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector (integer fromlevel)
bool check_testvector (integer fromlevel)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector (integer fromlevel, integer tolevel)
bool check_testvector (integer fromlevel, integer tolevel)<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
tostring
void
void tostring () const
void tostring ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_delta
number
number get_delta () const
number get_delta ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns delta<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_theta
number
number get_theta () const
number get_theta ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns theta<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_prolongation_truncation
number
number get_prolongation_truncation () const
number get_prolongation_truncation ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns prolongation_tr<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_galerkin_truncation
number
number get_galerkin_truncation () const
number get_galerkin_truncation ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns galerkin_tr<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_H_reduce_interpolation_nodes_parameter
number
number get_H_reduce_interpolation_nodes_parameter () const
number get_H_reduce_interpolation_nodes_parameter ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns HreduceParameter<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_prereduce_A_parameter
number
number get_prereduce_A_parameter () const
number get_prereduce_A_parameter ()<br><br>Member function of class <b>FAMGPreconditionerCPU3</b><br>returns prereduceA<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
FETICPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearOperatorInverseCPU1 IMatrixOperatorInverseCPU1 
Group <b>FETI</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>FETI Domain Decomposition Solver<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IMatrixOperatorInverseCPU1.html">IMatrixOperatorInverseCPU1</a> <a href="FETICPU1.html">FETICPU1</a> <br><table><tr><td colspan=2><h3>FETICPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FETICPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FETICPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic_of_inner_solver (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_coarse_problem_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Coarse Problem Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Dirichlet Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_domain_decomp_info (<a href="IDomainDecompositionInfo.html">IDomainDecompositionInfo</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_neumann_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Neumann Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_test_one_to_many_layouts (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>test_layouts (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
FETICPU1

FETICPU1 ()
FETICPU1 ()<br>Constructor of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_neumann_solver
void
void set_neumann_solver (SmartPtr<ILinearOperatorInverseCPU1> Neumann Solver)
void set_neumann_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Neumann Solver)<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_dirichlet_solver
void
void set_dirichlet_solver (SmartPtr<ILinearOperatorInverseCPU1> Dirichlet Solver)
void set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Dirichlet Solver)<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_coarse_problem_solver
void
void set_coarse_problem_solver (SmartPtr<ILinearOperatorInverseCPU1> Coarse Problem Solver)
void set_coarse_problem_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Coarse Problem Solver)<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_domain_decomp_info
void
void set_domain_decomp_info (IDomainDecompositionInfo)
void set_domain_decomp_info (<a href="IDomainDecompositionInfo.html">IDomainDecompositionInfo</a> *)<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
print_statistic_of_inner_solver
void
void print_statistic_of_inner_solver (bool )
void print_statistic_of_inner_solver (bool )<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
test_layouts
void
void test_layouts (bool )
void test_layouts (bool )<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_test_one_to_many_layouts
void
void set_test_one_to_many_layouts (bool )
void set_test_one_to_many_layouts (bool )<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
FETICPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearOperatorInverseCPU2 IMatrixOperatorInverseCPU2 
Group <b>FETI</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>FETI Domain Decomposition Solver<br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a> <a href="IMatrixOperatorInverseCPU2.html">IMatrixOperatorInverseCPU2</a> <a href="FETICPU2.html">FETICPU2</a> <br><table><tr><td colspan=2><h3>FETICPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FETICPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FETICPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic_of_inner_solver (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_coarse_problem_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Coarse Problem Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Dirichlet Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_domain_decomp_info (<a href="IDomainDecompositionInfo.html">IDomainDecompositionInfo</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_neumann_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Neumann Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_test_one_to_many_layouts (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>test_layouts (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *u, const <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU2.html">VectorCPU2</a> *u, <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
FETICPU2

FETICPU2 ()
FETICPU2 ()<br>Constructor of class <b>FETICPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_neumann_solver
void
void set_neumann_solver (SmartPtr<ILinearOperatorInverseCPU2> Neumann Solver)
void set_neumann_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Neumann Solver)<br><br>Member function of class <b>FETICPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_dirichlet_solver
void
void set_dirichlet_solver (SmartPtr<ILinearOperatorInverseCPU2> Dirichlet Solver)
void set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Dirichlet Solver)<br><br>Member function of class <b>FETICPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_coarse_problem_solver
void
void set_coarse_problem_solver (SmartPtr<ILinearOperatorInverseCPU2> Coarse Problem Solver)
void set_coarse_problem_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Coarse Problem Solver)<br><br>Member function of class <b>FETICPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_domain_decomp_info
void
void set_domain_decomp_info (IDomainDecompositionInfo)
void set_domain_decomp_info (<a href="IDomainDecompositionInfo.html">IDomainDecompositionInfo</a> *)<br><br>Member function of class <b>FETICPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
print_statistic_of_inner_solver
void
void print_statistic_of_inner_solver (bool )
void print_statistic_of_inner_solver (bool )<br><br>Member function of class <b>FETICPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU2> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )<br><br>Member function of class <b>FETICPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
test_layouts
void
void test_layouts (bool )
void test_layouts (bool )<br><br>Member function of class <b>FETICPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_test_one_to_many_layouts
void
void set_test_one_to_many_layouts (bool )
void set_test_one_to_many_layouts (bool )<br><br>Member function of class <b>FETICPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
FETICPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearOperatorInverseCPU3 IMatrixOperatorInverseCPU3 
Group <b>FETI</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>FETI Domain Decomposition Solver<br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a> <a href="IMatrixOperatorInverseCPU3.html">IMatrixOperatorInverseCPU3</a> <a href="FETICPU3.html">FETICPU3</a> <br><table><tr><td colspan=2><h3>FETICPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FETICPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FETICPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic_of_inner_solver (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_coarse_problem_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Coarse Problem Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Dirichlet Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_domain_decomp_info (<a href="IDomainDecompositionInfo.html">IDomainDecompositionInfo</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_neumann_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Neumann Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_test_one_to_many_layouts (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>test_layouts (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *u, const <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU3.html">VectorCPU3</a> *u, <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
FETICPU3

FETICPU3 ()
FETICPU3 ()<br>Constructor of class <b>FETICPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_neumann_solver
void
void set_neumann_solver (SmartPtr<ILinearOperatorInverseCPU3> Neumann Solver)
void set_neumann_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Neumann Solver)<br><br>Member function of class <b>FETICPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_dirichlet_solver
void
void set_dirichlet_solver (SmartPtr<ILinearOperatorInverseCPU3> Dirichlet Solver)
void set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Dirichlet Solver)<br><br>Member function of class <b>FETICPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_coarse_problem_solver
void
void set_coarse_problem_solver (SmartPtr<ILinearOperatorInverseCPU3> Coarse Problem Solver)
void set_coarse_problem_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Coarse Problem Solver)<br><br>Member function of class <b>FETICPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_domain_decomp_info
void
void set_domain_decomp_info (IDomainDecompositionInfo)
void set_domain_decomp_info (<a href="IDomainDecompositionInfo.html">IDomainDecompositionInfo</a> *)<br><br>Member function of class <b>FETICPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
print_statistic_of_inner_solver
void
void print_statistic_of_inner_solver (bool )
void print_statistic_of_inner_solver (bool )<br><br>Member function of class <b>FETICPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU3> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )<br><br>Member function of class <b>FETICPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
test_layouts
void
void test_layouts (bool )
void test_layouts (bool )<br><br>Member function of class <b>FETICPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_test_one_to_many_layouts
void
void set_test_one_to_many_layouts (bool )
void set_test_one_to_many_layouts (bool )<br><br>Member function of class <b>FETICPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
FV1InnerBoundary1d
IElemDisc IDomainElemDisc1d 
Group <b>FV1InnerBoundary</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="FV1InnerBoundary1d.html">FV1InnerBoundary1d</a> <br><table></table>
;
class
FV1InnerBoundary2d
IElemDisc IDomainElemDisc2d 
Group <b>FV1InnerBoundary</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="FV1InnerBoundary2d.html">FV1InnerBoundary2d</a> <br><table></table>
;
class
FV1InnerBoundary3d
IElemDisc IDomainElemDisc3d 
Group <b>FV1InnerBoundary</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="FV1InnerBoundary3d.html">FV1InnerBoundary3d</a> <br><table></table>
;
class
FV1InnerBoundaryCalciumER1d
IElemDisc IDomainElemDisc1d FV1InnerBoundary1d 
Group <b>FV1InnerBoundaryCalciumER</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="FV1InnerBoundary1d.html">FV1InnerBoundary1d</a> <a href="FV1InnerBoundaryCalciumER1d.html">FV1InnerBoundaryCalciumER1d</a> <br><table><tr><td colspan=2><h3>FV1InnerBoundaryCalciumER1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FV1InnerBoundaryCalciumER1d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr></table>
constructor
FV1InnerBoundaryCalciumER1d

FV1InnerBoundaryCalciumER1d (c_string Function(s), c_string Subset(s))
FV1InnerBoundaryCalciumER1d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>FV1InnerBoundaryCalciumER1d</b><br>group: <b>ug4//CalciumDynamics</b>
;
class
FV1InnerBoundaryCalciumER2d
IElemDisc IDomainElemDisc2d FV1InnerBoundary2d 
Group <b>FV1InnerBoundaryCalciumER</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="FV1InnerBoundary2d.html">FV1InnerBoundary2d</a> <a href="FV1InnerBoundaryCalciumER2d.html">FV1InnerBoundaryCalciumER2d</a> <br><table><tr><td colspan=2><h3>FV1InnerBoundaryCalciumER2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FV1InnerBoundaryCalciumER2d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr></table>
constructor
FV1InnerBoundaryCalciumER2d

FV1InnerBoundaryCalciumER2d (c_string Function(s), c_string Subset(s))
FV1InnerBoundaryCalciumER2d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>FV1InnerBoundaryCalciumER2d</b><br>group: <b>ug4//CalciumDynamics</b>
;
class
FV1InnerBoundaryCalciumER3d
IElemDisc IDomainElemDisc3d FV1InnerBoundary3d 
Group <b>FV1InnerBoundaryCalciumER</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="FV1InnerBoundary3d.html">FV1InnerBoundary3d</a> <a href="FV1InnerBoundaryCalciumER3d.html">FV1InnerBoundaryCalciumER3d</a> <br><table><tr><td colspan=2><h3>FV1InnerBoundaryCalciumER3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FV1InnerBoundaryCalciumER3d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr></table>
constructor
FV1InnerBoundaryCalciumER3d

FV1InnerBoundaryCalciumER3d (c_string Function(s), c_string Subset(s))
FV1InnerBoundaryCalciumER3d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>FV1InnerBoundaryCalciumER3d</b><br>group: <b>ug4//CalciumDynamics</b>
;
class
FV1TimeNeumannBoundary1d
IElemDisc IDomainElemDisc1d 
Group <b>FV1TimeNeumannBoundary</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="FV1TimeNeumannBoundary1d.html">FV1TimeNeumannBoundary1d</a> <br><table><tr><td colspan=2><h3>FV1TimeNeumannBoundary1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FV1TimeNeumannBoundary1d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FV1TimeNeumannBoundary1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_activemembrane (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dendrite (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_ifInjection (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_myelin (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_psc (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_sign (number )</td></tr><tr><td><br></td></tr></table>
constructor
FV1TimeNeumannBoundary1d

FV1TimeNeumannBoundary1d (c_string Functions, c_string Subset(s))
FV1TimeNeumannBoundary1d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>FV1TimeNeumannBoundary1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_sign
void
void set_sign (number )
void set_sign (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber1d> )
void set_injection (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>FV1TimeNeumannBoundary1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_myelin
void
void set_myelin (number )
void set_myelin (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_activemembrane
void
void set_activemembrane (number )
void set_activemembrane (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_dendrite
void
void set_dendrite (number )
void set_dendrite (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_psc
void
void set_psc (number )
void set_psc (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_ifInjection
void
void set_ifInjection (number )
void set_ifInjection (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary1d</b><br>group: <b>ug4/Neuron/</b>
;
class
FV1TimeNeumannBoundary2d
IElemDisc IDomainElemDisc2d 
Group <b>FV1TimeNeumannBoundary</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="FV1TimeNeumannBoundary2d.html">FV1TimeNeumannBoundary2d</a> <br><table><tr><td colspan=2><h3>FV1TimeNeumannBoundary2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FV1TimeNeumannBoundary2d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FV1TimeNeumannBoundary2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_activemembrane (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dendrite (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_ifInjection (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_myelin (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_psc (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_sign (number )</td></tr><tr><td><br></td></tr></table>
constructor
FV1TimeNeumannBoundary2d

FV1TimeNeumannBoundary2d (c_string Functions, c_string Subset(s))
FV1TimeNeumannBoundary2d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_sign
void
void set_sign (number )
void set_sign (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber2d> )
void set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_myelin
void
void set_myelin (number )
void set_myelin (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_activemembrane
void
void set_activemembrane (number )
void set_activemembrane (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_dendrite
void
void set_dendrite (number )
void set_dendrite (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_psc
void
void set_psc (number )
void set_psc (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_ifInjection
void
void set_ifInjection (number )
void set_ifInjection (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
;
class
FV1TimeNeumannBoundary3d
IElemDisc IDomainElemDisc3d 
Group <b>FV1TimeNeumannBoundary</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="FV1TimeNeumannBoundary3d.html">FV1TimeNeumannBoundary3d</a> <br><table><tr><td colspan=2><h3>FV1TimeNeumannBoundary3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FV1TimeNeumannBoundary3d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FV1TimeNeumannBoundary3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_activemembrane (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dendrite (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_ifInjection (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_myelin (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_psc (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_sign (number )</td></tr><tr><td><br></td></tr></table>
constructor
FV1TimeNeumannBoundary3d

FV1TimeNeumannBoundary3d (c_string Functions, c_string Subset(s))
FV1TimeNeumannBoundary3d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>FV1TimeNeumannBoundary3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_sign
void
void set_sign (number )
void set_sign (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber3d> )
void set_injection (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>FV1TimeNeumannBoundary3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_myelin
void
void set_myelin (number )
void set_myelin (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_activemembrane
void
void set_activemembrane (number )
void set_activemembrane (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_dendrite
void
void set_dendrite (number )
void set_dendrite (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_psc
void
void set_psc (number )
void set_psc (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_ifInjection
void
void set_ifInjection (number )
void set_ifInjection (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary3d</b><br>group: <b>ug4/Neuron/</b>
;
class
FileHandling

class has constructor. <br><table><tr><td colspan=2><h3>FileHandling Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FileHandling ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FileHandling Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_output_to_csv (c_string filename)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns finish_output_to_csv<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>give_back_params (c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: read in file<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>give_params_by_index (number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: read in file<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>initialise_output_to_csv (c_string filename)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns initialise_output_to_csv<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>output_to_csv (number endWert, std_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns output_to_csv<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>output_to_file (number ZeileTextWert, c_string , number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns output_to_file<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Puts the Value Wert into an excel-xml file in Row Zeile<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>read_file (c_string filename)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns read_file<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: reads in the given File<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>read_param_file (c_string filename)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: read param file<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FileHandling Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>find_neighbour_value_down (number , number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: read in file<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>find_neighbour_value_up (number , number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: read in file<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>interpolate (number Zeit, number , number , number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: read in file<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>output (c_string nameZeit, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns output<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: gives back the value of name at a certain point of time<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>output_by_index (number spaltenIndexZeit, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns output_by_index<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: gives back the value of name at a certain point of time<br/></td></tr><tr><td><br></td></tr></table>
constructor
FileHandling

FileHandling ()
FileHandling ()<br>Constructor of class <b>FileHandling</b><br>group: <b>ug4//Biogas</b>
memberfunction
read_file
void
void read_file (c_string filename)
void read_file (c_string filename)<br><br>Member function of class <b>FileHandling</b><br>returns read_file<br>tooltip: reads in the given File<br>group: <b>ug4//Biogas</b>
memberfunction
read_param_file
void
void read_param_file (c_string filename)
void read_param_file (c_string filename)<br><br>Member function of class <b>FileHandling</b><br>tooltip: read param file<br>group: <b>ug4//Biogas</b>
memberfunction
give_back_params
number
number give_back_params (c_string )
number give_back_params (c_string )<br><br>Member function of class <b>FileHandling</b><br>tooltip: read in file<br>group: <b>ug4//Biogas</b>
memberfunction
give_params_by_index
number
number give_params_by_index (number )
number give_params_by_index (number )<br><br>Member function of class <b>FileHandling</b><br>tooltip: read in file<br>group: <b>ug4//Biogas</b>
memberfunction
output_to_file
number
number output_to_file (number ZeileTextWert, c_string , number )
number output_to_file (number ZeileTextWert, c_string , number )<br><br>Member function of class <b>FileHandling</b><br>returns output_to_file<br>tooltip: Puts the Value Wert into an excel-xml file in Row Zeile<br>group: <b>ug4//Biogas</b>
memberfunction
output_to_csv
void
void output_to_csv (number endWert, std_string )
void output_to_csv (number endWert, std_string )<br><br>Member function of class <b>FileHandling</b><br>returns output_to_csv<br>group: <b>ug4//Biogas</b>
memberfunction
initialise_output_to_csv
void
void initialise_output_to_csv (c_string filename)
void initialise_output_to_csv (c_string filename)<br><br>Member function of class <b>FileHandling</b><br>returns initialise_output_to_csv<br>group: <b>ug4//Biogas</b>
memberfunction
finish_output_to_csv
void
void finish_output_to_csv (c_string filename)
void finish_output_to_csv (c_string filename)<br><br>Member function of class <b>FileHandling</b><br>returns finish_output_to_csv<br>group: <b>ug4//Biogas</b>
memberfunction
output
number
number output (c_string nameZeit, number ) const
number output (c_string nameZeit, number )<br><br>Member function of class <b>FileHandling</b><br>returns output<br>tooltip: gives back the value of name at a certain point of time<br>group: <b>ug4//Biogas</b>
memberfunction
output_by_index
number
number output_by_index (number spaltenIndexZeit, number ) const
number output_by_index (number spaltenIndexZeit, number )<br><br>Member function of class <b>FileHandling</b><br>returns output_by_index<br>tooltip: gives back the value of name at a certain point of time<br>group: <b>ug4//Biogas</b>
memberfunction
interpolate
number
number interpolate (number Zeit, number , number , number ) const
number interpolate (number Zeit, number , number , number )<br><br>Member function of class <b>FileHandling</b><br>tooltip: read in file<br>group: <b>ug4//Biogas</b>
memberfunction
find_neighbour_value_down
number
number find_neighbour_value_down (number , number ) const
number find_neighbour_value_down (number , number )<br><br>Member function of class <b>FileHandling</b><br>tooltip: read in file<br>group: <b>ug4//Biogas</b>
memberfunction
find_neighbour_value_up
number
number find_neighbour_value_up (number , number ) const
number find_neighbour_value_up (number , number )<br><br>Member function of class <b>FileHandling</b><br>tooltip: read in file<br>group: <b>ug4//Biogas</b>
;
class
FractureInfoVec

class has no constructor. <br><table></table>
;
class
FullUpwind1d
IConvectionShapes1d 
Group <b>FullUpwind</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IConvectionShapes1d.html">IConvectionShapes1d</a> <a href="FullUpwind1d.html">FullUpwind1d</a> <br><table><tr><td colspan=2><h3>FullUpwind1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FullUpwind1d ()</td></tr><tr><td><br></td></tr></table>
constructor
FullUpwind1d

FullUpwind1d ()
FullUpwind1d ()<br>Constructor of class <b>FullUpwind1d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
FullUpwind2d
IConvectionShapes2d 
Group <b>FullUpwind</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IConvectionShapes2d.html">IConvectionShapes2d</a> <a href="FullUpwind2d.html">FullUpwind2d</a> <br><table><tr><td colspan=2><h3>FullUpwind2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FullUpwind2d ()</td></tr><tr><td><br></td></tr></table>
constructor
FullUpwind2d

FullUpwind2d ()
FullUpwind2d ()<br>Constructor of class <b>FullUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
FullUpwind3d
IConvectionShapes3d 
Group <b>FullUpwind</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IConvectionShapes3d.html">IConvectionShapes3d</a> <a href="FullUpwind3d.html">FullUpwind3d</a> <br><table><tr><td colspan=2><h3>FullUpwind3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FullUpwind3d ()</td></tr><tr><td><br></td></tr></table>
constructor
FullUpwind3d

FullUpwind3d ()
FullUpwind3d ()<br>Constructor of class <b>FullUpwind3d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
GaussSeidelCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Group <b>GaussSeidel</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Gauss-Seidel Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="GaussSeidelCPU1.html">GaussSeidelCPU1</a> <br><table><tr><td colspan=2><h3>GaussSeidelCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GaussSeidelCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
GaussSeidelCPU1

GaussSeidelCPU1 ()
GaussSeidelCPU1 ()<br>Constructor of class <b>GaussSeidelCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
GaussSeidelCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 IPreconditionerCPU2 
Group <b>GaussSeidel</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Gauss-Seidel Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <a href="GaussSeidelCPU2.html">GaussSeidelCPU2</a> <br><table><tr><td colspan=2><h3>GaussSeidelCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GaussSeidelCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
GaussSeidelCPU2

GaussSeidelCPU2 ()
GaussSeidelCPU2 ()<br>Constructor of class <b>GaussSeidelCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
GaussSeidelCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 IPreconditionerCPU3 
Group <b>GaussSeidel</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Gauss-Seidel Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <a href="GaussSeidelCPU3.html">GaussSeidelCPU3</a> <br><table><tr><td colspan=2><h3>GaussSeidelCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GaussSeidelCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
GaussSeidelCPU3

GaussSeidelCPU3 ()
GaussSeidelCPU3 ()<br>Constructor of class <b>GaussSeidelCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
GeometricMultiGrid1dCPU1
ILinearIteratorCPU1 
Group <b>GeometricMultiGrid</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="GeometricMultiGrid1dCPU1.html">GeometricMultiGrid1dCPU1</a> <br><table><tr><td colspan=2><h3>GeometricMultiGrid1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GeometricMultiGrid1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GeometricMultiGrid1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Prolongation Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Restriction Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_level (integer Base Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Base Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer Cycle Type)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer Number PostSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer Number PreSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_base_solver (bool Specifies if base solver works in parallel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Projection)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Prolongation)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Restriction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Transfer)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
GeometricMultiGrid1dCPU1

GeometricMultiGrid1dCPU1 (SmartPtr<ApproximationSpace1d> Approximation Space)
GeometricMultiGrid1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)<br>Constructor of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU1Discretization)
void set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Discretization)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_level
void
void set_base_level (integer Base Level)
void set_base_level (integer Base Level)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_parallel_base_solver
void
void set_parallel_base_solver (bool Specifies if base solver works in parallel)
void set_parallel_base_solver (bool Specifies if base solver works in parallel)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU1> Base Solver)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Base Solver)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_smoother
void
void set_smoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer Cycle Type)
void set_cycle_type (integer Cycle Type)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer Number PreSmooth Steps)
void set_num_presmooth (integer Number PreSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer Number PostSmooth Steps)
void set_num_postsmooth (integer Number PostSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_transfer
void
void set_transfer (SmartPtr<ITransferOperatorCPU1> Transfer)
void set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Transfer)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_prolongation
void
void set_prolongation (SmartPtr<ITransferOperatorCPU1> Prolongation)
void set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Prolongation)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction
void
void set_restriction (SmartPtr<ITransferOperatorCPU1> Restriction)
void set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Restriction)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_projection
void
void set_projection (SmartPtr<ITransferOperatorCPU1> Projection)
void set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Projection)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_prolongation_post_process
void
void add_prolongation_post_process (SmartPtr<ITransferPostProcessCPU1> Prolongation Post Process)
void add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Prolongation Post Process)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_restriction_post_process
void
void add_restriction_post_process (SmartPtr<ITransferPostProcessCPU1> Restriction Post Process)
void add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Restriction Post Process)<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )<br><br>Member function of class <b>GeometricMultiGrid1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
GeometricMultiGrid1dCPU2
ILinearIteratorCPU2 
Group <b>GeometricMultiGrid</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="GeometricMultiGrid1dCPU2.html">GeometricMultiGrid1dCPU2</a> <br><table><tr><td colspan=2><h3>GeometricMultiGrid1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GeometricMultiGrid1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GeometricMultiGrid1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Prolongation Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Restriction Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_level (integer Base Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Base Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer Cycle Type)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer Number PostSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer Number PreSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_base_solver (bool Specifies if base solver works in parallel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Projection)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Prolongation)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Restriction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Transfer)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
GeometricMultiGrid1dCPU2

GeometricMultiGrid1dCPU2 (SmartPtr<ApproximationSpace1d> Approximation Space)
GeometricMultiGrid1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)<br>Constructor of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU2Discretization)
void set_discretization (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *Discretization)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_level
void
void set_base_level (integer Base Level)
void set_base_level (integer Base Level)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_parallel_base_solver
void
void set_parallel_base_solver (bool Specifies if base solver works in parallel)
void set_parallel_base_solver (bool Specifies if base solver works in parallel)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU2> Base Solver)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Base Solver)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_smoother
void
void set_smoother (SmartPtr<ILinearIteratorCPU2> Smoother)
void set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU2> Smoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU2> Smoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer Cycle Type)
void set_cycle_type (integer Cycle Type)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer Number PreSmooth Steps)
void set_num_presmooth (integer Number PreSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer Number PostSmooth Steps)
void set_num_postsmooth (integer Number PostSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_transfer
void
void set_transfer (SmartPtr<ITransferOperatorCPU2> Transfer)
void set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Transfer)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_prolongation
void
void set_prolongation (SmartPtr<ITransferOperatorCPU2> Prolongation)
void set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Prolongation)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction
void
void set_restriction (SmartPtr<ITransferOperatorCPU2> Restriction)
void set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Restriction)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_projection
void
void set_projection (SmartPtr<ITransferOperatorCPU2> Projection)
void set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Projection)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_prolongation_post_process
void
void add_prolongation_post_process (SmartPtr<ITransferPostProcessCPU2> Prolongation Post Process)
void add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Prolongation Post Process)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_restriction_post_process
void
void add_restriction_post_process (SmartPtr<ITransferPostProcessCPU2> Restriction Post Process)
void add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Restriction Post Process)<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU2> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )<br><br>Member function of class <b>GeometricMultiGrid1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
GeometricMultiGrid1dCPU3
ILinearIteratorCPU3 
Group <b>GeometricMultiGrid</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="GeometricMultiGrid1dCPU3.html">GeometricMultiGrid1dCPU3</a> <br><table><tr><td colspan=2><h3>GeometricMultiGrid1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GeometricMultiGrid1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GeometricMultiGrid1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Prolongation Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Restriction Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_level (integer Base Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Base Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer Cycle Type)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer Number PostSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer Number PreSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_base_solver (bool Specifies if base solver works in parallel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Projection)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Prolongation)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Restriction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Transfer)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
GeometricMultiGrid1dCPU3

GeometricMultiGrid1dCPU3 (SmartPtr<ApproximationSpace1d> Approximation Space)
GeometricMultiGrid1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)<br>Constructor of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU3Discretization)
void set_discretization (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *Discretization)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_level
void
void set_base_level (integer Base Level)
void set_base_level (integer Base Level)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_parallel_base_solver
void
void set_parallel_base_solver (bool Specifies if base solver works in parallel)
void set_parallel_base_solver (bool Specifies if base solver works in parallel)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU3> Base Solver)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Base Solver)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_smoother
void
void set_smoother (SmartPtr<ILinearIteratorCPU3> Smoother)
void set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU3> Smoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU3> Smoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer Cycle Type)
void set_cycle_type (integer Cycle Type)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer Number PreSmooth Steps)
void set_num_presmooth (integer Number PreSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer Number PostSmooth Steps)
void set_num_postsmooth (integer Number PostSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_transfer
void
void set_transfer (SmartPtr<ITransferOperatorCPU3> Transfer)
void set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Transfer)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_prolongation
void
void set_prolongation (SmartPtr<ITransferOperatorCPU3> Prolongation)
void set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Prolongation)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction
void
void set_restriction (SmartPtr<ITransferOperatorCPU3> Restriction)
void set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Restriction)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_projection
void
void set_projection (SmartPtr<ITransferOperatorCPU3> Projection)
void set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Projection)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_prolongation_post_process
void
void add_prolongation_post_process (SmartPtr<ITransferPostProcessCPU3> Prolongation Post Process)
void add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Prolongation Post Process)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_restriction_post_process
void
void add_restriction_post_process (SmartPtr<ITransferPostProcessCPU3> Restriction Post Process)
void add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Restriction Post Process)<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU3> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )<br><br>Member function of class <b>GeometricMultiGrid1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
GeometricMultiGrid2dCPU1
ILinearIteratorCPU1 
Group <b>GeometricMultiGrid</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="GeometricMultiGrid2dCPU1.html">GeometricMultiGrid2dCPU1</a> <br><table><tr><td colspan=2><h3>GeometricMultiGrid2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GeometricMultiGrid2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GeometricMultiGrid2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Prolongation Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Restriction Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_level (integer Base Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Base Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer Cycle Type)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer Number PostSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer Number PreSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_base_solver (bool Specifies if base solver works in parallel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Projection)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Prolongation)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Restriction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Transfer)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
GeometricMultiGrid2dCPU1

GeometricMultiGrid2dCPU1 (SmartPtr<ApproximationSpace2d> Approximation Space)
GeometricMultiGrid2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU1Discretization)
void set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Discretization)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_level
void
void set_base_level (integer Base Level)
void set_base_level (integer Base Level)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_parallel_base_solver
void
void set_parallel_base_solver (bool Specifies if base solver works in parallel)
void set_parallel_base_solver (bool Specifies if base solver works in parallel)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU1> Base Solver)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Base Solver)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_smoother
void
void set_smoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer Cycle Type)
void set_cycle_type (integer Cycle Type)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer Number PreSmooth Steps)
void set_num_presmooth (integer Number PreSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer Number PostSmooth Steps)
void set_num_postsmooth (integer Number PostSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_transfer
void
void set_transfer (SmartPtr<ITransferOperatorCPU1> Transfer)
void set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Transfer)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_prolongation
void
void set_prolongation (SmartPtr<ITransferOperatorCPU1> Prolongation)
void set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Prolongation)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction
void
void set_restriction (SmartPtr<ITransferOperatorCPU1> Restriction)
void set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Restriction)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_projection
void
void set_projection (SmartPtr<ITransferOperatorCPU1> Projection)
void set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Projection)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_prolongation_post_process
void
void add_prolongation_post_process (SmartPtr<ITransferPostProcessCPU1> Prolongation Post Process)
void add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Prolongation Post Process)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_restriction_post_process
void
void add_restriction_post_process (SmartPtr<ITransferPostProcessCPU1> Restriction Post Process)
void add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Restriction Post Process)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
GeometricMultiGrid2dCPU2
ILinearIteratorCPU2 
Group <b>GeometricMultiGrid</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="GeometricMultiGrid2dCPU2.html">GeometricMultiGrid2dCPU2</a> <br><table><tr><td colspan=2><h3>GeometricMultiGrid2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GeometricMultiGrid2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GeometricMultiGrid2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Prolongation Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Restriction Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_level (integer Base Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Base Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer Cycle Type)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer Number PostSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer Number PreSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_base_solver (bool Specifies if base solver works in parallel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Projection)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Prolongation)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Restriction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Transfer)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
GeometricMultiGrid2dCPU2

GeometricMultiGrid2dCPU2 (SmartPtr<ApproximationSpace2d> Approximation Space)
GeometricMultiGrid2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU2Discretization)
void set_discretization (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *Discretization)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_level
void
void set_base_level (integer Base Level)
void set_base_level (integer Base Level)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_parallel_base_solver
void
void set_parallel_base_solver (bool Specifies if base solver works in parallel)
void set_parallel_base_solver (bool Specifies if base solver works in parallel)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU2> Base Solver)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Base Solver)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_smoother
void
void set_smoother (SmartPtr<ILinearIteratorCPU2> Smoother)
void set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU2> Smoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU2> Smoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer Cycle Type)
void set_cycle_type (integer Cycle Type)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer Number PreSmooth Steps)
void set_num_presmooth (integer Number PreSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer Number PostSmooth Steps)
void set_num_postsmooth (integer Number PostSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_transfer
void
void set_transfer (SmartPtr<ITransferOperatorCPU2> Transfer)
void set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Transfer)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_prolongation
void
void set_prolongation (SmartPtr<ITransferOperatorCPU2> Prolongation)
void set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Prolongation)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction
void
void set_restriction (SmartPtr<ITransferOperatorCPU2> Restriction)
void set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Restriction)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_projection
void
void set_projection (SmartPtr<ITransferOperatorCPU2> Projection)
void set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Projection)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_prolongation_post_process
void
void add_prolongation_post_process (SmartPtr<ITransferPostProcessCPU2> Prolongation Post Process)
void add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Prolongation Post Process)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_restriction_post_process
void
void add_restriction_post_process (SmartPtr<ITransferPostProcessCPU2> Restriction Post Process)
void add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Restriction Post Process)<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU2> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )<br><br>Member function of class <b>GeometricMultiGrid2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
GeometricMultiGrid2dCPU3
ILinearIteratorCPU3 
Group <b>GeometricMultiGrid</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="GeometricMultiGrid2dCPU3.html">GeometricMultiGrid2dCPU3</a> <br><table><tr><td colspan=2><h3>GeometricMultiGrid2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GeometricMultiGrid2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GeometricMultiGrid2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Prolongation Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Restriction Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_level (integer Base Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Base Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer Cycle Type)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer Number PostSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer Number PreSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_base_solver (bool Specifies if base solver works in parallel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Projection)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Prolongation)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Restriction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Transfer)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
GeometricMultiGrid2dCPU3

GeometricMultiGrid2dCPU3 (SmartPtr<ApproximationSpace2d> Approximation Space)
GeometricMultiGrid2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU3Discretization)
void set_discretization (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *Discretization)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_level
void
void set_base_level (integer Base Level)
void set_base_level (integer Base Level)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_parallel_base_solver
void
void set_parallel_base_solver (bool Specifies if base solver works in parallel)
void set_parallel_base_solver (bool Specifies if base solver works in parallel)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU3> Base Solver)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Base Solver)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_smoother
void
void set_smoother (SmartPtr<ILinearIteratorCPU3> Smoother)
void set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU3> Smoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU3> Smoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer Cycle Type)
void set_cycle_type (integer Cycle Type)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer Number PreSmooth Steps)
void set_num_presmooth (integer Number PreSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer Number PostSmooth Steps)
void set_num_postsmooth (integer Number PostSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_transfer
void
void set_transfer (SmartPtr<ITransferOperatorCPU3> Transfer)
void set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Transfer)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_prolongation
void
void set_prolongation (SmartPtr<ITransferOperatorCPU3> Prolongation)
void set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Prolongation)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction
void
void set_restriction (SmartPtr<ITransferOperatorCPU3> Restriction)
void set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Restriction)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_projection
void
void set_projection (SmartPtr<ITransferOperatorCPU3> Projection)
void set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Projection)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_prolongation_post_process
void
void add_prolongation_post_process (SmartPtr<ITransferPostProcessCPU3> Prolongation Post Process)
void add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Prolongation Post Process)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_restriction_post_process
void
void add_restriction_post_process (SmartPtr<ITransferPostProcessCPU3> Restriction Post Process)
void add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Restriction Post Process)<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU3> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )<br><br>Member function of class <b>GeometricMultiGrid2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
GeometricMultiGrid3dCPU1
ILinearIteratorCPU1 
Group <b>GeometricMultiGrid</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="GeometricMultiGrid3dCPU1.html">GeometricMultiGrid3dCPU1</a> <br><table><tr><td colspan=2><h3>GeometricMultiGrid3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GeometricMultiGrid3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GeometricMultiGrid3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Prolongation Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Restriction Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_level (integer Base Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Base Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer Cycle Type)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer Number PostSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer Number PreSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_base_solver (bool Specifies if base solver works in parallel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Projection)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Prolongation)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Restriction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Transfer)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
GeometricMultiGrid3dCPU1

GeometricMultiGrid3dCPU1 (SmartPtr<ApproximationSpace3d> Approximation Space)
GeometricMultiGrid3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)<br>Constructor of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU1Discretization)
void set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Discretization)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_level
void
void set_base_level (integer Base Level)
void set_base_level (integer Base Level)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_parallel_base_solver
void
void set_parallel_base_solver (bool Specifies if base solver works in parallel)
void set_parallel_base_solver (bool Specifies if base solver works in parallel)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU1> Base Solver)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Base Solver)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_smoother
void
void set_smoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer Cycle Type)
void set_cycle_type (integer Cycle Type)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer Number PreSmooth Steps)
void set_num_presmooth (integer Number PreSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer Number PostSmooth Steps)
void set_num_postsmooth (integer Number PostSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_transfer
void
void set_transfer (SmartPtr<ITransferOperatorCPU1> Transfer)
void set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Transfer)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_prolongation
void
void set_prolongation (SmartPtr<ITransferOperatorCPU1> Prolongation)
void set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Prolongation)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction
void
void set_restriction (SmartPtr<ITransferOperatorCPU1> Restriction)
void set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Restriction)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_projection
void
void set_projection (SmartPtr<ITransferOperatorCPU1> Projection)
void set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Projection)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_prolongation_post_process
void
void add_prolongation_post_process (SmartPtr<ITransferPostProcessCPU1> Prolongation Post Process)
void add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Prolongation Post Process)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_restriction_post_process
void
void add_restriction_post_process (SmartPtr<ITransferPostProcessCPU1> Restriction Post Process)
void add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Restriction Post Process)<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )<br><br>Member function of class <b>GeometricMultiGrid3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
GeometricMultiGrid3dCPU2
ILinearIteratorCPU2 
Group <b>GeometricMultiGrid</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="GeometricMultiGrid3dCPU2.html">GeometricMultiGrid3dCPU2</a> <br><table><tr><td colspan=2><h3>GeometricMultiGrid3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GeometricMultiGrid3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GeometricMultiGrid3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Prolongation Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Restriction Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_level (integer Base Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Base Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer Cycle Type)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer Number PostSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer Number PreSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_base_solver (bool Specifies if base solver works in parallel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Projection)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Prolongation)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Restriction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Transfer)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
GeometricMultiGrid3dCPU2

GeometricMultiGrid3dCPU2 (SmartPtr<ApproximationSpace3d> Approximation Space)
GeometricMultiGrid3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)<br>Constructor of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU2Discretization)
void set_discretization (<a href="IAssembleCPU2.html">IAssembleCPU2</a> *Discretization)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_level
void
void set_base_level (integer Base Level)
void set_base_level (integer Base Level)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_parallel_base_solver
void
void set_parallel_base_solver (bool Specifies if base solver works in parallel)
void set_parallel_base_solver (bool Specifies if base solver works in parallel)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU2> Base Solver)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Base Solver)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_smoother
void
void set_smoother (SmartPtr<ILinearIteratorCPU2> Smoother)
void set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU2> Smoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU2> Smoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer Cycle Type)
void set_cycle_type (integer Cycle Type)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer Number PreSmooth Steps)
void set_num_presmooth (integer Number PreSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer Number PostSmooth Steps)
void set_num_postsmooth (integer Number PostSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_transfer
void
void set_transfer (SmartPtr<ITransferOperatorCPU2> Transfer)
void set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Transfer)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_prolongation
void
void set_prolongation (SmartPtr<ITransferOperatorCPU2> Prolongation)
void set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Prolongation)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction
void
void set_restriction (SmartPtr<ITransferOperatorCPU2> Restriction)
void set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Restriction)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_projection
void
void set_projection (SmartPtr<ITransferOperatorCPU2> Projection)
void set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a>&gt; Projection)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_prolongation_post_process
void
void add_prolongation_post_process (SmartPtr<ITransferPostProcessCPU2> Prolongation Post Process)
void add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Prolongation Post Process)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_restriction_post_process
void
void add_restriction_post_process (SmartPtr<ITransferPostProcessCPU2> Restriction Post Process)
void add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU2.html">ITransferPostProcessCPU2</a>&gt; Restriction Post Process)<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU2> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )<br><br>Member function of class <b>GeometricMultiGrid3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
GeometricMultiGrid3dCPU3
ILinearIteratorCPU3 
Group <b>GeometricMultiGrid</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="GeometricMultiGrid3dCPU3.html">GeometricMultiGrid3dCPU3</a> <br><table><tr><td colspan=2><h3>GeometricMultiGrid3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GeometricMultiGrid3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GeometricMultiGrid3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Prolongation Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Restriction Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_level (integer Base Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Base Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer Cycle Type)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer Number PostSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer Number PreSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_base_solver (bool Specifies if base solver works in parallel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Projection)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Prolongation)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Restriction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Transfer)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
GeometricMultiGrid3dCPU3

GeometricMultiGrid3dCPU3 (SmartPtr<ApproximationSpace3d> Approximation Space)
GeometricMultiGrid3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)<br>Constructor of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU3Discretization)
void set_discretization (<a href="IAssembleCPU3.html">IAssembleCPU3</a> *Discretization)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_level
void
void set_base_level (integer Base Level)
void set_base_level (integer Base Level)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_parallel_base_solver
void
void set_parallel_base_solver (bool Specifies if base solver works in parallel)
void set_parallel_base_solver (bool Specifies if base solver works in parallel)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU3> Base Solver)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Base Solver)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_smoother
void
void set_smoother (SmartPtr<ILinearIteratorCPU3> Smoother)
void set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU3> Smoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU3> Smoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer Cycle Type)
void set_cycle_type (integer Cycle Type)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer Number PreSmooth Steps)
void set_num_presmooth (integer Number PreSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer Number PostSmooth Steps)
void set_num_postsmooth (integer Number PostSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_transfer
void
void set_transfer (SmartPtr<ITransferOperatorCPU3> Transfer)
void set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Transfer)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_prolongation
void
void set_prolongation (SmartPtr<ITransferOperatorCPU3> Prolongation)
void set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Prolongation)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction
void
void set_restriction (SmartPtr<ITransferOperatorCPU3> Restriction)
void set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Restriction)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_projection
void
void set_projection (SmartPtr<ITransferOperatorCPU3> Projection)
void set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a>&gt; Projection)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_prolongation_post_process
void
void add_prolongation_post_process (SmartPtr<ITransferPostProcessCPU3> Prolongation Post Process)
void add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Prolongation Post Process)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_restriction_post_process
void
void add_restriction_post_process (SmartPtr<ITransferPostProcessCPU3> Restriction Post Process)
void add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU3.html">ITransferPostProcessCPU3</a>&gt; Restriction Post Process)<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU3> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )<br><br>Member function of class <b>GeometricMultiGrid3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
GlobalFracturedMediumRefiner
IRefiner 
class has constructor. <br>Inheritance: <a href="IRefiner.html">IRefiner</a> <a href="GlobalFracturedMediumRefiner.html">GlobalFracturedMediumRefiner</a> <br><table><tr><td colspan=2><h3>GlobalFracturedMediumRefiner Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GlobalFracturedMediumRefiner ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GlobalFracturedMediumRefiner Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>is_fracture (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>mark_as_fracture (integer , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_subset_handler (<a href="ISubsetHandler.html">ISubsetHandler</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IRefiner Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_marks ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>coarsen ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>refine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>save_marks_to_file (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_adjusted_marks_debug_filename (c_string )</td></tr><tr><td><br></td></tr></table>
constructor
GlobalFracturedMediumRefiner

GlobalFracturedMediumRefiner ()
GlobalFracturedMediumRefiner ()<br>Constructor of class <b>GlobalFracturedMediumRefiner</b><br>group: <b>/ug4/Grid</b>
memberfunction
assign_grid
void
void assign_grid (MultiGrid)
void assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)<br><br>Member function of class <b>GlobalFracturedMediumRefiner</b><br>group: <b>/ug4/Grid</b>
memberfunction
set_subset_handler
void
void set_subset_handler (ISubsetHandler)
void set_subset_handler (<a href="ISubsetHandler.html">ISubsetHandler</a> *)<br><br>Member function of class <b>GlobalFracturedMediumRefiner</b><br>group: <b>/ug4/Grid</b>
memberfunction
mark_as_fracture
void
void mark_as_fracture (integer , bool )
void mark_as_fracture (integer , bool )<br><br>Member function of class <b>GlobalFracturedMediumRefiner</b><br>group: <b>/ug4/Grid</b>
memberfunction
is_fracture
bool
bool is_fracture (integer )
bool is_fracture (integer )<br><br>Member function of class <b>GlobalFracturedMediumRefiner</b><br>group: <b>/ug4/Grid</b>
;
class
GlobalMultiGridRefiner
IRefiner 
class has constructor. <br>Inheritance: <a href="IRefiner.html">IRefiner</a> <a href="GlobalMultiGridRefiner.html">GlobalMultiGridRefiner</a> <br><table><tr><td colspan=2><h3>GlobalMultiGridRefiner Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GlobalMultiGridRefiner ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GlobalMultiGridRefiner Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IRefiner Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_marks ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>coarsen ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>refine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>save_marks_to_file (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_adjusted_marks_debug_filename (c_string )</td></tr><tr><td><br></td></tr></table>
constructor
GlobalMultiGridRefiner

GlobalMultiGridRefiner ()
GlobalMultiGridRefiner ()<br>Constructor of class <b>GlobalMultiGridRefiner</b><br>group: <b>/ug4/Grid</b>
memberfunction
assign_grid
void
void assign_grid (MultiGrid)
void assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)<br><br>Member function of class <b>GlobalMultiGridRefiner</b><br>group: <b>/ug4/Grid</b>
;
class
Grid

class has constructor. <br><table><tr><td colspan=2><h3>Grid Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Grid ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Grid Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_edges (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_faces (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_vertices (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_volumes (integer )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Grid Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_edges ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_faces ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_hexahedrons ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prisms ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_pyramids ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_quadrilaterals ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_tetrahedrons ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_triangles ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_vertices ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_volumes ()</td></tr><tr><td><br></td></tr></table>
constructor
Grid

Grid ()
Grid ()<br>Constructor of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
reserve_vertices
void
void reserve_vertices (integer )
void reserve_vertices (integer )<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
reserve_edges
void
void reserve_edges (integer )
void reserve_edges (integer )<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
reserve_faces
void
void reserve_faces (integer )
void reserve_faces (integer )<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
reserve_volumes
void
void reserve_volumes (integer )
void reserve_volumes (integer )<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_vertices
integer
integer num_vertices () const
integer num_vertices ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_edges
integer
integer num_edges () const
integer num_edges ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_faces
integer
integer num_faces () const
integer num_faces ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_triangles
integer
integer num_triangles () const
integer num_triangles ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_quadrilaterals
integer
integer num_quadrilaterals () const
integer num_quadrilaterals ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_volumes
integer
integer num_volumes () const
integer num_volumes ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_tetrahedrons
integer
integer num_tetrahedrons () const
integer num_tetrahedrons ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_pyramids
integer
integer num_pyramids () const
integer num_pyramids ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_prisms
integer
integer num_prisms () const
integer num_prisms ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_hexahedrons
integer
integer num_hexahedrons () const
integer num_hexahedrons ()<br><br>Member function of class <b>Grid</b><br>group: <b>/ug4/Grid</b>
;
class
GridFunction1dCPU1
VectorCPU1 
Group <b>GridFunction</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="VectorCPU1.html">VectorCPU1</a> <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunction1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunction1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunction1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign (const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_transfers ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>clone ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunction1dCPU1

GridFunction1dCPU1 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
GridFunction1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>GridFunction1dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
assign
void
void assign (const VectorCPU1Vector)
void assign (const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)<br><br>Member function of class <b>GridFunction1dCPU1</b><br>returns Success<br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clone
SmartPtr<GridFunction1dCPU1>
SmartPtr<GridFunction1dCPU1> clone ()
SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; clone ()<br><br>Member function of class <b>GridFunction1dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
add_transfer
void
void add_transfer (SmartPtr<ILocalTransferAlgebraCPU1> )
void add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a>&gt; )<br><br>Member function of class <b>GridFunction1dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
remove_transfer
void
void remove_transfer (SmartPtr<ILocalTransfer> )
void remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )<br><br>Member function of class <b>GridFunction1dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clear_transfers
void
void clear_transfers ()
void clear_transfers ()<br><br>Member function of class <b>GridFunction1dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunction1dCPU2
VectorCPU2 
Group <b>GridFunction</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="VectorCPU2.html">VectorCPU2</a> <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunction1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunction1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunction1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU2.html">ILocalTransferAlgebraCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign (const <a href="VectorCPU2.html">VectorCPU2</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_transfers ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>clone ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunction1dCPU2

GridFunction1dCPU2 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
GridFunction1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>GridFunction1dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
assign
void
void assign (const VectorCPU2Vector)
void assign (const <a href="VectorCPU2.html">VectorCPU2</a> *Vector)<br><br>Member function of class <b>GridFunction1dCPU2</b><br>returns Success<br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clone
SmartPtr<GridFunction1dCPU2>
SmartPtr<GridFunction1dCPU2> clone ()
SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; clone ()<br><br>Member function of class <b>GridFunction1dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
add_transfer
void
void add_transfer (SmartPtr<ILocalTransferAlgebraCPU2> )
void add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU2.html">ILocalTransferAlgebraCPU2</a>&gt; )<br><br>Member function of class <b>GridFunction1dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
remove_transfer
void
void remove_transfer (SmartPtr<ILocalTransfer> )
void remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )<br><br>Member function of class <b>GridFunction1dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clear_transfers
void
void clear_transfers ()
void clear_transfers ()<br><br>Member function of class <b>GridFunction1dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunction1dCPU3
VectorCPU3 
Group <b>GridFunction</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="VectorCPU3.html">VectorCPU3</a> <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunction1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunction1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunction1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU3.html">ILocalTransferAlgebraCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign (const <a href="VectorCPU3.html">VectorCPU3</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_transfers ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>clone ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunction1dCPU3

GridFunction1dCPU3 (SmartPtr<ApproximationSpace1d> ApproximationSpace)
GridFunction1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; ApproximationSpace)<br>Constructor of class <b>GridFunction1dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
assign
void
void assign (const VectorCPU3Vector)
void assign (const <a href="VectorCPU3.html">VectorCPU3</a> *Vector)<br><br>Member function of class <b>GridFunction1dCPU3</b><br>returns Success<br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clone
SmartPtr<GridFunction1dCPU3>
SmartPtr<GridFunction1dCPU3> clone ()
SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; clone ()<br><br>Member function of class <b>GridFunction1dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
add_transfer
void
void add_transfer (SmartPtr<ILocalTransferAlgebraCPU3> )
void add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU3.html">ILocalTransferAlgebraCPU3</a>&gt; )<br><br>Member function of class <b>GridFunction1dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
remove_transfer
void
void remove_transfer (SmartPtr<ILocalTransfer> )
void remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )<br><br>Member function of class <b>GridFunction1dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clear_transfers
void
void clear_transfers ()
void clear_transfers ()<br><br>Member function of class <b>GridFunction1dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunction2dCPU1
VectorCPU1 
Group <b>GridFunction</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="VectorCPU1.html">VectorCPU1</a> <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunction2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunction2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunction2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign (const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_transfers ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>clone ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunction2dCPU1

GridFunction2dCPU1 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
GridFunction2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>GridFunction2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
assign
void
void assign (const VectorCPU1Vector)
void assign (const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)<br><br>Member function of class <b>GridFunction2dCPU1</b><br>returns Success<br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clone
SmartPtr<GridFunction2dCPU1>
SmartPtr<GridFunction2dCPU1> clone ()
SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; clone ()<br><br>Member function of class <b>GridFunction2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
add_transfer
void
void add_transfer (SmartPtr<ILocalTransferAlgebraCPU1> )
void add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a>&gt; )<br><br>Member function of class <b>GridFunction2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
remove_transfer
void
void remove_transfer (SmartPtr<ILocalTransfer> )
void remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )<br><br>Member function of class <b>GridFunction2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clear_transfers
void
void clear_transfers ()
void clear_transfers ()<br><br>Member function of class <b>GridFunction2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunction2dCPU2
VectorCPU2 
Group <b>GridFunction</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="VectorCPU2.html">VectorCPU2</a> <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunction2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunction2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunction2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU2.html">ILocalTransferAlgebraCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign (const <a href="VectorCPU2.html">VectorCPU2</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_transfers ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>clone ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunction2dCPU2

GridFunction2dCPU2 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
GridFunction2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>GridFunction2dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
assign
void
void assign (const VectorCPU2Vector)
void assign (const <a href="VectorCPU2.html">VectorCPU2</a> *Vector)<br><br>Member function of class <b>GridFunction2dCPU2</b><br>returns Success<br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clone
SmartPtr<GridFunction2dCPU2>
SmartPtr<GridFunction2dCPU2> clone ()
SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; clone ()<br><br>Member function of class <b>GridFunction2dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
add_transfer
void
void add_transfer (SmartPtr<ILocalTransferAlgebraCPU2> )
void add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU2.html">ILocalTransferAlgebraCPU2</a>&gt; )<br><br>Member function of class <b>GridFunction2dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
remove_transfer
void
void remove_transfer (SmartPtr<ILocalTransfer> )
void remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )<br><br>Member function of class <b>GridFunction2dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clear_transfers
void
void clear_transfers ()
void clear_transfers ()<br><br>Member function of class <b>GridFunction2dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunction2dCPU3
VectorCPU3 
Group <b>GridFunction</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="VectorCPU3.html">VectorCPU3</a> <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunction2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunction2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunction2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU3.html">ILocalTransferAlgebraCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign (const <a href="VectorCPU3.html">VectorCPU3</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_transfers ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>clone ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunction2dCPU3

GridFunction2dCPU3 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
GridFunction2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>GridFunction2dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
assign
void
void assign (const VectorCPU3Vector)
void assign (const <a href="VectorCPU3.html">VectorCPU3</a> *Vector)<br><br>Member function of class <b>GridFunction2dCPU3</b><br>returns Success<br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clone
SmartPtr<GridFunction2dCPU3>
SmartPtr<GridFunction2dCPU3> clone ()
SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; clone ()<br><br>Member function of class <b>GridFunction2dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
add_transfer
void
void add_transfer (SmartPtr<ILocalTransferAlgebraCPU3> )
void add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU3.html">ILocalTransferAlgebraCPU3</a>&gt; )<br><br>Member function of class <b>GridFunction2dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
remove_transfer
void
void remove_transfer (SmartPtr<ILocalTransfer> )
void remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )<br><br>Member function of class <b>GridFunction2dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clear_transfers
void
void clear_transfers ()
void clear_transfers ()<br><br>Member function of class <b>GridFunction2dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunction3dCPU1
VectorCPU1 
Group <b>GridFunction</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="VectorCPU1.html">VectorCPU1</a> <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunction3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunction3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunction3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign (const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_transfers ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>clone ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunction3dCPU1

GridFunction3dCPU1 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
GridFunction3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>GridFunction3dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
assign
void
void assign (const VectorCPU1Vector)
void assign (const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)<br><br>Member function of class <b>GridFunction3dCPU1</b><br>returns Success<br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clone
SmartPtr<GridFunction3dCPU1>
SmartPtr<GridFunction3dCPU1> clone ()
SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; clone ()<br><br>Member function of class <b>GridFunction3dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
add_transfer
void
void add_transfer (SmartPtr<ILocalTransferAlgebraCPU1> )
void add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a>&gt; )<br><br>Member function of class <b>GridFunction3dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
remove_transfer
void
void remove_transfer (SmartPtr<ILocalTransfer> )
void remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )<br><br>Member function of class <b>GridFunction3dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clear_transfers
void
void clear_transfers ()
void clear_transfers ()<br><br>Member function of class <b>GridFunction3dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunction3dCPU2
VectorCPU2 
Group <b>GridFunction</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="VectorCPU2.html">VectorCPU2</a> <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunction3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunction3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunction3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU2.html">ILocalTransferAlgebraCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign (const <a href="VectorCPU2.html">VectorCPU2</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_transfers ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>clone ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunction3dCPU2

GridFunction3dCPU2 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
GridFunction3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>GridFunction3dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
assign
void
void assign (const VectorCPU2Vector)
void assign (const <a href="VectorCPU2.html">VectorCPU2</a> *Vector)<br><br>Member function of class <b>GridFunction3dCPU2</b><br>returns Success<br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clone
SmartPtr<GridFunction3dCPU2>
SmartPtr<GridFunction3dCPU2> clone ()
SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; clone ()<br><br>Member function of class <b>GridFunction3dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
add_transfer
void
void add_transfer (SmartPtr<ILocalTransferAlgebraCPU2> )
void add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU2.html">ILocalTransferAlgebraCPU2</a>&gt; )<br><br>Member function of class <b>GridFunction3dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
remove_transfer
void
void remove_transfer (SmartPtr<ILocalTransfer> )
void remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )<br><br>Member function of class <b>GridFunction3dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clear_transfers
void
void clear_transfers ()
void clear_transfers ()<br><br>Member function of class <b>GridFunction3dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunction3dCPU3
VectorCPU3 
Group <b>GridFunction</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="VectorCPU3.html">VectorCPU3</a> <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunction3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunction3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunction3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU3.html">ILocalTransferAlgebraCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign (const <a href="VectorCPU3.html">VectorCPU3</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_transfers ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>clone ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunction3dCPU3

GridFunction3dCPU3 (SmartPtr<ApproximationSpace3d> ApproximationSpace)
GridFunction3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; ApproximationSpace)<br>Constructor of class <b>GridFunction3dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
assign
void
void assign (const VectorCPU3Vector)
void assign (const <a href="VectorCPU3.html">VectorCPU3</a> *Vector)<br><br>Member function of class <b>GridFunction3dCPU3</b><br>returns Success<br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clone
SmartPtr<GridFunction3dCPU3>
SmartPtr<GridFunction3dCPU3> clone ()
SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; clone ()<br><br>Member function of class <b>GridFunction3dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
add_transfer
void
void add_transfer (SmartPtr<ILocalTransferAlgebraCPU3> )
void add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU3.html">ILocalTransferAlgebraCPU3</a>&gt; )<br><br>Member function of class <b>GridFunction3dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
remove_transfer
void
void remove_transfer (SmartPtr<ILocalTransfer> )
void remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )<br><br>Member function of class <b>GridFunction3dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clear_transfers
void
void clear_transfers ()
void clear_transfers ()<br><br>Member function of class <b>GridFunction3dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionDebugWriter1dCPU1
IVectorDebugWriterCPU1 IDebugWriterCPU1 
Group <b>GridFunctionDebugWriter</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a> <a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a> <a href="GridFunctionDebugWriter1dCPU1.html">GridFunctionDebugWriter1dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionDebugWriter1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionDebugWriter1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionDebugWriter1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_dir (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_conn_viewer_output (bool cvOutput)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_print_consistent (bool printConsistent)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_vtk_output (bool vtkOutput)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionDebugWriter1dCPU1

GridFunctionDebugWriter1dCPU1 (SmartPtr<ApproximationSpace1d> )
GridFunctionDebugWriter1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )<br>Constructor of class <b>GridFunctionDebugWriter1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
reset
void
void reset ()
void reset ()<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_vtk_output
void
void set_vtk_output (bool vtkOutput)
void set_vtk_output (bool vtkOutput)<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_conn_viewer_output
void
void set_conn_viewer_output (bool cvOutput)
void set_conn_viewer_output (bool cvOutput)<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_print_consistent
void
void set_print_consistent (bool printConsistent)
void set_print_consistent (bool printConsistent)<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_base_dir
void
void set_base_dir (c_string )
void set_base_dir (c_string )<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionDebugWriter1dCPU2
IVectorDebugWriterCPU2 IDebugWriterCPU2 
Group <b>GridFunctionDebugWriter</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a> <a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a> <a href="GridFunctionDebugWriter1dCPU2.html">GridFunctionDebugWriter1dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionDebugWriter1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionDebugWriter1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionDebugWriter1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_dir (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_conn_viewer_output (bool cvOutput)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_print_consistent (bool printConsistent)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_vtk_output (bool vtkOutput)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionDebugWriter1dCPU2

GridFunctionDebugWriter1dCPU2 (SmartPtr<ApproximationSpace1d> )
GridFunctionDebugWriter1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )<br>Constructor of class <b>GridFunctionDebugWriter1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
reset
void
void reset ()
void reset ()<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_vtk_output
void
void set_vtk_output (bool vtkOutput)
void set_vtk_output (bool vtkOutput)<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_conn_viewer_output
void
void set_conn_viewer_output (bool cvOutput)
void set_conn_viewer_output (bool cvOutput)<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_print_consistent
void
void set_print_consistent (bool printConsistent)
void set_print_consistent (bool printConsistent)<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_base_dir
void
void set_base_dir (c_string )
void set_base_dir (c_string )<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionDebugWriter1dCPU3
IVectorDebugWriterCPU3 IDebugWriterCPU3 
Group <b>GridFunctionDebugWriter</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a> <a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a> <a href="GridFunctionDebugWriter1dCPU3.html">GridFunctionDebugWriter1dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionDebugWriter1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionDebugWriter1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionDebugWriter1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_dir (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_conn_viewer_output (bool cvOutput)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_print_consistent (bool printConsistent)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_vtk_output (bool vtkOutput)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionDebugWriter1dCPU3

GridFunctionDebugWriter1dCPU3 (SmartPtr<ApproximationSpace1d> )
GridFunctionDebugWriter1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )<br>Constructor of class <b>GridFunctionDebugWriter1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
reset
void
void reset ()
void reset ()<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_vtk_output
void
void set_vtk_output (bool vtkOutput)
void set_vtk_output (bool vtkOutput)<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_conn_viewer_output
void
void set_conn_viewer_output (bool cvOutput)
void set_conn_viewer_output (bool cvOutput)<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_print_consistent
void
void set_print_consistent (bool printConsistent)
void set_print_consistent (bool printConsistent)<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_base_dir
void
void set_base_dir (c_string )
void set_base_dir (c_string )<br><br>Member function of class <b>GridFunctionDebugWriter1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionDebugWriter2dCPU1
IVectorDebugWriterCPU1 IDebugWriterCPU1 
Group <b>GridFunctionDebugWriter</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a> <a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a> <a href="GridFunctionDebugWriter2dCPU1.html">GridFunctionDebugWriter2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionDebugWriter2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionDebugWriter2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionDebugWriter2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_dir (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_conn_viewer_output (bool cvOutput)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_print_consistent (bool printConsistent)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_vtk_output (bool vtkOutput)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionDebugWriter2dCPU1

GridFunctionDebugWriter2dCPU1 (SmartPtr<ApproximationSpace2d> )
GridFunctionDebugWriter2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br>Constructor of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
reset
void
void reset ()
void reset ()<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_vtk_output
void
void set_vtk_output (bool vtkOutput)
void set_vtk_output (bool vtkOutput)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_conn_viewer_output
void
void set_conn_viewer_output (bool cvOutput)
void set_conn_viewer_output (bool cvOutput)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_print_consistent
void
void set_print_consistent (bool printConsistent)
void set_print_consistent (bool printConsistent)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_base_dir
void
void set_base_dir (c_string )
void set_base_dir (c_string )<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionDebugWriter2dCPU2
IVectorDebugWriterCPU2 IDebugWriterCPU2 
Group <b>GridFunctionDebugWriter</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a> <a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a> <a href="GridFunctionDebugWriter2dCPU2.html">GridFunctionDebugWriter2dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionDebugWriter2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionDebugWriter2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionDebugWriter2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_dir (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_conn_viewer_output (bool cvOutput)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_print_consistent (bool printConsistent)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_vtk_output (bool vtkOutput)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionDebugWriter2dCPU2

GridFunctionDebugWriter2dCPU2 (SmartPtr<ApproximationSpace2d> )
GridFunctionDebugWriter2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br>Constructor of class <b>GridFunctionDebugWriter2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
reset
void
void reset ()
void reset ()<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_vtk_output
void
void set_vtk_output (bool vtkOutput)
void set_vtk_output (bool vtkOutput)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_conn_viewer_output
void
void set_conn_viewer_output (bool cvOutput)
void set_conn_viewer_output (bool cvOutput)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_print_consistent
void
void set_print_consistent (bool printConsistent)
void set_print_consistent (bool printConsistent)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_base_dir
void
void set_base_dir (c_string )
void set_base_dir (c_string )<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionDebugWriter2dCPU3
IVectorDebugWriterCPU3 IDebugWriterCPU3 
Group <b>GridFunctionDebugWriter</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a> <a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a> <a href="GridFunctionDebugWriter2dCPU3.html">GridFunctionDebugWriter2dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionDebugWriter2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionDebugWriter2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionDebugWriter2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_dir (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_conn_viewer_output (bool cvOutput)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_print_consistent (bool printConsistent)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_vtk_output (bool vtkOutput)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionDebugWriter2dCPU3

GridFunctionDebugWriter2dCPU3 (SmartPtr<ApproximationSpace2d> )
GridFunctionDebugWriter2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br>Constructor of class <b>GridFunctionDebugWriter2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
reset
void
void reset ()
void reset ()<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_vtk_output
void
void set_vtk_output (bool vtkOutput)
void set_vtk_output (bool vtkOutput)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_conn_viewer_output
void
void set_conn_viewer_output (bool cvOutput)
void set_conn_viewer_output (bool cvOutput)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_print_consistent
void
void set_print_consistent (bool printConsistent)
void set_print_consistent (bool printConsistent)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_base_dir
void
void set_base_dir (c_string )
void set_base_dir (c_string )<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionDebugWriter3dCPU1
IVectorDebugWriterCPU1 IDebugWriterCPU1 
Group <b>GridFunctionDebugWriter</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a> <a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a> <a href="GridFunctionDebugWriter3dCPU1.html">GridFunctionDebugWriter3dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionDebugWriter3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionDebugWriter3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionDebugWriter3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_dir (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_conn_viewer_output (bool cvOutput)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_print_consistent (bool printConsistent)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_vtk_output (bool vtkOutput)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionDebugWriter3dCPU1

GridFunctionDebugWriter3dCPU1 (SmartPtr<ApproximationSpace3d> )
GridFunctionDebugWriter3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )<br>Constructor of class <b>GridFunctionDebugWriter3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
reset
void
void reset ()
void reset ()<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_vtk_output
void
void set_vtk_output (bool vtkOutput)
void set_vtk_output (bool vtkOutput)<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_conn_viewer_output
void
void set_conn_viewer_output (bool cvOutput)
void set_conn_viewer_output (bool cvOutput)<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_print_consistent
void
void set_print_consistent (bool printConsistent)
void set_print_consistent (bool printConsistent)<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_base_dir
void
void set_base_dir (c_string )
void set_base_dir (c_string )<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionDebugWriter3dCPU2
IVectorDebugWriterCPU2 IDebugWriterCPU2 
Group <b>GridFunctionDebugWriter</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a> <a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a> <a href="GridFunctionDebugWriter3dCPU2.html">GridFunctionDebugWriter3dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionDebugWriter3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionDebugWriter3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionDebugWriter3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_dir (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_conn_viewer_output (bool cvOutput)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_print_consistent (bool printConsistent)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_vtk_output (bool vtkOutput)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionDebugWriter3dCPU2

GridFunctionDebugWriter3dCPU2 (SmartPtr<ApproximationSpace3d> )
GridFunctionDebugWriter3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )<br>Constructor of class <b>GridFunctionDebugWriter3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
reset
void
void reset ()
void reset ()<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_vtk_output
void
void set_vtk_output (bool vtkOutput)
void set_vtk_output (bool vtkOutput)<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_conn_viewer_output
void
void set_conn_viewer_output (bool cvOutput)
void set_conn_viewer_output (bool cvOutput)<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_print_consistent
void
void set_print_consistent (bool printConsistent)
void set_print_consistent (bool printConsistent)<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_base_dir
void
void set_base_dir (c_string )
void set_base_dir (c_string )<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionDebugWriter3dCPU3
IVectorDebugWriterCPU3 IDebugWriterCPU3 
Group <b>GridFunctionDebugWriter</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a> <a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a> <a href="GridFunctionDebugWriter3dCPU3.html">GridFunctionDebugWriter3dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionDebugWriter3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionDebugWriter3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionDebugWriter3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_dir (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_conn_viewer_output (bool cvOutput)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_print_consistent (bool printConsistent)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_vtk_output (bool vtkOutput)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionDebugWriter3dCPU3

GridFunctionDebugWriter3dCPU3 (SmartPtr<ApproximationSpace3d> )
GridFunctionDebugWriter3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )<br>Constructor of class <b>GridFunctionDebugWriter3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
reset
void
void reset ()
void reset ()<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_vtk_output
void
void set_vtk_output (bool vtkOutput)
void set_vtk_output (bool vtkOutput)<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_conn_viewer_output
void
void set_conn_viewer_output (bool cvOutput)
void set_conn_viewer_output (bool cvOutput)<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_print_consistent
void
void set_print_consistent (bool printConsistent)
void set_print_consistent (bool printConsistent)<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_base_dir
void
void set_base_dir (c_string )
void set_base_dir (c_string )<br><br>Member function of class <b>GridFunctionDebugWriter3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionGradientData1dCPU1
IUserData UserVector1d 
Group <b>GridFunctionGradientData</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="GridFunctionGradientData1dCPU1.html">GridFunctionGradientData1dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionGradientData1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionGradientData1dCPU1 (SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionGradientData1dCPU1

GridFunctionGradientData1dCPU1 (SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component)
GridFunctionGradientData1dCPU1 (SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionGradientData1dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionGradientData1dCPU2
IUserData UserVector1d 
Group <b>GridFunctionGradientData</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="GridFunctionGradientData1dCPU2.html">GridFunctionGradientData1dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionGradientData1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionGradientData1dCPU2 (SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionGradientData1dCPU2

GridFunctionGradientData1dCPU2 (SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component)
GridFunctionGradientData1dCPU2 (SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionGradientData1dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionGradientData1dCPU3
IUserData UserVector1d 
Group <b>GridFunctionGradientData</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="GridFunctionGradientData1dCPU3.html">GridFunctionGradientData1dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionGradientData1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionGradientData1dCPU3 (SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionGradientData1dCPU3

GridFunctionGradientData1dCPU3 (SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component)
GridFunctionGradientData1dCPU3 (SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionGradientData1dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionGradientData2dCPU1
IUserData UserVector2d 
Group <b>GridFunctionGradientData</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="GridFunctionGradientData2dCPU1.html">GridFunctionGradientData2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionGradientData2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionGradientData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionGradientData2dCPU1

GridFunctionGradientData2dCPU1 (SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component)
GridFunctionGradientData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionGradientData2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionGradientData2dCPU2
IUserData UserVector2d 
Group <b>GridFunctionGradientData</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="GridFunctionGradientData2dCPU2.html">GridFunctionGradientData2dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionGradientData2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionGradientData2dCPU2 (SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionGradientData2dCPU2

GridFunctionGradientData2dCPU2 (SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component)
GridFunctionGradientData2dCPU2 (SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionGradientData2dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionGradientData2dCPU3
IUserData UserVector2d 
Group <b>GridFunctionGradientData</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="GridFunctionGradientData2dCPU3.html">GridFunctionGradientData2dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionGradientData2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionGradientData2dCPU3 (SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionGradientData2dCPU3

GridFunctionGradientData2dCPU3 (SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component)
GridFunctionGradientData2dCPU3 (SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionGradientData2dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionGradientData3dCPU1
IUserData UserVector3d 
Group <b>GridFunctionGradientData</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="GridFunctionGradientData3dCPU1.html">GridFunctionGradientData3dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionGradientData3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionGradientData3dCPU1 (SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionGradientData3dCPU1

GridFunctionGradientData3dCPU1 (SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component)
GridFunctionGradientData3dCPU1 (SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionGradientData3dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionGradientData3dCPU2
IUserData UserVector3d 
Group <b>GridFunctionGradientData</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="GridFunctionGradientData3dCPU2.html">GridFunctionGradientData3dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionGradientData3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionGradientData3dCPU2 (SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionGradientData3dCPU2

GridFunctionGradientData3dCPU2 (SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component)
GridFunctionGradientData3dCPU2 (SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionGradientData3dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionGradientData3dCPU3
IUserData UserVector3d 
Group <b>GridFunctionGradientData</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="GridFunctionGradientData3dCPU3.html">GridFunctionGradientData3dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionGradientData3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionGradientData3dCPU3 (SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionGradientData3dCPU3

GridFunctionGradientData3dCPU3 (SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component)
GridFunctionGradientData3dCPU3 (SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionGradientData3dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionNumberData1dCPU1
IUserData UserNumber1d 
Group <b>GridFunctionNumberData</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="GridFunctionNumberData1dCPU1.html">GridFunctionNumberData1dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionNumberData1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionNumberData1dCPU1 (SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionNumberData1dCPU1

GridFunctionNumberData1dCPU1 (SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component)
GridFunctionNumberData1dCPU1 (SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionNumberData1dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionNumberData1dCPU2
IUserData UserNumber1d 
Group <b>GridFunctionNumberData</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="GridFunctionNumberData1dCPU2.html">GridFunctionNumberData1dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionNumberData1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionNumberData1dCPU2 (SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionNumberData1dCPU2

GridFunctionNumberData1dCPU2 (SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component)
GridFunctionNumberData1dCPU2 (SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionNumberData1dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionNumberData1dCPU3
IUserData UserNumber1d 
Group <b>GridFunctionNumberData</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="GridFunctionNumberData1dCPU3.html">GridFunctionNumberData1dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionNumberData1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionNumberData1dCPU3 (SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionNumberData1dCPU3

GridFunctionNumberData1dCPU3 (SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component)
GridFunctionNumberData1dCPU3 (SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionNumberData1dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionNumberData2dCPU1
IUserData UserNumber2d 
Group <b>GridFunctionNumberData</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="GridFunctionNumberData2dCPU1.html">GridFunctionNumberData2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionNumberData2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionNumberData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionNumberData2dCPU1

GridFunctionNumberData2dCPU1 (SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component)
GridFunctionNumberData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionNumberData2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionNumberData2dCPU2
IUserData UserNumber2d 
Group <b>GridFunctionNumberData</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="GridFunctionNumberData2dCPU2.html">GridFunctionNumberData2dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionNumberData2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionNumberData2dCPU2 (SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionNumberData2dCPU2

GridFunctionNumberData2dCPU2 (SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component)
GridFunctionNumberData2dCPU2 (SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionNumberData2dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionNumberData2dCPU3
IUserData UserNumber2d 
Group <b>GridFunctionNumberData</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="GridFunctionNumberData2dCPU3.html">GridFunctionNumberData2dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionNumberData2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionNumberData2dCPU3 (SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionNumberData2dCPU3

GridFunctionNumberData2dCPU3 (SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component)
GridFunctionNumberData2dCPU3 (SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionNumberData2dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionNumberData3dCPU1
IUserData UserNumber3d 
Group <b>GridFunctionNumberData</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="GridFunctionNumberData3dCPU1.html">GridFunctionNumberData3dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionNumberData3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionNumberData3dCPU1 (SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionNumberData3dCPU1

GridFunctionNumberData3dCPU1 (SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component)
GridFunctionNumberData3dCPU1 (SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionNumberData3dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionNumberData3dCPU2
IUserData UserNumber3d 
Group <b>GridFunctionNumberData</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="GridFunctionNumberData3dCPU2.html">GridFunctionNumberData3dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionNumberData3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionNumberData3dCPU2 (SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionNumberData3dCPU2

GridFunctionNumberData3dCPU2 (SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component)
GridFunctionNumberData3dCPU2 (SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionNumberData3dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionNumberData3dCPU3
IUserData UserNumber3d 
Group <b>GridFunctionNumberData</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="GridFunctionNumberData3dCPU3.html">GridFunctionNumberData3dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionNumberData3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionNumberData3dCPU3 (SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionNumberData3dCPU3

GridFunctionNumberData3dCPU3 (SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component)
GridFunctionNumberData3dCPU3 (SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionNumberData3dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionPositionProvider1dCPU1
IPositionProvider1d 
Group <b>GridFunctionPositionProvider</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IPositionProvider1d.html">IPositionProvider1d</a> <a href="GridFunctionPositionProvider1dCPU1.html">GridFunctionPositionProvider1dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionPositionProvider1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionPositionProvider1dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionPositionProvider1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *gridFunction)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionPositionProvider1dCPU1

GridFunctionPositionProvider1dCPU1 ()
GridFunctionPositionProvider1dCPU1 ()<br>Constructor of class <b>GridFunctionPositionProvider1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction1dCPU1gridFunction)
void set_reference_grid_function (const <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *gridFunction)<br><br>Member function of class <b>GridFunctionPositionProvider1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionPositionProvider1dCPU2
IPositionProvider1d 
Group <b>GridFunctionPositionProvider</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IPositionProvider1d.html">IPositionProvider1d</a> <a href="GridFunctionPositionProvider1dCPU2.html">GridFunctionPositionProvider1dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionPositionProvider1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionPositionProvider1dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionPositionProvider1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *gridFunction)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionPositionProvider1dCPU2

GridFunctionPositionProvider1dCPU2 ()
GridFunctionPositionProvider1dCPU2 ()<br>Constructor of class <b>GridFunctionPositionProvider1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction1dCPU2gridFunction)
void set_reference_grid_function (const <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *gridFunction)<br><br>Member function of class <b>GridFunctionPositionProvider1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionPositionProvider1dCPU3
IPositionProvider1d 
Group <b>GridFunctionPositionProvider</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IPositionProvider1d.html">IPositionProvider1d</a> <a href="GridFunctionPositionProvider1dCPU3.html">GridFunctionPositionProvider1dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionPositionProvider1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionPositionProvider1dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionPositionProvider1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *gridFunction)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionPositionProvider1dCPU3

GridFunctionPositionProvider1dCPU3 ()
GridFunctionPositionProvider1dCPU3 ()<br>Constructor of class <b>GridFunctionPositionProvider1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction1dCPU3gridFunction)
void set_reference_grid_function (const <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *gridFunction)<br><br>Member function of class <b>GridFunctionPositionProvider1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionPositionProvider2dCPU1
IPositionProvider2d 
Group <b>GridFunctionPositionProvider</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IPositionProvider2d.html">IPositionProvider2d</a> <a href="GridFunctionPositionProvider2dCPU1.html">GridFunctionPositionProvider2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionPositionProvider2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionPositionProvider2dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionPositionProvider2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *gridFunction)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionPositionProvider2dCPU1

GridFunctionPositionProvider2dCPU1 ()
GridFunctionPositionProvider2dCPU1 ()<br>Constructor of class <b>GridFunctionPositionProvider2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction2dCPU1gridFunction)
void set_reference_grid_function (const <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *gridFunction)<br><br>Member function of class <b>GridFunctionPositionProvider2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionPositionProvider2dCPU2
IPositionProvider2d 
Group <b>GridFunctionPositionProvider</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IPositionProvider2d.html">IPositionProvider2d</a> <a href="GridFunctionPositionProvider2dCPU2.html">GridFunctionPositionProvider2dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionPositionProvider2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionPositionProvider2dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionPositionProvider2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *gridFunction)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionPositionProvider2dCPU2

GridFunctionPositionProvider2dCPU2 ()
GridFunctionPositionProvider2dCPU2 ()<br>Constructor of class <b>GridFunctionPositionProvider2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction2dCPU2gridFunction)
void set_reference_grid_function (const <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *gridFunction)<br><br>Member function of class <b>GridFunctionPositionProvider2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionPositionProvider2dCPU3
IPositionProvider2d 
Group <b>GridFunctionPositionProvider</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IPositionProvider2d.html">IPositionProvider2d</a> <a href="GridFunctionPositionProvider2dCPU3.html">GridFunctionPositionProvider2dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionPositionProvider2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionPositionProvider2dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionPositionProvider2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *gridFunction)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionPositionProvider2dCPU3

GridFunctionPositionProvider2dCPU3 ()
GridFunctionPositionProvider2dCPU3 ()<br>Constructor of class <b>GridFunctionPositionProvider2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction2dCPU3gridFunction)
void set_reference_grid_function (const <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *gridFunction)<br><br>Member function of class <b>GridFunctionPositionProvider2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionPositionProvider3dCPU1
IPositionProvider3d 
Group <b>GridFunctionPositionProvider</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IPositionProvider3d.html">IPositionProvider3d</a> <a href="GridFunctionPositionProvider3dCPU1.html">GridFunctionPositionProvider3dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionPositionProvider3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionPositionProvider3dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionPositionProvider3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *gridFunction)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionPositionProvider3dCPU1

GridFunctionPositionProvider3dCPU1 ()
GridFunctionPositionProvider3dCPU1 ()<br>Constructor of class <b>GridFunctionPositionProvider3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction3dCPU1gridFunction)
void set_reference_grid_function (const <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *gridFunction)<br><br>Member function of class <b>GridFunctionPositionProvider3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionPositionProvider3dCPU2
IPositionProvider3d 
Group <b>GridFunctionPositionProvider</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IPositionProvider3d.html">IPositionProvider3d</a> <a href="GridFunctionPositionProvider3dCPU2.html">GridFunctionPositionProvider3dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionPositionProvider3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionPositionProvider3dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionPositionProvider3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *gridFunction)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionPositionProvider3dCPU2

GridFunctionPositionProvider3dCPU2 ()
GridFunctionPositionProvider3dCPU2 ()<br>Constructor of class <b>GridFunctionPositionProvider3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction3dCPU2gridFunction)
void set_reference_grid_function (const <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *gridFunction)<br><br>Member function of class <b>GridFunctionPositionProvider3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionPositionProvider3dCPU3
IPositionProvider3d 
Group <b>GridFunctionPositionProvider</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IPositionProvider3d.html">IPositionProvider3d</a> <a href="GridFunctionPositionProvider3dCPU3.html">GridFunctionPositionProvider3dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionPositionProvider3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionPositionProvider3dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionPositionProvider3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *gridFunction)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionPositionProvider3dCPU3

GridFunctionPositionProvider3dCPU3 ()
GridFunctionPositionProvider3dCPU3 ()<br>Constructor of class <b>GridFunctionPositionProvider3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction3dCPU3gridFunction)
void set_reference_grid_function (const <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *gridFunction)<br><br>Member function of class <b>GridFunctionPositionProvider3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorData1dCPU1
IUserData UserVector1d 
Group <b>GridFunctionVectorData</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="GridFunctionVectorData1dCPU1.html">GridFunctionVectorData1dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorData1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorData1dCPU1 (SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Components)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorData1dCPU1

GridFunctionVectorData1dCPU1 (SmartPtr<GridFunction1dCPU1> GridFunction, c_string Components)
GridFunctionVectorData1dCPU1 (SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Components)<br>Constructor of class <b>GridFunctionVectorData1dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionVectorData1dCPU2
IUserData UserVector1d 
Group <b>GridFunctionVectorData</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="GridFunctionVectorData1dCPU2.html">GridFunctionVectorData1dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorData1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorData1dCPU2 (SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Components)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorData1dCPU2

GridFunctionVectorData1dCPU2 (SmartPtr<GridFunction1dCPU2> GridFunction, c_string Components)
GridFunctionVectorData1dCPU2 (SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Components)<br>Constructor of class <b>GridFunctionVectorData1dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionVectorData1dCPU3
IUserData UserVector1d 
Group <b>GridFunctionVectorData</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="GridFunctionVectorData1dCPU3.html">GridFunctionVectorData1dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorData1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorData1dCPU3 (SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Components)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorData1dCPU3

GridFunctionVectorData1dCPU3 (SmartPtr<GridFunction1dCPU3> GridFunction, c_string Components)
GridFunctionVectorData1dCPU3 (SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Components)<br>Constructor of class <b>GridFunctionVectorData1dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionVectorData2dCPU1
IUserData UserVector2d 
Group <b>GridFunctionVectorData</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="GridFunctionVectorData2dCPU1.html">GridFunctionVectorData2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorData2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Components)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorData2dCPU1

GridFunctionVectorData2dCPU1 (SmartPtr<GridFunction2dCPU1> GridFunction, c_string Components)
GridFunctionVectorData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Components)<br>Constructor of class <b>GridFunctionVectorData2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionVectorData2dCPU2
IUserData UserVector2d 
Group <b>GridFunctionVectorData</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="GridFunctionVectorData2dCPU2.html">GridFunctionVectorData2dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorData2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorData2dCPU2 (SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Components)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorData2dCPU2

GridFunctionVectorData2dCPU2 (SmartPtr<GridFunction2dCPU2> GridFunction, c_string Components)
GridFunctionVectorData2dCPU2 (SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Components)<br>Constructor of class <b>GridFunctionVectorData2dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionVectorData2dCPU3
IUserData UserVector2d 
Group <b>GridFunctionVectorData</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="GridFunctionVectorData2dCPU3.html">GridFunctionVectorData2dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorData2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorData2dCPU3 (SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Components)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorData2dCPU3

GridFunctionVectorData2dCPU3 (SmartPtr<GridFunction2dCPU3> GridFunction, c_string Components)
GridFunctionVectorData2dCPU3 (SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Components)<br>Constructor of class <b>GridFunctionVectorData2dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionVectorData3dCPU1
IUserData UserVector3d 
Group <b>GridFunctionVectorData</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="GridFunctionVectorData3dCPU1.html">GridFunctionVectorData3dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorData3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorData3dCPU1 (SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Components)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorData3dCPU1

GridFunctionVectorData3dCPU1 (SmartPtr<GridFunction3dCPU1> GridFunction, c_string Components)
GridFunctionVectorData3dCPU1 (SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Components)<br>Constructor of class <b>GridFunctionVectorData3dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionVectorData3dCPU2
IUserData UserVector3d 
Group <b>GridFunctionVectorData</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="GridFunctionVectorData3dCPU2.html">GridFunctionVectorData3dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorData3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorData3dCPU2 (SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Components)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorData3dCPU2

GridFunctionVectorData3dCPU2 (SmartPtr<GridFunction3dCPU2> GridFunction, c_string Components)
GridFunctionVectorData3dCPU2 (SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Components)<br>Constructor of class <b>GridFunctionVectorData3dCPU2</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionVectorData3dCPU3
IUserData UserVector3d 
Group <b>GridFunctionVectorData</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="GridFunctionVectorData3dCPU3.html">GridFunctionVectorData3dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorData3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorData3dCPU3 (SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Components)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorData3dCPU3

GridFunctionVectorData3dCPU3 (SmartPtr<GridFunction3dCPU3> GridFunction, c_string Components)
GridFunctionVectorData3dCPU3 (SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Components)<br>Constructor of class <b>GridFunctionVectorData3dCPU3</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionVectorWriter1dCPU1
IVectorWriterCPU1 
Group <b>GridFunctionVectorWriter</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> <a href="GridFunctionVectorWriter1dCPU1.html">GridFunctionVectorWriter1dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriter1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriter1dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriter1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *gridFunction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_user_data (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; userData)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU1.html">VectorCPU1</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriter1dCPU1

GridFunctionVectorWriter1dCPU1 ()
GridFunctionVectorWriter1dCPU1 ()<br>Constructor of class <b>GridFunctionVectorWriter1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction1dCPU1gridFunction)
void set_reference_grid_function (const <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *gridFunction)<br><br>Member function of class <b>GridFunctionVectorWriter1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_user_data
void
void set_user_data (SmartPtr<UserNumber1d> userData)
void set_user_data (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; userData)<br><br>Member function of class <b>GridFunctionVectorWriter1dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriter1dCPU2
IVectorWriterCPU2 
Group <b>GridFunctionVectorWriter</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IVectorWriterCPU2.html">IVectorWriterCPU2</a> <a href="GridFunctionVectorWriter1dCPU2.html">GridFunctionVectorWriter1dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriter1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriter1dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriter1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *gridFunction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_user_data (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; userData)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU2.html">VectorCPU2</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriter1dCPU2

GridFunctionVectorWriter1dCPU2 ()
GridFunctionVectorWriter1dCPU2 ()<br>Constructor of class <b>GridFunctionVectorWriter1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction1dCPU2gridFunction)
void set_reference_grid_function (const <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *gridFunction)<br><br>Member function of class <b>GridFunctionVectorWriter1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_user_data
void
void set_user_data (SmartPtr<UserNumber1d> userData)
void set_user_data (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; userData)<br><br>Member function of class <b>GridFunctionVectorWriter1dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriter1dCPU3
IVectorWriterCPU3 
Group <b>GridFunctionVectorWriter</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IVectorWriterCPU3.html">IVectorWriterCPU3</a> <a href="GridFunctionVectorWriter1dCPU3.html">GridFunctionVectorWriter1dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriter1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriter1dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriter1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *gridFunction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_user_data (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; userData)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU3.html">VectorCPU3</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriter1dCPU3

GridFunctionVectorWriter1dCPU3 ()
GridFunctionVectorWriter1dCPU3 ()<br>Constructor of class <b>GridFunctionVectorWriter1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction1dCPU3gridFunction)
void set_reference_grid_function (const <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *gridFunction)<br><br>Member function of class <b>GridFunctionVectorWriter1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_user_data
void
void set_user_data (SmartPtr<UserNumber1d> userData)
void set_user_data (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; userData)<br><br>Member function of class <b>GridFunctionVectorWriter1dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriter2dCPU1
IVectorWriterCPU1 
Group <b>GridFunctionVectorWriter</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> <a href="GridFunctionVectorWriter2dCPU1.html">GridFunctionVectorWriter2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriter2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriter2dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriter2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *gridFunction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_user_data (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; userData)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU1.html">VectorCPU1</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriter2dCPU1

GridFunctionVectorWriter2dCPU1 ()
GridFunctionVectorWriter2dCPU1 ()<br>Constructor of class <b>GridFunctionVectorWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction2dCPU1gridFunction)
void set_reference_grid_function (const <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *gridFunction)<br><br>Member function of class <b>GridFunctionVectorWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_user_data
void
void set_user_data (SmartPtr<UserNumber2d> userData)
void set_user_data (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; userData)<br><br>Member function of class <b>GridFunctionVectorWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriter2dCPU2
IVectorWriterCPU2 
Group <b>GridFunctionVectorWriter</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IVectorWriterCPU2.html">IVectorWriterCPU2</a> <a href="GridFunctionVectorWriter2dCPU2.html">GridFunctionVectorWriter2dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriter2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriter2dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriter2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *gridFunction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_user_data (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; userData)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU2.html">VectorCPU2</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriter2dCPU2

GridFunctionVectorWriter2dCPU2 ()
GridFunctionVectorWriter2dCPU2 ()<br>Constructor of class <b>GridFunctionVectorWriter2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction2dCPU2gridFunction)
void set_reference_grid_function (const <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *gridFunction)<br><br>Member function of class <b>GridFunctionVectorWriter2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_user_data
void
void set_user_data (SmartPtr<UserNumber2d> userData)
void set_user_data (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; userData)<br><br>Member function of class <b>GridFunctionVectorWriter2dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriter2dCPU3
IVectorWriterCPU3 
Group <b>GridFunctionVectorWriter</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IVectorWriterCPU3.html">IVectorWriterCPU3</a> <a href="GridFunctionVectorWriter2dCPU3.html">GridFunctionVectorWriter2dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriter2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriter2dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriter2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *gridFunction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_user_data (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; userData)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU3.html">VectorCPU3</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriter2dCPU3

GridFunctionVectorWriter2dCPU3 ()
GridFunctionVectorWriter2dCPU3 ()<br>Constructor of class <b>GridFunctionVectorWriter2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction2dCPU3gridFunction)
void set_reference_grid_function (const <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *gridFunction)<br><br>Member function of class <b>GridFunctionVectorWriter2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_user_data
void
void set_user_data (SmartPtr<UserNumber2d> userData)
void set_user_data (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; userData)<br><br>Member function of class <b>GridFunctionVectorWriter2dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriter3dCPU1
IVectorWriterCPU1 
Group <b>GridFunctionVectorWriter</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> <a href="GridFunctionVectorWriter3dCPU1.html">GridFunctionVectorWriter3dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriter3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriter3dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriter3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *gridFunction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_user_data (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; userData)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU1.html">VectorCPU1</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriter3dCPU1

GridFunctionVectorWriter3dCPU1 ()
GridFunctionVectorWriter3dCPU1 ()<br>Constructor of class <b>GridFunctionVectorWriter3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction3dCPU1gridFunction)
void set_reference_grid_function (const <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *gridFunction)<br><br>Member function of class <b>GridFunctionVectorWriter3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_user_data
void
void set_user_data (SmartPtr<UserNumber3d> userData)
void set_user_data (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; userData)<br><br>Member function of class <b>GridFunctionVectorWriter3dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriter3dCPU2
IVectorWriterCPU2 
Group <b>GridFunctionVectorWriter</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IVectorWriterCPU2.html">IVectorWriterCPU2</a> <a href="GridFunctionVectorWriter3dCPU2.html">GridFunctionVectorWriter3dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriter3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriter3dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriter3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *gridFunction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_user_data (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; userData)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU2.html">VectorCPU2</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriter3dCPU2

GridFunctionVectorWriter3dCPU2 ()
GridFunctionVectorWriter3dCPU2 ()<br>Constructor of class <b>GridFunctionVectorWriter3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction3dCPU2gridFunction)
void set_reference_grid_function (const <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *gridFunction)<br><br>Member function of class <b>GridFunctionVectorWriter3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_user_data
void
void set_user_data (SmartPtr<UserNumber3d> userData)
void set_user_data (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; userData)<br><br>Member function of class <b>GridFunctionVectorWriter3dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriter3dCPU3
IVectorWriterCPU3 
Group <b>GridFunctionVectorWriter</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IVectorWriterCPU3.html">IVectorWriterCPU3</a> <a href="GridFunctionVectorWriter3dCPU3.html">GridFunctionVectorWriter3dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriter3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriter3dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriter3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *gridFunction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_user_data (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; userData)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU3.html">VectorCPU3</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriter3dCPU3

GridFunctionVectorWriter3dCPU3 ()
GridFunctionVectorWriter3dCPU3 ()<br>Constructor of class <b>GridFunctionVectorWriter3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction3dCPU3gridFunction)
void set_reference_grid_function (const <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *gridFunction)<br><br>Member function of class <b>GridFunctionVectorWriter3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_user_data
void
void set_user_data (SmartPtr<UserNumber3d> userData)
void set_user_data (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; userData)<br><br>Member function of class <b>GridFunctionVectorWriter3dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriterDirichlet01dCPU1
IVectorWriterCPU1 
Group <b>GridFunctionVectorWriterDirichlet0</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> <a href="GridFunctionVectorWriterDirichlet01dCPU1.html">GridFunctionVectorWriterDirichlet01dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet01dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriterDirichlet01dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet01dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; postProcess, <a href="ApproximationSpace1d.html">ApproximationSpace1d</a> *approxSpace)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (integer level)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU1.html">VectorCPU1</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriterDirichlet01dCPU1

GridFunctionVectorWriterDirichlet01dCPU1 ()
GridFunctionVectorWriterDirichlet01dCPU1 ()<br>Constructor of class <b>GridFunctionVectorWriterDirichlet01dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
init
void
void init (SmartPtr<IConstraintCPU1> postProcess, ApproximationSpace1dapproxSpace)
void init (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; postProcess, <a href="ApproximationSpace1d.html">ApproximationSpace1d</a> *approxSpace)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet01dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_level
void
void set_level (integer level)
void set_level (integer level)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet01dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriterDirichlet01dCPU2
IVectorWriterCPU2 
Group <b>GridFunctionVectorWriterDirichlet0</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IVectorWriterCPU2.html">IVectorWriterCPU2</a> <a href="GridFunctionVectorWriterDirichlet01dCPU2.html">GridFunctionVectorWriterDirichlet01dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet01dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriterDirichlet01dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet01dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; postProcess, <a href="ApproximationSpace1d.html">ApproximationSpace1d</a> *approxSpace)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (integer level)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU2.html">VectorCPU2</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriterDirichlet01dCPU2

GridFunctionVectorWriterDirichlet01dCPU2 ()
GridFunctionVectorWriterDirichlet01dCPU2 ()<br>Constructor of class <b>GridFunctionVectorWriterDirichlet01dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
init
void
void init (SmartPtr<IConstraintCPU2> postProcess, ApproximationSpace1dapproxSpace)
void init (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; postProcess, <a href="ApproximationSpace1d.html">ApproximationSpace1d</a> *approxSpace)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet01dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_level
void
void set_level (integer level)
void set_level (integer level)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet01dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriterDirichlet01dCPU3
IVectorWriterCPU3 
Group <b>GridFunctionVectorWriterDirichlet0</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IVectorWriterCPU3.html">IVectorWriterCPU3</a> <a href="GridFunctionVectorWriterDirichlet01dCPU3.html">GridFunctionVectorWriterDirichlet01dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet01dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriterDirichlet01dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet01dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; postProcess, <a href="ApproximationSpace1d.html">ApproximationSpace1d</a> *approxSpace)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (integer level)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU3.html">VectorCPU3</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriterDirichlet01dCPU3

GridFunctionVectorWriterDirichlet01dCPU3 ()
GridFunctionVectorWriterDirichlet01dCPU3 ()<br>Constructor of class <b>GridFunctionVectorWriterDirichlet01dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
init
void
void init (SmartPtr<IConstraintCPU3> postProcess, ApproximationSpace1dapproxSpace)
void init (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; postProcess, <a href="ApproximationSpace1d.html">ApproximationSpace1d</a> *approxSpace)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet01dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_level
void
void set_level (integer level)
void set_level (integer level)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet01dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriterDirichlet02dCPU1
IVectorWriterCPU1 
Group <b>GridFunctionVectorWriterDirichlet0</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> <a href="GridFunctionVectorWriterDirichlet02dCPU1.html">GridFunctionVectorWriterDirichlet02dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet02dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriterDirichlet02dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet02dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; postProcess, <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *approxSpace)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (integer level)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU1.html">VectorCPU1</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriterDirichlet02dCPU1

GridFunctionVectorWriterDirichlet02dCPU1 ()
GridFunctionVectorWriterDirichlet02dCPU1 ()<br>Constructor of class <b>GridFunctionVectorWriterDirichlet02dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
init
void
void init (SmartPtr<IConstraintCPU1> postProcess, ApproximationSpace2dapproxSpace)
void init (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; postProcess, <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *approxSpace)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet02dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_level
void
void set_level (integer level)
void set_level (integer level)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet02dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriterDirichlet02dCPU2
IVectorWriterCPU2 
Group <b>GridFunctionVectorWriterDirichlet0</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IVectorWriterCPU2.html">IVectorWriterCPU2</a> <a href="GridFunctionVectorWriterDirichlet02dCPU2.html">GridFunctionVectorWriterDirichlet02dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet02dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriterDirichlet02dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet02dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; postProcess, <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *approxSpace)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (integer level)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU2.html">VectorCPU2</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriterDirichlet02dCPU2

GridFunctionVectorWriterDirichlet02dCPU2 ()
GridFunctionVectorWriterDirichlet02dCPU2 ()<br>Constructor of class <b>GridFunctionVectorWriterDirichlet02dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
init
void
void init (SmartPtr<IConstraintCPU2> postProcess, ApproximationSpace2dapproxSpace)
void init (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; postProcess, <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *approxSpace)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet02dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_level
void
void set_level (integer level)
void set_level (integer level)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet02dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriterDirichlet02dCPU3
IVectorWriterCPU3 
Group <b>GridFunctionVectorWriterDirichlet0</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IVectorWriterCPU3.html">IVectorWriterCPU3</a> <a href="GridFunctionVectorWriterDirichlet02dCPU3.html">GridFunctionVectorWriterDirichlet02dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet02dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriterDirichlet02dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet02dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; postProcess, <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *approxSpace)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (integer level)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU3.html">VectorCPU3</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriterDirichlet02dCPU3

GridFunctionVectorWriterDirichlet02dCPU3 ()
GridFunctionVectorWriterDirichlet02dCPU3 ()<br>Constructor of class <b>GridFunctionVectorWriterDirichlet02dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
init
void
void init (SmartPtr<IConstraintCPU3> postProcess, ApproximationSpace2dapproxSpace)
void init (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; postProcess, <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *approxSpace)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet02dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_level
void
void set_level (integer level)
void set_level (integer level)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet02dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriterDirichlet03dCPU1
IVectorWriterCPU1 
Group <b>GridFunctionVectorWriterDirichlet0</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> <a href="GridFunctionVectorWriterDirichlet03dCPU1.html">GridFunctionVectorWriterDirichlet03dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet03dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriterDirichlet03dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet03dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; postProcess, <a href="ApproximationSpace3d.html">ApproximationSpace3d</a> *approxSpace)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (integer level)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU1.html">VectorCPU1</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriterDirichlet03dCPU1

GridFunctionVectorWriterDirichlet03dCPU1 ()
GridFunctionVectorWriterDirichlet03dCPU1 ()<br>Constructor of class <b>GridFunctionVectorWriterDirichlet03dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
init
void
void init (SmartPtr<IConstraintCPU1> postProcess, ApproximationSpace3dapproxSpace)
void init (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; postProcess, <a href="ApproximationSpace3d.html">ApproximationSpace3d</a> *approxSpace)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet03dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_level
void
void set_level (integer level)
void set_level (integer level)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet03dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriterDirichlet03dCPU2
IVectorWriterCPU2 
Group <b>GridFunctionVectorWriterDirichlet0</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IVectorWriterCPU2.html">IVectorWriterCPU2</a> <a href="GridFunctionVectorWriterDirichlet03dCPU2.html">GridFunctionVectorWriterDirichlet03dCPU2</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet03dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriterDirichlet03dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet03dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; postProcess, <a href="ApproximationSpace3d.html">ApproximationSpace3d</a> *approxSpace)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (integer level)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU2.html">VectorCPU2</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriterDirichlet03dCPU2

GridFunctionVectorWriterDirichlet03dCPU2 ()
GridFunctionVectorWriterDirichlet03dCPU2 ()<br>Constructor of class <b>GridFunctionVectorWriterDirichlet03dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
init
void
void init (SmartPtr<IConstraintCPU2> postProcess, ApproximationSpace3dapproxSpace)
void init (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; postProcess, <a href="ApproximationSpace3d.html">ApproximationSpace3d</a> *approxSpace)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet03dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_level
void
void set_level (integer level)
void set_level (integer level)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet03dCPU2</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriterDirichlet03dCPU3
IVectorWriterCPU3 
Group <b>GridFunctionVectorWriterDirichlet0</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IVectorWriterCPU3.html">IVectorWriterCPU3</a> <a href="GridFunctionVectorWriterDirichlet03dCPU3.html">GridFunctionVectorWriterDirichlet03dCPU3</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet03dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriterDirichlet03dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet03dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; postProcess, <a href="ApproximationSpace3d.html">ApproximationSpace3d</a> *approxSpace)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (integer level)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU3.html">VectorCPU3</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriterDirichlet03dCPU3

GridFunctionVectorWriterDirichlet03dCPU3 ()
GridFunctionVectorWriterDirichlet03dCPU3 ()<br>Constructor of class <b>GridFunctionVectorWriterDirichlet03dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
init
void
void init (SmartPtr<IConstraintCPU3> postProcess, ApproximationSpace3dapproxSpace)
void init (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; postProcess, <a href="ApproximationSpace3d.html">ApproximationSpace3d</a> *approxSpace)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet03dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_level
void
void set_level (integer level)
void set_level (integer level)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet03dCPU3</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridLevel

class has constructor. <br><table><tr><td colspan=2><h3>GridLevel Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridLevel ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridLevel (integer Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridLevel (integer Level, Type, std_string )</td></tr><tr><td><br></td></tr></table>
constructor
GridLevel

GridLevel ()
GridLevel ()<br>Constructor of class <b>GridLevel</b><br>group: <b>/ug4/Discretization</b>
constructor
GridLevel

GridLevel (integer Level)
GridLevel (integer Level)<br>Constructor of class <b>GridLevel</b><br>group: <b>/ug4/Discretization</b>
constructor
GridLevel

GridLevel (integer Level, Type, std_string )
GridLevel (integer Level, Type, std_string )<br>Constructor of class <b>GridLevel</b><br>group: <b>/ug4/Discretization</b>
;
class
GridObject
Grid 
class has constructor. <br>Inheritance: <a href="Grid.html">Grid</a> <a href="GridObject.html">GridObject</a> <br><table><tr><td colspan=2><h3>GridObject Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridObject ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridObject Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top><a href="Grid.html">Grid</a> *</td><td class="memItemRight" valign=bottom>grid ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top><a href="SubsetHandler.html">SubsetHandler</a> *</td><td class="memItemRight" valign=bottom>subset_handler ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Grid Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Grid ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited Grid Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_edges (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_faces (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_vertices (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_volumes (integer )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited Grid Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_edges ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_faces ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_hexahedrons ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prisms ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_pyramids ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_quadrilaterals ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_tetrahedrons ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_triangles ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_vertices ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_volumes ()</td></tr><tr><td><br></td></tr></table>
constructor
GridObject

GridObject ()
GridObject ()<br>Constructor of class <b>GridObject</b><br>group: <b>/ug4/Grid</b>
memberfunction
grid
Grid*
Gridgrid ()
<a href="Grid.html">Grid</a> *grid ()<br><br>Member function of class <b>GridObject</b><br>group: <b>/ug4/Grid</b>
memberfunction
subset_handler
SubsetHandler*
SubsetHandlersubset_handler ()
<a href="SubsetHandler.html">SubsetHandler</a> *subset_handler ()<br><br>Member function of class <b>GridObject</b><br>group: <b>/ug4/Grid</b>
;
class
HangingNodeRefiner_Grid
IRefiner 
class has constructor. <br>Inheritance: <a href="IRefiner.html">IRefiner</a> <a href="HangingNodeRefiner_Grid.html">HangingNodeRefiner_Grid</a> <br><table><tr><td colspan=2><h3>HangingNodeRefiner_Grid Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>HangingNodeRefiner_Grid ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>HangingNodeRefiner_Grid Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign_grid (<a href="Grid.html">Grid</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IRefiner Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_marks ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>coarsen ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>refine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>save_marks_to_file (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_adjusted_marks_debug_filename (c_string )</td></tr><tr><td><br></td></tr></table>
constructor
HangingNodeRefiner_Grid

HangingNodeRefiner_Grid ()
HangingNodeRefiner_Grid ()<br>Constructor of class <b>HangingNodeRefiner_Grid</b><br>group: <b>/ug4/Grid</b>
memberfunction
assign_grid
void
void assign_grid (Grid)
void assign_grid (<a href="Grid.html">Grid</a> *)<br><br>Member function of class <b>HangingNodeRefiner_Grid</b><br>group: <b>/ug4/Grid</b>
;
class
HangingNodeRefiner_MultiGrid
IRefiner 
class has constructor. <br>Inheritance: <a href="IRefiner.html">IRefiner</a> <a href="HangingNodeRefiner_MultiGrid.html">HangingNodeRefiner_MultiGrid</a> <br><table><tr><td colspan=2><h3>HangingNodeRefiner_MultiGrid Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>HangingNodeRefiner_MultiGrid ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>HangingNodeRefiner_MultiGrid Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IRefiner Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_marks ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>coarsen ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>refine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>save_marks_to_file (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_adjusted_marks_debug_filename (c_string )</td></tr><tr><td><br></td></tr></table>
constructor
HangingNodeRefiner_MultiGrid

HangingNodeRefiner_MultiGrid ()
HangingNodeRefiner_MultiGrid ()<br>Constructor of class <b>HangingNodeRefiner_MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
assign_grid
void
void assign_grid (MultiGrid)
void assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)<br><br>Member function of class <b>HangingNodeRefiner_MultiGrid</b><br>group: <b>/ug4/Grid</b>
;
class
IApproximationSpace

class has no constructor. <br><table><tr><td colspan=2><h3>IApproximationSpace Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type, integer Order, c_string Subsets)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type, integer Order)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>defragment ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_surfaces ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_top_surface ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>IApproximationSpace Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>dim (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>c_string </td><td class="memItemRight" valign=bottom>name (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_fct ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_layout_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_layout_statistic ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_local_dof_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_local_dof_statistic ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic ()</td></tr><tr><td><br></td></tr></table>
memberfunction
init_levels
void
void init_levels ()
void init_levels ()<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
init_surfaces
void
void init_surfaces ()
void init_surfaces ()<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
init_top_surface
void
void init_top_surface ()
void init_top_surface ()<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
defragment
void
void defragment ()
void defragment ()<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
add_fct
void
void add_fct (c_string Name, c_string Type, integer Order, c_string Subsets)
void add_fct (c_string Name, c_string Type, integer Order, c_string Subsets)<br><br>Member function of class <b>IApproximationSpace</b><br>tooltip: Adds a function to the Function Pattern<br>help: currently no help available<br>group: <b>/ug4/Discretization</b>
memberfunction
add_fct
void
void add_fct (c_string Name, c_string Type, integer Order)
void add_fct (c_string Name, c_string Type, integer Order)<br><br>Member function of class <b>IApproximationSpace</b><br>tooltip: Adds a function to the Function Pattern<br>help: currently no help available<br>group: <b>/ug4/Discretization</b>
memberfunction
add_fct
void
void add_fct (c_string Name, c_string Type)
void add_fct (c_string Name, c_string Type)<br><br>Member function of class <b>IApproximationSpace</b><br>tooltip: Adds a function to the Function Pattern<br>help: currently no help available<br>group: <b>/ug4/Discretization</b>
memberfunction
print_statistic
void
void print_statistic (integer ) const
void print_statistic (integer )<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
print_statistic
void
void print_statistic () const
void print_statistic ()<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
print_layout_statistic
void
void print_layout_statistic (integer ) const
void print_layout_statistic (integer )<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
print_layout_statistic
void
void print_layout_statistic () const
void print_layout_statistic ()<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
print_local_dof_statistic
void
void print_local_dof_statistic (integer ) const
void print_local_dof_statistic (integer )<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
print_local_dof_statistic
void
void print_local_dof_statistic () const
void print_local_dof_statistic ()<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
num_levels
integer
integer num_levels () const
integer num_levels ()<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
num_fct
integer
integer num_fct () const
integer num_fct ()<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
name
string
c_string name (integer ) const
c_string name (integer )<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
memberfunction
dim
integer
integer dim (integer ) const
integer dim (integer )<br><br>Member function of class <b>IApproximationSpace</b><br>group: <b>/ug4/Discretization</b>
;
class
IAssembleCPU1

Group <b>IAssemble</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table><tr><td colspan=2><h3>IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
assemble_jacobian
void
void assemble_jacobian (MatrixCPU1J(u), const VectorCPU1u)
void assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: assembles jacobian on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_defect
void
void assemble_defect (VectorCPU1d(u), const VectorCPU1u)
void assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: Assembles Defect at a given Solution u.<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_linear
void
void assemble_linear (MatrixCPU1A, VectorCPU1b)
void assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: Assembles Matrix and rhs on surface grid.<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_stiffness_matrix
void
void assemble_stiffness_matrix (MatrixCPU1A, const VectorCPU1u)
void assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: assembles stiffness matrix on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_mass_matrix
void
void assemble_mass_matrix (MatrixCPU1M, const VectorCPU1u)
void assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: assembles mass matrix on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_rhs
void
void assemble_rhs (VectorCPU1rhs, const VectorCPU1u)
void assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: assembles right-hand side on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_rhs
void
void assemble_rhs (VectorCPU1rhs)
void assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: assembles right-hand side on surface grid for linear case<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
adjust_solution
void
void adjust_solution (VectorCPU1)
void adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>Member function of class <b>IAssembleCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
IAssembleCPU2

Group <b>IAssemble</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table><tr><td colspan=2><h3>IAssembleCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU2.html">VectorCPU2</a> *d(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *J(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *M, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
assemble_jacobian
void
void assemble_jacobian (MatrixCPU2J(u), const VectorCPU2u)
void assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *J(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)<br><br>Member function of class <b>IAssembleCPU2</b><br>tooltip: assembles jacobian on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_defect
void
void assemble_defect (VectorCPU2d(u), const VectorCPU2u)
void assemble_defect (<a href="VectorCPU2.html">VectorCPU2</a> *d(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)<br><br>Member function of class <b>IAssembleCPU2</b><br>tooltip: Assembles Defect at a given Solution u.<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_linear
void
void assemble_linear (MatrixCPU2A, VectorCPU2b)
void assemble_linear (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, <a href="VectorCPU2.html">VectorCPU2</a> *b)<br><br>Member function of class <b>IAssembleCPU2</b><br>tooltip: Assembles Matrix and rhs on surface grid.<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_stiffness_matrix
void
void assemble_stiffness_matrix (MatrixCPU2A, const VectorCPU2u)
void assemble_stiffness_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, const <a href="VectorCPU2.html">VectorCPU2</a> *u)<br><br>Member function of class <b>IAssembleCPU2</b><br>tooltip: assembles stiffness matrix on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_mass_matrix
void
void assemble_mass_matrix (MatrixCPU2M, const VectorCPU2u)
void assemble_mass_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *M, const <a href="VectorCPU2.html">VectorCPU2</a> *u)<br><br>Member function of class <b>IAssembleCPU2</b><br>tooltip: assembles mass matrix on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_rhs
void
void assemble_rhs (VectorCPU2rhs, const VectorCPU2u)
void assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs, const <a href="VectorCPU2.html">VectorCPU2</a> *u)<br><br>Member function of class <b>IAssembleCPU2</b><br>tooltip: assembles right-hand side on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_rhs
void
void assemble_rhs (VectorCPU2rhs)
void assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs)<br><br>Member function of class <b>IAssembleCPU2</b><br>tooltip: assembles right-hand side on surface grid for linear case<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
adjust_solution
void
void adjust_solution (VectorCPU2)
void adjust_solution (<a href="VectorCPU2.html">VectorCPU2</a> *)<br><br>Member function of class <b>IAssembleCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
IAssembleCPU3

Group <b>IAssemble</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table><tr><td colspan=2><h3>IAssembleCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU3.html">VectorCPU3</a> *d(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *J(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *M, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
assemble_jacobian
void
void assemble_jacobian (MatrixCPU3J(u), const VectorCPU3u)
void assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *J(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)<br><br>Member function of class <b>IAssembleCPU3</b><br>tooltip: assembles jacobian on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_defect
void
void assemble_defect (VectorCPU3d(u), const VectorCPU3u)
void assemble_defect (<a href="VectorCPU3.html">VectorCPU3</a> *d(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)<br><br>Member function of class <b>IAssembleCPU3</b><br>tooltip: Assembles Defect at a given Solution u.<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_linear
void
void assemble_linear (MatrixCPU3A, VectorCPU3b)
void assemble_linear (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, <a href="VectorCPU3.html">VectorCPU3</a> *b)<br><br>Member function of class <b>IAssembleCPU3</b><br>tooltip: Assembles Matrix and rhs on surface grid.<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_stiffness_matrix
void
void assemble_stiffness_matrix (MatrixCPU3A, const VectorCPU3u)
void assemble_stiffness_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, const <a href="VectorCPU3.html">VectorCPU3</a> *u)<br><br>Member function of class <b>IAssembleCPU3</b><br>tooltip: assembles stiffness matrix on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_mass_matrix
void
void assemble_mass_matrix (MatrixCPU3M, const VectorCPU3u)
void assemble_mass_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *M, const <a href="VectorCPU3.html">VectorCPU3</a> *u)<br><br>Member function of class <b>IAssembleCPU3</b><br>tooltip: assembles mass matrix on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_rhs
void
void assemble_rhs (VectorCPU3rhs, const VectorCPU3u)
void assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs, const <a href="VectorCPU3.html">VectorCPU3</a> *u)<br><br>Member function of class <b>IAssembleCPU3</b><br>tooltip: assembles right-hand side on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_rhs
void
void assemble_rhs (VectorCPU3rhs)
void assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs)<br><br>Member function of class <b>IAssembleCPU3</b><br>tooltip: assembles right-hand side on surface grid for linear case<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
adjust_solution
void
void adjust_solution (VectorCPU3)
void adjust_solution (<a href="VectorCPU3.html">VectorCPU3</a> *)<br><br>Member function of class <b>IAssembleCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
IConstraintCPU1

Group <b>IConstraint</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table></table>
;
class
IConstraintCPU2

Group <b>IConstraint</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table></table>
;
class
IConstraintCPU3

Group <b>IConstraint</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table></table>
;
class
IConvectionShapes1d

Group <b>IConvectionShapes</b><br>class has no constructor.  Tag <b>dim=1d;</b><br><table></table>
;
class
IConvectionShapes2d

Group <b>IConvectionShapes</b><br>class has no constructor.  Tag <b>dim=2d;</b><br><table></table>
;
class
IConvectionShapes3d

Group <b>IConvectionShapes</b><br>class has no constructor.  Tag <b>dim=3d;</b><br><table></table>
;
class
IConvergenceCheckCPU1

Group <b>IConvergenceCheck</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table></table>
;
class
IConvergenceCheckCPU2

Group <b>IConvergenceCheck</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table></table>
;
class
IConvergenceCheckCPU3

Group <b>IConvergenceCheck</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table></table>
;
class
IDampingCPU1

Group <b>IDamping</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table></table>
;
class
IDampingCPU2

Group <b>IDamping</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table></table>
;
class
IDampingCPU3

Group <b>IDamping</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table></table>
;
class
IDebugWriterCPU1
IVectorDebugWriterCPU1 
Group <b>IDebugWriter</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a> <a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a> <br><table></table>
;
class
IDebugWriterCPU2
IVectorDebugWriterCPU2 
Group <b>IDebugWriter</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a> <a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a> <br><table></table>
;
class
IDebugWriterCPU3
IVectorDebugWriterCPU3 
Group <b>IDebugWriter</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a> <a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a> <br><table></table>
;
class
IDiscretizationItem1dCPU1

Group <b>IDiscretizationItem</b><br>class has no constructor.  Tag <b>dim=1d;alg=CPU1;</b><br><table></table>
;
class
IDiscretizationItem1dCPU2

Group <b>IDiscretizationItem</b><br>class has no constructor.  Tag <b>dim=1d;alg=CPU2;</b><br><table></table>
;
class
IDiscretizationItem1dCPU3

Group <b>IDiscretizationItem</b><br>class has no constructor.  Tag <b>dim=1d;alg=CPU3;</b><br><table></table>
;
class
IDiscretizationItem2dCPU1

Group <b>IDiscretizationItem</b><br>class has no constructor.  Tag <b>dim=2d;alg=CPU1;</b><br><table></table>
;
class
IDiscretizationItem2dCPU2

Group <b>IDiscretizationItem</b><br>class has no constructor.  Tag <b>dim=2d;alg=CPU2;</b><br><table></table>
;
class
IDiscretizationItem2dCPU3

Group <b>IDiscretizationItem</b><br>class has no constructor.  Tag <b>dim=2d;alg=CPU3;</b><br><table></table>
;
class
IDiscretizationItem3dCPU1

Group <b>IDiscretizationItem</b><br>class has no constructor.  Tag <b>dim=3d;alg=CPU1;</b><br><table></table>
;
class
IDiscretizationItem3dCPU2

Group <b>IDiscretizationItem</b><br>class has no constructor.  Tag <b>dim=3d;alg=CPU2;</b><br><table></table>
;
class
IDiscretizationItem3dCPU3

Group <b>IDiscretizationItem</b><br>class has no constructor.  Tag <b>dim=3d;alg=CPU3;</b><br><table></table>
;
class
IDomain

class has no constructor. <br><table><tr><td colspan=2><h3>IDomain Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="MultiGrid.html">MultiGrid</a>&gt; </td><td class="memItemRight" valign=bottom>grid ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="MGSubsetHandler.html">MGSubsetHandler</a>&gt; </td><td class="memItemRight" valign=bottom>subset_handler ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>IDomain Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td><br></td></tr></table>
memberfunction
subset_handler
SmartPtr<MGSubsetHandler>
SmartPtr<MGSubsetHandler> subset_handler ()
SmartPtr&lt;<a href="MGSubsetHandler.html">MGSubsetHandler</a>&gt; subset_handler ()<br><br>Member function of class <b>IDomain</b><br>group: <b>/ug4/Domain</b>
memberfunction
grid
SmartPtr<MultiGrid>
SmartPtr<MultiGrid> grid ()
SmartPtr&lt;<a href="MultiGrid.html">MultiGrid</a>&gt; grid ()<br><br>Member function of class <b>IDomain</b><br>group: <b>/ug4/Domain</b>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>IDomain</b><br>group: <b>/ug4/Domain</b>
;
class
IDomainConstraint1dCPU1
IConstraintCPU1 
Group <b>IDomainConstraint</b><br>class has no constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint1dCPU1.html">IDomainConstraint1dCPU1</a> <br><table></table>
;
class
IDomainConstraint1dCPU2
IConstraintCPU2 
Group <b>IDomainConstraint</b><br>class has no constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint1dCPU2.html">IDomainConstraint1dCPU2</a> <br><table></table>
;
class
IDomainConstraint1dCPU3
IConstraintCPU3 
Group <b>IDomainConstraint</b><br>class has no constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint1dCPU3.html">IDomainConstraint1dCPU3</a> <br><table></table>
;
class
IDomainConstraint2dCPU1
IConstraintCPU1 
Group <b>IDomainConstraint</b><br>class has no constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a> <br><table></table>
;
class
IDomainConstraint2dCPU2
IConstraintCPU2 
Group <b>IDomainConstraint</b><br>class has no constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint2dCPU2.html">IDomainConstraint2dCPU2</a> <br><table></table>
;
class
IDomainConstraint2dCPU3
IConstraintCPU3 
Group <b>IDomainConstraint</b><br>class has no constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint2dCPU3.html">IDomainConstraint2dCPU3</a> <br><table></table>
;
class
IDomainConstraint3dCPU1
IConstraintCPU1 
Group <b>IDomainConstraint</b><br>class has no constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint3dCPU1.html">IDomainConstraint3dCPU1</a> <br><table></table>
;
class
IDomainConstraint3dCPU2
IConstraintCPU2 
Group <b>IDomainConstraint</b><br>class has no constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint3dCPU2.html">IDomainConstraint3dCPU2</a> <br><table></table>
;
class
IDomainConstraint3dCPU3
IConstraintCPU3 
Group <b>IDomainConstraint</b><br>class has no constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint3dCPU3.html">IDomainConstraint3dCPU3</a> <br><table></table>
;
class
IDomainDecompositionInfo

class has no constructor. <br><table></table>
;
class
IDomainDiscretizationCPU1
IAssembleCPU1 
Group <b>IDomainDiscretization</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a> <br><table><tr><td colspan=2><h3>IDomainDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
assemble_jacobian
void
void assemble_jacobian (MatrixCPU1, const SmartPtr<SolutionTimeSeriesCPU1> , number )
void assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )<br><br>Member function of class <b>IDomainDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
IDomainDiscretizationCPU2
IAssembleCPU2 
Group <b>IDomainDiscretization</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IAssembleCPU2.html">IAssembleCPU2</a> <a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a> <br><table><tr><td colspan=2><h3>IDomainDiscretizationCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU2.html">VectorCPU2</a> *d(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *J(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *M, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
assemble_jacobian
void
void assemble_jacobian (MatrixCPU2, const SmartPtr<SolutionTimeSeriesCPU2> , number )
void assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )<br><br>Member function of class <b>IDomainDiscretizationCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
IDomainDiscretizationCPU3
IAssembleCPU3 
Group <b>IDomainDiscretization</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IAssembleCPU3.html">IAssembleCPU3</a> <a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a> <br><table><tr><td colspan=2><h3>IDomainDiscretizationCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU3.html">VectorCPU3</a> *d(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *J(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *M, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
assemble_jacobian
void
void assemble_jacobian (MatrixCPU3, const SmartPtr<SolutionTimeSeriesCPU3> , number )
void assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )<br><br>Member function of class <b>IDomainDiscretizationCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
IDomainElemDisc1d
IElemDisc 
Group <b>IDomainElemDisc</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <br><table></table>
;
class
IDomainElemDisc2d
IElemDisc 
Group <b>IDomainElemDisc</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <br><table></table>
;
class
IDomainElemDisc3d
IElemDisc 
Group <b>IDomainElemDisc</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <br><table></table>
;
class
IElemDisc

class has no constructor. <br><table></table>
;
class
IFunctionNumber

class has no constructor. <br><table></table>
;
class
ILUCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Group <b>ILU</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Incomplete LU Decomposition<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="ILUCPU1.html">ILUCPU1</a> <br><table><tr><td colspan=2><h3>ILUCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ILUCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILUCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_beta (number beta)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
ILUCPU1

ILUCPU1 ()
ILUCPU1 ()<br>Constructor of class <b>ILUCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_beta
void
void set_beta (number beta)
void set_beta (number beta)<br><br>Member function of class <b>ILUCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
ILUCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 IPreconditionerCPU2 
Group <b>ILU</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Incomplete LU Decomposition<br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <a href="ILUCPU2.html">ILUCPU2</a> <br><table><tr><td colspan=2><h3>ILUCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ILUCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILUCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_beta (number beta)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
ILUCPU2

ILUCPU2 ()
ILUCPU2 ()<br>Constructor of class <b>ILUCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_beta
void
void set_beta (number beta)
void set_beta (number beta)<br><br>Member function of class <b>ILUCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
ILUCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 IPreconditionerCPU3 
Group <b>ILU</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Incomplete LU Decomposition<br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <a href="ILUCPU3.html">ILUCPU3</a> <br><table><tr><td colspan=2><h3>ILUCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ILUCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILUCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_beta (number beta)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
ILUCPU3

ILUCPU3 ()
ILUCPU3 ()<br>Constructor of class <b>ILUCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_beta
void
void set_beta (number beta)
void set_beta (number beta)<br><br>Member function of class <b>ILUCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
ILUTCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Group <b>ILUT</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Incomplete LU Decomposition with threshold<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="ILUTCPU1.html">ILUTCPU1</a> <br><table><tr><td colspan=2><h3>ILUTCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ILUTCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILUTCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_threshold (number threshold)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets threshold of incomplete LU factorisation<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
ILUTCPU1

ILUTCPU1 ()
ILUTCPU1 ()<br>Constructor of class <b>ILUTCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_threshold
void
void set_threshold (number threshold)
void set_threshold (number threshold)<br><br>Member function of class <b>ILUTCPU1</b><br>tooltip: sets threshold of incomplete LU factorisation<br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
ILUTCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 IPreconditionerCPU2 
Group <b>ILUT</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Incomplete LU Decomposition with threshold<br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <a href="ILUTCPU2.html">ILUTCPU2</a> <br><table><tr><td colspan=2><h3>ILUTCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ILUTCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILUTCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_threshold (number threshold)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets threshold of incomplete LU factorisation<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
ILUTCPU2

ILUTCPU2 ()
ILUTCPU2 ()<br>Constructor of class <b>ILUTCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_threshold
void
void set_threshold (number threshold)
void set_threshold (number threshold)<br><br>Member function of class <b>ILUTCPU2</b><br>tooltip: sets threshold of incomplete LU factorisation<br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
ILUTCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 IPreconditionerCPU3 
Group <b>ILUT</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Incomplete LU Decomposition with threshold<br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <a href="ILUTCPU3.html">ILUTCPU3</a> <br><table><tr><td colspan=2><h3>ILUTCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ILUTCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILUTCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_threshold (number threshold)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets threshold of incomplete LU factorisation<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
ILUTCPU3

ILUTCPU3 ()
ILUTCPU3 ()<br>Constructor of class <b>ILUTCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_threshold
void
void set_threshold (number threshold)
void set_threshold (number threshold)<br><br>Member function of class <b>ILUTCPU3</b><br>tooltip: sets threshold of incomplete LU factorisation<br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
ILineSearchCPU1

Group <b>ILineSearch</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table></table>
;
class
ILineSearchCPU2

Group <b>ILineSearch</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table></table>
;
class
ILineSearchCPU3

Group <b>ILineSearch</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table></table>
;
class
ILinearIteratorCPU1

Group <b>ILinearIterator</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table><tr><td colspan=2><h3>ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr></table>
memberfunction
set_damp
void
void set_damp (number )
void set_damp (number )<br><br>Member function of class <b>ILinearIteratorCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_damp
void
void set_damp (SmartPtr<IDampingCPU1> )
void set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )<br><br>Member function of class <b>ILinearIteratorCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
ILinearIteratorCPU2

Group <b>ILinearIterator</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table><tr><td colspan=2><h3>ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr></table>
memberfunction
set_damp
void
void set_damp (number )
void set_damp (number )<br><br>Member function of class <b>ILinearIteratorCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_damp
void
void set_damp (SmartPtr<IDampingCPU2> )
void set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )<br><br>Member function of class <b>ILinearIteratorCPU2</b><br>group: <b>/ug4/Algebra</b>
;
class
ILinearIteratorCPU3

Group <b>ILinearIterator</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table><tr><td colspan=2><h3>ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr></table>
memberfunction
set_damp
void
void set_damp (number )
void set_damp (number )<br><br>Member function of class <b>ILinearIteratorCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_damp
void
void set_damp (SmartPtr<IDampingCPU3> )
void set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )<br><br>Member function of class <b>ILinearIteratorCPU3</b><br>group: <b>/ug4/Algebra</b>
;
class
ILinearOperatorCPU1
IOperatorCPU1 
Group <b>ILinearOperator</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IOperatorCPU1.html">IOperatorCPU1</a> <a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a> <br><table><tr><td colspan=2><h3>ILinearOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr></table>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>ILinearOperatorCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
apply
void
void apply (VectorCPU1, const VectorCPU1)
void apply (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>Member function of class <b>ILinearOperatorCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
ILinearOperatorCPU2
IOperatorCPU2 
Group <b>ILinearOperator</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IOperatorCPU2.html">IOperatorCPU2</a> <a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a> <br><table><tr><td colspan=2><h3>ILinearOperatorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *, const <a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr></table>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>ILinearOperatorCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
apply
void
void apply (VectorCPU2, const VectorCPU2)
void apply (<a href="VectorCPU2.html">VectorCPU2</a> *, const <a href="VectorCPU2.html">VectorCPU2</a> *)<br><br>Member function of class <b>ILinearOperatorCPU2</b><br>group: <b>/ug4/Algebra</b>
;
class
ILinearOperatorCPU3
IOperatorCPU3 
Group <b>ILinearOperator</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IOperatorCPU3.html">IOperatorCPU3</a> <a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a> <br><table><tr><td colspan=2><h3>ILinearOperatorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *, const <a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr></table>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>ILinearOperatorCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
apply
void
void apply (VectorCPU3, const VectorCPU3)
void apply (<a href="VectorCPU3.html">VectorCPU3</a> *, const <a href="VectorCPU3.html">VectorCPU3</a> *)<br><br>Member function of class <b>ILinearOperatorCPU3</b><br>group: <b>/ug4/Algebra</b>
;
class
ILinearOperatorInverseCPU1

Group <b>ILinearOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table><tr><td colspan=2><h3>ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
memberfunction
init
bool
bool init (SmartPtr<ILinearOperatorCPU1> )
bool init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
apply_return_defect
bool
bool apply_return_defect (VectorCPU1u, VectorCPU1f)
bool apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>returns Success<br>tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br>group: <b>/ug4/Algebra</b>
memberfunction
apply
bool
bool apply (VectorCPU1u, const VectorCPU1f)
bool apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>returns Success<br>tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br>group: <b>/ug4/Algebra</b>
memberfunction
set_convergence_check
void
void set_convergence_check (SmartPtr<IConvergenceCheckCPU1> )
void set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
convergence_check
ConstSmartPtr<IConvergenceCheckCPU1>
const SmartPtr<IConvergenceCheckCPU1> convergence_check () const
const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; convergence_check ()<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
ILinearOperatorInverseCPU2

Group <b>ILinearOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table><tr><td colspan=2><h3>ILinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *u, const <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU2.html">VectorCPU2</a> *u, <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILinearOperatorInverseCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
memberfunction
init
bool
bool init (SmartPtr<ILinearOperatorCPU2> )
bool init (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; )<br><br>Member function of class <b>ILinearOperatorInverseCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
apply_return_defect
bool
bool apply_return_defect (VectorCPU2u, VectorCPU2f)
bool apply_return_defect (<a href="VectorCPU2.html">VectorCPU2</a> *u, <a href="VectorCPU2.html">VectorCPU2</a> *f)<br><br>Member function of class <b>ILinearOperatorInverseCPU2</b><br>returns Success<br>tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br>group: <b>/ug4/Algebra</b>
memberfunction
apply
bool
bool apply (VectorCPU2u, const VectorCPU2f)
bool apply (<a href="VectorCPU2.html">VectorCPU2</a> *u, const <a href="VectorCPU2.html">VectorCPU2</a> *f)<br><br>Member function of class <b>ILinearOperatorInverseCPU2</b><br>returns Success<br>tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br>group: <b>/ug4/Algebra</b>
memberfunction
set_convergence_check
void
void set_convergence_check (SmartPtr<IConvergenceCheckCPU2> )
void set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; )<br><br>Member function of class <b>ILinearOperatorInverseCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
convergence_check
ConstSmartPtr<IConvergenceCheckCPU2>
const SmartPtr<IConvergenceCheckCPU2> convergence_check () const
const SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; convergence_check ()<br><br>Member function of class <b>ILinearOperatorInverseCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ILinearOperatorInverseCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ILinearOperatorInverseCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ILinearOperatorInverseCPU2</b><br>group: <b>/ug4/Algebra</b>
;
class
ILinearOperatorInverseCPU3

Group <b>ILinearOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table><tr><td colspan=2><h3>ILinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *u, const <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU3.html">VectorCPU3</a> *u, <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILinearOperatorInverseCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
memberfunction
init
bool
bool init (SmartPtr<ILinearOperatorCPU3> )
bool init (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; )<br><br>Member function of class <b>ILinearOperatorInverseCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
apply_return_defect
bool
bool apply_return_defect (VectorCPU3u, VectorCPU3f)
bool apply_return_defect (<a href="VectorCPU3.html">VectorCPU3</a> *u, <a href="VectorCPU3.html">VectorCPU3</a> *f)<br><br>Member function of class <b>ILinearOperatorInverseCPU3</b><br>returns Success<br>tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br>group: <b>/ug4/Algebra</b>
memberfunction
apply
bool
bool apply (VectorCPU3u, const VectorCPU3f)
bool apply (<a href="VectorCPU3.html">VectorCPU3</a> *u, const <a href="VectorCPU3.html">VectorCPU3</a> *f)<br><br>Member function of class <b>ILinearOperatorInverseCPU3</b><br>returns Success<br>tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br>group: <b>/ug4/Algebra</b>
memberfunction
set_convergence_check
void
void set_convergence_check (SmartPtr<IConvergenceCheckCPU3> )
void set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; )<br><br>Member function of class <b>ILinearOperatorInverseCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
convergence_check
ConstSmartPtr<IConvergenceCheckCPU3>
const SmartPtr<IConvergenceCheckCPU3> convergence_check () const
const SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; convergence_check ()<br><br>Member function of class <b>ILinearOperatorInverseCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ILinearOperatorInverseCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ILinearOperatorInverseCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ILinearOperatorInverseCPU3</b><br>group: <b>/ug4/Algebra</b>
;
class
ILocalTransfer

class has no constructor. <br><table></table>
;
class
ILocalTransferAlgebraCPU1
ILocalTransfer 
Group <b>ILocalTransferAlgebra</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="ILocalTransfer.html">ILocalTransfer</a> <a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a> <br><table></table>
;
class
ILocalTransferAlgebraCPU2
ILocalTransfer 
Group <b>ILocalTransferAlgebra</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="ILocalTransfer.html">ILocalTransfer</a> <a href="ILocalTransferAlgebraCPU2.html">ILocalTransferAlgebraCPU2</a> <br><table></table>
;
class
ILocalTransferAlgebraCPU3
ILocalTransfer 
Group <b>ILocalTransferAlgebra</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="ILocalTransfer.html">ILocalTransfer</a> <a href="ILocalTransferAlgebraCPU3.html">ILocalTransferAlgebraCPU3</a> <br><table></table>
;
class
IMatrixOperatorInverseCPU1
ILinearOperatorInverseCPU1 
Group <b>IMatrixOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IMatrixOperatorInverseCPU1.html">IMatrixOperatorInverseCPU1</a> <br><table><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
;
class
IMatrixOperatorInverseCPU2
ILinearOperatorInverseCPU2 
Group <b>IMatrixOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a> <a href="IMatrixOperatorInverseCPU2.html">IMatrixOperatorInverseCPU2</a> <br><table><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *u, const <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU2.html">VectorCPU2</a> *u, <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
;
class
IMatrixOperatorInverseCPU3
ILinearOperatorInverseCPU3 
Group <b>IMatrixOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a> <a href="IMatrixOperatorInverseCPU3.html">IMatrixOperatorInverseCPU3</a> <br><table><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *u, const <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU3.html">VectorCPU3</a> *u, <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
;
class
IOperatorCPU1

Group <b>IOperator</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table></table>
;
class
IOperatorCPU2

Group <b>IOperator</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table></table>
;
class
IOperatorCPU3

Group <b>IOperator</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table></table>
;
class
IOperatorInverseCPU1

Group <b>IOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table></table>
;
class
IOperatorInverseCPU2

Group <b>IOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table></table>
;
class
IOperatorInverseCPU3

Group <b>IOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table></table>
;
class
IParallelCoarsening

class has no constructor. <br>Parallel Coarsening Interface (RSAMG)<br><table></table>
;
class
IPositionProvider1d

Group <b>IPositionProvider</b><br>class has no constructor.  Tag <b>dim=1d;</b><br><table></table>
;
class
IPositionProvider2d

Group <b>IPositionProvider</b><br>class has no constructor.  Tag <b>dim=2d;</b><br><table></table>
;
class
IPositionProvider3d

Group <b>IPositionProvider</b><br>class has no constructor.  Tag <b>dim=3d;</b><br><table></table>
;
class
IPreconditionedLinearOperatorInverseCPU1
VectorDebugWritingObjectCPU1 ILinearOperatorInverseCPU1 
Group <b>IPreconditionedLinearOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IPreconditionedLinearOperatorInverseCPU1.html">IPreconditionedLinearOperatorInverseCPU1</a> <br><table><tr><td colspan=2><h3>IPreconditionedLinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_preconditioner
void
void set_preconditioner (SmartPtr<ILinearIteratorCPU1> Preconditioner)
void set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)<br><br>Member function of class <b>IPreconditionedLinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_compute_fresh_defect_when_finished
void
void set_compute_fresh_defect_when_finished (bool )
void set_compute_fresh_defect_when_finished (bool )<br><br>Member function of class <b>IPreconditionedLinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
IPreconditionedLinearOperatorInverseCPU2
VectorDebugWritingObjectCPU2 ILinearOperatorInverseCPU2 
Group <b>IPreconditionedLinearOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a> <a href="IPreconditionedLinearOperatorInverseCPU2.html">IPreconditionedLinearOperatorInverseCPU2</a> <br><table><tr><td colspan=2><h3>IPreconditionedLinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *u, const <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU2.html">VectorCPU2</a> *u, <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_preconditioner
void
void set_preconditioner (SmartPtr<ILinearIteratorCPU2> Preconditioner)
void set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Preconditioner)<br><br>Member function of class <b>IPreconditionedLinearOperatorInverseCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_compute_fresh_defect_when_finished
void
void set_compute_fresh_defect_when_finished (bool )
void set_compute_fresh_defect_when_finished (bool )<br><br>Member function of class <b>IPreconditionedLinearOperatorInverseCPU2</b><br>group: <b>/ug4/Algebra</b>
;
class
IPreconditionedLinearOperatorInverseCPU3
VectorDebugWritingObjectCPU3 ILinearOperatorInverseCPU3 
Group <b>IPreconditionedLinearOperatorInverse</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a> <a href="IPreconditionedLinearOperatorInverseCPU3.html">IPreconditionedLinearOperatorInverseCPU3</a> <br><table><tr><td colspan=2><h3>IPreconditionedLinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *u, const <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU3.html">VectorCPU3</a> *u, <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_preconditioner
void
void set_preconditioner (SmartPtr<ILinearIteratorCPU3> Preconditioner)
void set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Preconditioner)<br><br>Member function of class <b>IPreconditionedLinearOperatorInverseCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_compute_fresh_defect_when_finished
void
void set_compute_fresh_defect_when_finished (bool )
void set_compute_fresh_defect_when_finished (bool )<br><br>Member function of class <b>IPreconditionedLinearOperatorInverseCPU3</b><br>group: <b>/ug4/Algebra</b>
;
class
IPreconditionerCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 
Group <b>IPreconditioner</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <br><table><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
;
class
IPreconditionerCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 
Group <b>IPreconditioner</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <br><table><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
;
class
IPreconditionerCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 
Group <b>IPreconditioner</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <br><table><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
;
class
IRefiner

class has no constructor. <br><table><tr><td colspan=2><h3>IRefiner Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_marks ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>coarsen ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>refine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>save_marks_to_file (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_adjusted_marks_debug_filename (c_string )</td></tr><tr><td><br></td></tr></table>
memberfunction
refine
void
void refine ()
void refine ()<br><br>Member function of class <b>IRefiner</b><br>group: <b>/ug4/Grid</b>
memberfunction
coarsen
bool
bool coarsen ()
bool coarsen ()<br><br>Member function of class <b>IRefiner</b><br>group: <b>/ug4/Grid</b>
memberfunction
save_marks_to_file
bool
bool save_marks_to_file (c_string )
bool save_marks_to_file (c_string )<br><br>Member function of class <b>IRefiner</b><br>group: <b>/ug4/Grid</b>
memberfunction
set_adjusted_marks_debug_filename
void
void set_adjusted_marks_debug_filename (c_string )
void set_adjusted_marks_debug_filename (c_string )<br><br>Member function of class <b>IRefiner</b><br>group: <b>/ug4/Grid</b>
memberfunction
clear_marks
void
void clear_marks ()
void clear_marks ()<br><br>Member function of class <b>IRefiner</b><br>group: <b>/ug4/Grid</b>
;
class
ISelector

class has no constructor. <br><table></table>
;
class
ISubsetHandler

class has no constructor. <br><table><tr><td colspan=2><h3>ISubsetHandler Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_subset_name (c_string , integer )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ISubsetHandler Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_subset_index (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>c_string </td><td class="memItemRight" valign=bottom>get_subset_name (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_subsets ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_subset_name
void
void set_subset_name (c_string , integer )
void set_subset_name (c_string , integer )<br><br>Member function of class <b>ISubsetHandler</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_subsets
integer
integer num_subsets () const
integer num_subsets ()<br><br>Member function of class <b>ISubsetHandler</b><br>group: <b>/ug4/Grid</b>
memberfunction
get_subset_name
string
c_string get_subset_name (integer ) const
c_string get_subset_name (integer )<br><br>Member function of class <b>ISubsetHandler</b><br>group: <b>/ug4/Grid</b>
memberfunction
get_subset_index
integer
integer get_subset_index (c_string ) const
integer get_subset_index (c_string )<br><br>Member function of class <b>ISubsetHandler</b><br>group: <b>/ug4/Grid</b>
;
class
ITimeDiscretizationCPU1
IAssembleCPU1 
Group <b>ITimeDiscretization</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="ITimeDiscretizationCPU1.html">ITimeDiscretizationCPU1</a> <br><table><tr><td colspan=2><h3>ITimeDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ITimeDiscretizationCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
prepare_step
void
void prepare_step (SmartPtr<SolutionTimeSeriesCPU1> prepares the assembling of Defect/Jacobian for a time step, number )
void prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
prepare_step_elem
void
void prepare_step_elem (SmartPtr<SolutionTimeSeriesCPU1> , number )
void prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
finish_step_elem
void
void finish_step_elem (SmartPtr<SolutionTimeSeriesCPU1> , number )
void finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_stage
void
void set_stage (integer stage)
void set_stage (integer stage)<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
num_stages
integer
integer num_stages () const
integer num_stages ()<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>returns the number of stages<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
future_time
number
number future_time () const
number future_time ()<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>returns the future time point (i.e. the one that will be computed)<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
num_prev_steps
integer
integer num_prev_steps () const
integer num_prev_steps ()<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
ITimeDiscretizationCPU2
IAssembleCPU2 
Group <b>ITimeDiscretization</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IAssembleCPU2.html">IAssembleCPU2</a> <a href="ITimeDiscretizationCPU2.html">ITimeDiscretizationCPU2</a> <br><table><tr><td colspan=2><h3>ITimeDiscretizationCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ITimeDiscretizationCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU2.html">VectorCPU2</a> *d(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *J(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *M, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
prepare_step
void
void prepare_step (SmartPtr<SolutionTimeSeriesCPU2> prepares the assembling of Defect/Jacobian for a time step, number )
void prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )<br><br>Member function of class <b>ITimeDiscretizationCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
prepare_step_elem
void
void prepare_step_elem (SmartPtr<SolutionTimeSeriesCPU2> , number )
void prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )<br><br>Member function of class <b>ITimeDiscretizationCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
finish_step_elem
void
void finish_step_elem (SmartPtr<SolutionTimeSeriesCPU2> , number )
void finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )<br><br>Member function of class <b>ITimeDiscretizationCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_stage
void
void set_stage (integer stage)
void set_stage (integer stage)<br><br>Member function of class <b>ITimeDiscretizationCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
num_stages
integer
integer num_stages () const
integer num_stages ()<br><br>Member function of class <b>ITimeDiscretizationCPU2</b><br>returns the number of stages<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
future_time
number
number future_time () const
number future_time ()<br><br>Member function of class <b>ITimeDiscretizationCPU2</b><br>returns the future time point (i.e. the one that will be computed)<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
num_prev_steps
integer
integer num_prev_steps () const
integer num_prev_steps ()<br><br>Member function of class <b>ITimeDiscretizationCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
ITimeDiscretizationCPU3
IAssembleCPU3 
Group <b>ITimeDiscretization</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IAssembleCPU3.html">IAssembleCPU3</a> <a href="ITimeDiscretizationCPU3.html">ITimeDiscretizationCPU3</a> <br><table><tr><td colspan=2><h3>ITimeDiscretizationCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ITimeDiscretizationCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU3.html">VectorCPU3</a> *d(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *J(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *M, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
prepare_step
void
void prepare_step (SmartPtr<SolutionTimeSeriesCPU3> prepares the assembling of Defect/Jacobian for a time step, number )
void prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )<br><br>Member function of class <b>ITimeDiscretizationCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
prepare_step_elem
void
void prepare_step_elem (SmartPtr<SolutionTimeSeriesCPU3> , number )
void prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )<br><br>Member function of class <b>ITimeDiscretizationCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
finish_step_elem
void
void finish_step_elem (SmartPtr<SolutionTimeSeriesCPU3> , number )
void finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )<br><br>Member function of class <b>ITimeDiscretizationCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_stage
void
void set_stage (integer stage)
void set_stage (integer stage)<br><br>Member function of class <b>ITimeDiscretizationCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
num_stages
integer
integer num_stages () const
integer num_stages ()<br><br>Member function of class <b>ITimeDiscretizationCPU3</b><br>returns the number of stages<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
future_time
number
number future_time () const
number future_time ()<br><br>Member function of class <b>ITimeDiscretizationCPU3</b><br>returns the future time point (i.e. the one that will be computed)<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
num_prev_steps
integer
integer num_prev_steps () const
integer num_prev_steps ()<br><br>Member function of class <b>ITimeDiscretizationCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
ITransferOperatorCPU1

Group <b>ITransferOperator</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table></table>
;
class
ITransferOperatorCPU2

Group <b>ITransferOperator</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table></table>
;
class
ITransferOperatorCPU3

Group <b>ITransferOperator</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table></table>
;
class
ITransferPostProcessCPU1

Group <b>ITransferPostProcess</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table></table>
;
class
ITransferPostProcessCPU2

Group <b>ITransferPostProcess</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table></table>
;
class
ITransferPostProcessCPU3

Group <b>ITransferPostProcess</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table></table>
;
class
IUserData

class has no constructor. <br><table></table>
;
class
IVectorDebugWriterCPU1

Group <b>IVectorDebugWriter</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table></table>
;
class
IVectorDebugWriterCPU2

Group <b>IVectorDebugWriter</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table></table>
;
class
IVectorDebugWriterCPU3

Group <b>IVectorDebugWriter</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table></table>
;
class
IVectorWriterCPU1

Group <b>IVectorWriter</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table><tr><td colspan=2><h3>IVectorWriterCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU1.html">VectorCPU1</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
update
bool
bool update (VectorCPU1v)
bool update (<a href="VectorCPU1.html">VectorCPU1</a> *v)<br><br>Member function of class <b>IVectorWriterCPU1</b><br>tooltip: updates the vector v<br>group: <b>/ug4/Algebra</b>
;
class
IVectorWriterCPU2

Group <b>IVectorWriter</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table><tr><td colspan=2><h3>IVectorWriterCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU2.html">VectorCPU2</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
update
bool
bool update (VectorCPU2v)
bool update (<a href="VectorCPU2.html">VectorCPU2</a> *v)<br><br>Member function of class <b>IVectorWriterCPU2</b><br>tooltip: updates the vector v<br>group: <b>/ug4/Algebra</b>
;
class
IVectorWriterCPU3

Group <b>IVectorWriter</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table><tr><td colspan=2><h3>IVectorWriterCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU3.html">VectorCPU3</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
update
bool
bool update (VectorCPU3v)
bool update (<a href="VectorCPU3.html">VectorCPU3</a> *v)<br><br>Member function of class <b>IVectorWriterCPU3</b><br>tooltip: updates the vector v<br>group: <b>/ug4/Algebra</b>
;
class
InhibitionPTP1d
IUserData UserNumber1d DependentUserDataNumber1d DataLinkerNumber1d 
Group <b>InhibitionPTP</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <a href="DataLinkerNumber1d.html">DataLinkerNumber1d</a> <a href="InhibitionPTP1d.html">InhibitionPTP1d</a> <br><table><tr><td colspan=2><h3>InhibitionPTP1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InhibitionPTP1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>InhibitionPTP1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_MO_max (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_MO_max (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
InhibitionPTP1d

InhibitionPTP1d ()
InhibitionPTP1d ()<br>Constructor of class <b>InhibitionPTP1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_MO_max
void
void set_MO_max (number )
void set_MO_max (number )<br><br>Member function of class <b>InhibitionPTP1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_MO_max
void
void set_MO_max (SmartPtr<UserNumber1d> )
void set_MO_max (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>InhibitionPTP1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (number )
void set_C_d (number )<br><br>Member function of class <b>InhibitionPTP1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (SmartPtr<UserNumber1d> )
void set_C_d (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>InhibitionPTP1d</b><br>group: <b>ug4//Biogas</b>
;
class
InhibitionPTP2d
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Group <b>InhibitionPTP</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="InhibitionPTP2d.html">InhibitionPTP2d</a> <br><table><tr><td colspan=2><h3>InhibitionPTP2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InhibitionPTP2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>InhibitionPTP2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_MO_max (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_MO_max (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
InhibitionPTP2d

InhibitionPTP2d ()
InhibitionPTP2d ()<br>Constructor of class <b>InhibitionPTP2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_MO_max
void
void set_MO_max (number )
void set_MO_max (number )<br><br>Member function of class <b>InhibitionPTP2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_MO_max
void
void set_MO_max (SmartPtr<UserNumber2d> )
void set_MO_max (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>InhibitionPTP2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (number )
void set_C_d (number )<br><br>Member function of class <b>InhibitionPTP2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (SmartPtr<UserNumber2d> )
void set_C_d (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>InhibitionPTP2d</b><br>group: <b>ug4//Biogas</b>
;
class
InhibitionPTP3d
IUserData UserNumber3d DependentUserDataNumber3d DataLinkerNumber3d 
Group <b>InhibitionPTP</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <a href="DataLinkerNumber3d.html">DataLinkerNumber3d</a> <a href="InhibitionPTP3d.html">InhibitionPTP3d</a> <br><table><tr><td colspan=2><h3>InhibitionPTP3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InhibitionPTP3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>InhibitionPTP3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_MO_max (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_MO_max (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
InhibitionPTP3d

InhibitionPTP3d ()
InhibitionPTP3d ()<br>Constructor of class <b>InhibitionPTP3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_MO_max
void
void set_MO_max (number )
void set_MO_max (number )<br><br>Member function of class <b>InhibitionPTP3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_MO_max
void
void set_MO_max (SmartPtr<UserNumber3d> )
void set_MO_max (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>InhibitionPTP3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (number )
void set_C_d (number )<br><br>Member function of class <b>InhibitionPTP3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (SmartPtr<UserNumber3d> )
void set_C_d (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>InhibitionPTP3d</b><br>group: <b>ug4//Biogas</b>
;
class
InjectionTransfer1dCPU1
ITransferOperatorCPU1 
Group <b>InjectionTransfer</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a> <a href="InjectionTransfer1dCPU1.html">InjectionTransfer1dCPU1</a> <br><table><tr><td colspan=2><h3>InjectionTransfer1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer1dCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr></table>
constructor
InjectionTransfer1dCPU1

InjectionTransfer1dCPU1 ()
InjectionTransfer1dCPU1 ()<br>Constructor of class <b>InjectionTransfer1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
InjectionTransfer1dCPU1

InjectionTransfer1dCPU1 (SmartPtr<ApproximationSpace1d> Approximation Space)
InjectionTransfer1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)<br>Constructor of class <b>InjectionTransfer1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
InjectionTransfer1dCPU2
ITransferOperatorCPU2 
Group <b>InjectionTransfer</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a> <a href="InjectionTransfer1dCPU2.html">InjectionTransfer1dCPU2</a> <br><table><tr><td colspan=2><h3>InjectionTransfer1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer1dCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr></table>
constructor
InjectionTransfer1dCPU2

InjectionTransfer1dCPU2 ()
InjectionTransfer1dCPU2 ()<br>Constructor of class <b>InjectionTransfer1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
InjectionTransfer1dCPU2

InjectionTransfer1dCPU2 (SmartPtr<ApproximationSpace1d> Approximation Space)
InjectionTransfer1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)<br>Constructor of class <b>InjectionTransfer1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
InjectionTransfer1dCPU3
ITransferOperatorCPU3 
Group <b>InjectionTransfer</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a> <a href="InjectionTransfer1dCPU3.html">InjectionTransfer1dCPU3</a> <br><table><tr><td colspan=2><h3>InjectionTransfer1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer1dCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr></table>
constructor
InjectionTransfer1dCPU3

InjectionTransfer1dCPU3 ()
InjectionTransfer1dCPU3 ()<br>Constructor of class <b>InjectionTransfer1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
InjectionTransfer1dCPU3

InjectionTransfer1dCPU3 (SmartPtr<ApproximationSpace1d> Approximation Space)
InjectionTransfer1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)<br>Constructor of class <b>InjectionTransfer1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
InjectionTransfer2dCPU1
ITransferOperatorCPU1 
Group <b>InjectionTransfer</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a> <a href="InjectionTransfer2dCPU1.html">InjectionTransfer2dCPU1</a> <br><table><tr><td colspan=2><h3>InjectionTransfer2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer2dCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr></table>
constructor
InjectionTransfer2dCPU1

InjectionTransfer2dCPU1 ()
InjectionTransfer2dCPU1 ()<br>Constructor of class <b>InjectionTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
InjectionTransfer2dCPU1

InjectionTransfer2dCPU1 (SmartPtr<ApproximationSpace2d> Approximation Space)
InjectionTransfer2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>InjectionTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
InjectionTransfer2dCPU2
ITransferOperatorCPU2 
Group <b>InjectionTransfer</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a> <a href="InjectionTransfer2dCPU2.html">InjectionTransfer2dCPU2</a> <br><table><tr><td colspan=2><h3>InjectionTransfer2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer2dCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr></table>
constructor
InjectionTransfer2dCPU2

InjectionTransfer2dCPU2 ()
InjectionTransfer2dCPU2 ()<br>Constructor of class <b>InjectionTransfer2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
InjectionTransfer2dCPU2

InjectionTransfer2dCPU2 (SmartPtr<ApproximationSpace2d> Approximation Space)
InjectionTransfer2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>InjectionTransfer2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
InjectionTransfer2dCPU3
ITransferOperatorCPU3 
Group <b>InjectionTransfer</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a> <a href="InjectionTransfer2dCPU3.html">InjectionTransfer2dCPU3</a> <br><table><tr><td colspan=2><h3>InjectionTransfer2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer2dCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr></table>
constructor
InjectionTransfer2dCPU3

InjectionTransfer2dCPU3 ()
InjectionTransfer2dCPU3 ()<br>Constructor of class <b>InjectionTransfer2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
InjectionTransfer2dCPU3

InjectionTransfer2dCPU3 (SmartPtr<ApproximationSpace2d> Approximation Space)
InjectionTransfer2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>InjectionTransfer2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
InjectionTransfer3dCPU1
ITransferOperatorCPU1 
Group <b>InjectionTransfer</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a> <a href="InjectionTransfer3dCPU1.html">InjectionTransfer3dCPU1</a> <br><table><tr><td colspan=2><h3>InjectionTransfer3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer3dCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr></table>
constructor
InjectionTransfer3dCPU1

InjectionTransfer3dCPU1 ()
InjectionTransfer3dCPU1 ()<br>Constructor of class <b>InjectionTransfer3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
InjectionTransfer3dCPU1

InjectionTransfer3dCPU1 (SmartPtr<ApproximationSpace3d> Approximation Space)
InjectionTransfer3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)<br>Constructor of class <b>InjectionTransfer3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
InjectionTransfer3dCPU2
ITransferOperatorCPU2 
Group <b>InjectionTransfer</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a> <a href="InjectionTransfer3dCPU2.html">InjectionTransfer3dCPU2</a> <br><table><tr><td colspan=2><h3>InjectionTransfer3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer3dCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr></table>
constructor
InjectionTransfer3dCPU2

InjectionTransfer3dCPU2 ()
InjectionTransfer3dCPU2 ()<br>Constructor of class <b>InjectionTransfer3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
InjectionTransfer3dCPU2

InjectionTransfer3dCPU2 (SmartPtr<ApproximationSpace3d> Approximation Space)
InjectionTransfer3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)<br>Constructor of class <b>InjectionTransfer3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
InjectionTransfer3dCPU3
ITransferOperatorCPU3 
Group <b>InjectionTransfer</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a> <a href="InjectionTransfer3dCPU3.html">InjectionTransfer3dCPU3</a> <br><table><tr><td colspan=2><h3>InjectionTransfer3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer3dCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr></table>
constructor
InjectionTransfer3dCPU3

InjectionTransfer3dCPU3 ()
InjectionTransfer3dCPU3 ()<br>Constructor of class <b>InjectionTransfer3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
InjectionTransfer3dCPU3

InjectionTransfer3dCPU3 (SmartPtr<ApproximationSpace3d> Approximation Space)
InjectionTransfer3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)<br>Constructor of class <b>InjectionTransfer3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
JacobiCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Group <b>Jacobi</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Jacobi Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="JacobiCPU1.html">JacobiCPU1</a> <br><table><tr><td colspan=2><h3>JacobiCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>JacobiCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>JacobiCPU1 (number DampingFactor)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
JacobiCPU1

JacobiCPU1 ()
JacobiCPU1 ()<br>Constructor of class <b>JacobiCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
constructor
JacobiCPU1

JacobiCPU1 (number DampingFactor)
JacobiCPU1 (number DampingFactor)<br>Constructor of class <b>JacobiCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
JacobiCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 IPreconditionerCPU2 
Group <b>Jacobi</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Jacobi Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <a href="JacobiCPU2.html">JacobiCPU2</a> <br><table><tr><td colspan=2><h3>JacobiCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>JacobiCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>JacobiCPU2 (number DampingFactor)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
JacobiCPU2

JacobiCPU2 ()
JacobiCPU2 ()<br>Constructor of class <b>JacobiCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
constructor
JacobiCPU2

JacobiCPU2 (number DampingFactor)
JacobiCPU2 (number DampingFactor)<br>Constructor of class <b>JacobiCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
JacobiCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 IPreconditionerCPU3 
Group <b>Jacobi</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Jacobi Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <a href="JacobiCPU3.html">JacobiCPU3</a> <br><table><tr><td colspan=2><h3>JacobiCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>JacobiCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>JacobiCPU3 (number DampingFactor)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
JacobiCPU3

JacobiCPU3 ()
JacobiCPU3 ()<br>Constructor of class <b>JacobiCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
constructor
JacobiCPU3

JacobiCPU3 (number DampingFactor)
JacobiCPU3 (number DampingFactor)<br>Constructor of class <b>JacobiCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
LUCPU1
ILinearOperatorInverseCPU1 
Group <b>LU</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>LU-Decomposition exact solver<br>Inheritance: <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="LUCPU1.html">LUCPU1</a> <br><table><tr><td colspan=2><h3>LUCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LUCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
constructor
LUCPU1

LUCPU1 ()
LUCPU1 ()<br>Constructor of class <b>LUCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
LUCPU2
ILinearOperatorInverseCPU2 
Group <b>LU</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>LU-Decomposition exact solver<br>Inheritance: <a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a> <a href="LUCPU2.html">LUCPU2</a> <br><table><tr><td colspan=2><h3>LUCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LUCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *u, const <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU2.html">VectorCPU2</a> *u, <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
constructor
LUCPU2

LUCPU2 ()
LUCPU2 ()<br>Constructor of class <b>LUCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
LUCPU3
ILinearOperatorInverseCPU3 
Group <b>LU</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>LU-Decomposition exact solver<br>Inheritance: <a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a> <a href="LUCPU3.html">LUCPU3</a> <br><table><tr><td colspan=2><h3>LUCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LUCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *u, const <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU3.html">VectorCPU3</a> *u, <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
constructor
LUCPU3

LUCPU3 ()
LUCPU3 ()<br>Constructor of class <b>LUCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
LagrangeDifferenceBoundary1dCPU1
IConstraintCPU1 IDomainConstraint1dCPU1 
Group <b>LagrangeDifferenceBoundary</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint1dCPU1.html">IDomainConstraint1dCPU1</a> <a href="LagrangeDifferenceBoundary1dCPU1.html">LagrangeDifferenceBoundary1dCPU1</a> <br><table><tr><td colspan=2><h3>LagrangeDifferenceBoundary1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LagrangeDifferenceBoundary1dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LagrangeDifferenceBoundary1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (c_string Value, c_string Function, c_string Subsets, c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LagrangeDifferenceBoundary1dCPU1

LagrangeDifferenceBoundary1dCPU1 ()
LagrangeDifferenceBoundary1dCPU1 ()<br>Constructor of class <b>LagrangeDifferenceBoundary1dCPU1</b><br>group: <b>ug4/Neuron//Discretization/1d</b>
memberfunction
set
bool
bool set (c_string Value, c_string Function, c_string Subsets, c_string )
bool set (c_string Value, c_string Function, c_string Subsets, c_string )<br><br>Member function of class <b>LagrangeDifferenceBoundary1dCPU1</b><br>returns Success<br>group: <b>ug4/Neuron//Discretization/1d</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace1d> )
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )<br><br>Member function of class <b>LagrangeDifferenceBoundary1dCPU1</b><br>group: <b>ug4/Neuron//Discretization/1d</b>
;
class
LagrangeDifferenceBoundary1dCPU2
IConstraintCPU2 IDomainConstraint1dCPU2 
Group <b>LagrangeDifferenceBoundary</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint1dCPU2.html">IDomainConstraint1dCPU2</a> <a href="LagrangeDifferenceBoundary1dCPU2.html">LagrangeDifferenceBoundary1dCPU2</a> <br><table><tr><td colspan=2><h3>LagrangeDifferenceBoundary1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LagrangeDifferenceBoundary1dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LagrangeDifferenceBoundary1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (c_string Value, c_string Function, c_string Subsets, c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LagrangeDifferenceBoundary1dCPU2

LagrangeDifferenceBoundary1dCPU2 ()
LagrangeDifferenceBoundary1dCPU2 ()<br>Constructor of class <b>LagrangeDifferenceBoundary1dCPU2</b><br>group: <b>ug4/Neuron//Discretization/1d</b>
memberfunction
set
bool
bool set (c_string Value, c_string Function, c_string Subsets, c_string )
bool set (c_string Value, c_string Function, c_string Subsets, c_string )<br><br>Member function of class <b>LagrangeDifferenceBoundary1dCPU2</b><br>returns Success<br>group: <b>ug4/Neuron//Discretization/1d</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace1d> )
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )<br><br>Member function of class <b>LagrangeDifferenceBoundary1dCPU2</b><br>group: <b>ug4/Neuron//Discretization/1d</b>
;
class
LagrangeDifferenceBoundary1dCPU3
IConstraintCPU3 IDomainConstraint1dCPU3 
Group <b>LagrangeDifferenceBoundary</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint1dCPU3.html">IDomainConstraint1dCPU3</a> <a href="LagrangeDifferenceBoundary1dCPU3.html">LagrangeDifferenceBoundary1dCPU3</a> <br><table><tr><td colspan=2><h3>LagrangeDifferenceBoundary1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LagrangeDifferenceBoundary1dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LagrangeDifferenceBoundary1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (c_string Value, c_string Function, c_string Subsets, c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LagrangeDifferenceBoundary1dCPU3

LagrangeDifferenceBoundary1dCPU3 ()
LagrangeDifferenceBoundary1dCPU3 ()<br>Constructor of class <b>LagrangeDifferenceBoundary1dCPU3</b><br>group: <b>ug4/Neuron//Discretization/1d</b>
memberfunction
set
bool
bool set (c_string Value, c_string Function, c_string Subsets, c_string )
bool set (c_string Value, c_string Function, c_string Subsets, c_string )<br><br>Member function of class <b>LagrangeDifferenceBoundary1dCPU3</b><br>returns Success<br>group: <b>ug4/Neuron//Discretization/1d</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace1d> )
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )<br><br>Member function of class <b>LagrangeDifferenceBoundary1dCPU3</b><br>group: <b>ug4/Neuron//Discretization/1d</b>
;
class
LagrangeDifferenceBoundary2dCPU1
IConstraintCPU1 IDomainConstraint2dCPU1 
Group <b>LagrangeDifferenceBoundary</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a> <a href="LagrangeDifferenceBoundary2dCPU1.html">LagrangeDifferenceBoundary2dCPU1</a> <br><table><tr><td colspan=2><h3>LagrangeDifferenceBoundary2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LagrangeDifferenceBoundary2dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LagrangeDifferenceBoundary2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (c_string Value, c_string Function, c_string Subsets, c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LagrangeDifferenceBoundary2dCPU1

LagrangeDifferenceBoundary2dCPU1 ()
LagrangeDifferenceBoundary2dCPU1 ()<br>Constructor of class <b>LagrangeDifferenceBoundary2dCPU1</b><br>group: <b>ug4/Neuron//Discretization/2d</b>
memberfunction
set
bool
bool set (c_string Value, c_string Function, c_string Subsets, c_string )
bool set (c_string Value, c_string Function, c_string Subsets, c_string )<br><br>Member function of class <b>LagrangeDifferenceBoundary2dCPU1</b><br>returns Success<br>group: <b>ug4/Neuron//Discretization/2d</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace2d> )
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br><br>Member function of class <b>LagrangeDifferenceBoundary2dCPU1</b><br>group: <b>ug4/Neuron//Discretization/2d</b>
;
class
LagrangeDifferenceBoundary2dCPU2
IConstraintCPU2 IDomainConstraint2dCPU2 
Group <b>LagrangeDifferenceBoundary</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint2dCPU2.html">IDomainConstraint2dCPU2</a> <a href="LagrangeDifferenceBoundary2dCPU2.html">LagrangeDifferenceBoundary2dCPU2</a> <br><table><tr><td colspan=2><h3>LagrangeDifferenceBoundary2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LagrangeDifferenceBoundary2dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LagrangeDifferenceBoundary2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (c_string Value, c_string Function, c_string Subsets, c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LagrangeDifferenceBoundary2dCPU2

LagrangeDifferenceBoundary2dCPU2 ()
LagrangeDifferenceBoundary2dCPU2 ()<br>Constructor of class <b>LagrangeDifferenceBoundary2dCPU2</b><br>group: <b>ug4/Neuron//Discretization/2d</b>
memberfunction
set
bool
bool set (c_string Value, c_string Function, c_string Subsets, c_string )
bool set (c_string Value, c_string Function, c_string Subsets, c_string )<br><br>Member function of class <b>LagrangeDifferenceBoundary2dCPU2</b><br>returns Success<br>group: <b>ug4/Neuron//Discretization/2d</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace2d> )
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br><br>Member function of class <b>LagrangeDifferenceBoundary2dCPU2</b><br>group: <b>ug4/Neuron//Discretization/2d</b>
;
class
LagrangeDifferenceBoundary2dCPU3
IConstraintCPU3 IDomainConstraint2dCPU3 
Group <b>LagrangeDifferenceBoundary</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint2dCPU3.html">IDomainConstraint2dCPU3</a> <a href="LagrangeDifferenceBoundary2dCPU3.html">LagrangeDifferenceBoundary2dCPU3</a> <br><table><tr><td colspan=2><h3>LagrangeDifferenceBoundary2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LagrangeDifferenceBoundary2dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LagrangeDifferenceBoundary2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (c_string Value, c_string Function, c_string Subsets, c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LagrangeDifferenceBoundary2dCPU3

LagrangeDifferenceBoundary2dCPU3 ()
LagrangeDifferenceBoundary2dCPU3 ()<br>Constructor of class <b>LagrangeDifferenceBoundary2dCPU3</b><br>group: <b>ug4/Neuron//Discretization/2d</b>
memberfunction
set
bool
bool set (c_string Value, c_string Function, c_string Subsets, c_string )
bool set (c_string Value, c_string Function, c_string Subsets, c_string )<br><br>Member function of class <b>LagrangeDifferenceBoundary2dCPU3</b><br>returns Success<br>group: <b>ug4/Neuron//Discretization/2d</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace2d> )
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br><br>Member function of class <b>LagrangeDifferenceBoundary2dCPU3</b><br>group: <b>ug4/Neuron//Discretization/2d</b>
;
class
LagrangeDifferenceBoundary3dCPU1
IConstraintCPU1 IDomainConstraint3dCPU1 
Group <b>LagrangeDifferenceBoundary</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint3dCPU1.html">IDomainConstraint3dCPU1</a> <a href="LagrangeDifferenceBoundary3dCPU1.html">LagrangeDifferenceBoundary3dCPU1</a> <br><table><tr><td colspan=2><h3>LagrangeDifferenceBoundary3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LagrangeDifferenceBoundary3dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LagrangeDifferenceBoundary3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (c_string Value, c_string Function, c_string Subsets, c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LagrangeDifferenceBoundary3dCPU1

LagrangeDifferenceBoundary3dCPU1 ()
LagrangeDifferenceBoundary3dCPU1 ()<br>Constructor of class <b>LagrangeDifferenceBoundary3dCPU1</b><br>group: <b>ug4/Neuron//Discretization/3d</b>
memberfunction
set
bool
bool set (c_string Value, c_string Function, c_string Subsets, c_string )
bool set (c_string Value, c_string Function, c_string Subsets, c_string )<br><br>Member function of class <b>LagrangeDifferenceBoundary3dCPU1</b><br>returns Success<br>group: <b>ug4/Neuron//Discretization/3d</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace3d> )
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )<br><br>Member function of class <b>LagrangeDifferenceBoundary3dCPU1</b><br>group: <b>ug4/Neuron//Discretization/3d</b>
;
class
LagrangeDifferenceBoundary3dCPU2
IConstraintCPU2 IDomainConstraint3dCPU2 
Group <b>LagrangeDifferenceBoundary</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint3dCPU2.html">IDomainConstraint3dCPU2</a> <a href="LagrangeDifferenceBoundary3dCPU2.html">LagrangeDifferenceBoundary3dCPU2</a> <br><table><tr><td colspan=2><h3>LagrangeDifferenceBoundary3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LagrangeDifferenceBoundary3dCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LagrangeDifferenceBoundary3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (c_string Value, c_string Function, c_string Subsets, c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LagrangeDifferenceBoundary3dCPU2

LagrangeDifferenceBoundary3dCPU2 ()
LagrangeDifferenceBoundary3dCPU2 ()<br>Constructor of class <b>LagrangeDifferenceBoundary3dCPU2</b><br>group: <b>ug4/Neuron//Discretization/3d</b>
memberfunction
set
bool
bool set (c_string Value, c_string Function, c_string Subsets, c_string )
bool set (c_string Value, c_string Function, c_string Subsets, c_string )<br><br>Member function of class <b>LagrangeDifferenceBoundary3dCPU2</b><br>returns Success<br>group: <b>ug4/Neuron//Discretization/3d</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace3d> )
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )<br><br>Member function of class <b>LagrangeDifferenceBoundary3dCPU2</b><br>group: <b>ug4/Neuron//Discretization/3d</b>
;
class
LagrangeDifferenceBoundary3dCPU3
IConstraintCPU3 IDomainConstraint3dCPU3 
Group <b>LagrangeDifferenceBoundary</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint3dCPU3.html">IDomainConstraint3dCPU3</a> <a href="LagrangeDifferenceBoundary3dCPU3.html">LagrangeDifferenceBoundary3dCPU3</a> <br><table><tr><td colspan=2><h3>LagrangeDifferenceBoundary3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LagrangeDifferenceBoundary3dCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LagrangeDifferenceBoundary3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (c_string Value, c_string Function, c_string Subsets, c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LagrangeDifferenceBoundary3dCPU3

LagrangeDifferenceBoundary3dCPU3 ()
LagrangeDifferenceBoundary3dCPU3 ()<br>Constructor of class <b>LagrangeDifferenceBoundary3dCPU3</b><br>group: <b>ug4/Neuron//Discretization/3d</b>
memberfunction
set
bool
bool set (c_string Value, c_string Function, c_string Subsets, c_string )
bool set (c_string Value, c_string Function, c_string Subsets, c_string )<br><br>Member function of class <b>LagrangeDifferenceBoundary3dCPU3</b><br>returns Success<br>group: <b>ug4/Neuron//Discretization/3d</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace3d> )
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )<br><br>Member function of class <b>LagrangeDifferenceBoundary3dCPU3</b><br>group: <b>ug4/Neuron//Discretization/3d</b>
;
class
LinearElastoPlasticity1d
IElemDisc IDomainElemDisc1d 
Group <b>LinearElastoPlasticity</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="LinearElastoPlasticity1d.html">LinearElastoPlasticity1d</a> <br><table><tr><td colspan=2><h3>LinearElastoPlasticity1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearElastoPlasticity1d (c_string Function, c_string Subsets)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LinearElastoPlasticity1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>close_gnuplot_file ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_state_variables (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hardening_behavior (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hooke_elasticity_tensor (number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Force field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F_x, F_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F_x, F_y, F_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (c_string Force field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>stress_eigenvalues_at (number , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>use_approx_tangent (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>use_elastoplast_mat_behavior (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_data (number )</td></tr><tr><td><br></td></tr></table>
constructor
LinearElastoPlasticity1d

LinearElastoPlasticity1d (c_string Function, c_string Subsets)
LinearElastoPlasticity1d (c_string Function, c_string Subsets)<br>Constructor of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_hooke_elasticity_tensor
void
void set_hooke_elasticity_tensor (number , number )
void set_hooke_elasticity_tensor (number , number )<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_quad_order
void
void set_quad_order (integer )
void set_quad_order (integer )<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (SmartPtr<UserVector1d> Force field)
void set_volume_forces (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Force field)<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F)
void set_volume_forces (number F)<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F_x, F_y, number )
void set_volume_forces (number F_x, F_y, number )<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F_x, F_y, F_z, number , number )
void set_volume_forces (number F_x, F_y, F_z, number , number )<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (c_string Force field)
void set_volume_forces (c_string Force field)<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
use_elastoplast_mat_behavior
void
void use_elastoplast_mat_behavior (bool )
void use_elastoplast_mat_behavior (bool )<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_hardening_behavior
void
void set_hardening_behavior (integer )
void set_hardening_behavior (integer )<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
use_approx_tangent
void
void use_approx_tangent (number )
void use_approx_tangent (number )<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
init_state_variables
void
void init_state_variables (integer )
void init_state_variables (integer )<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
stress_eigenvalues_at
void
void stress_eigenvalues_at (number , number , number )
void stress_eigenvalues_at (number , number , number )<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
write_data
void
void write_data (number )
void write_data (number )<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
close_gnuplot_file
void
void close_gnuplot_file ()
void close_gnuplot_file ()<br><br>Member function of class <b>LinearElastoPlasticity1d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
;
class
LinearElastoPlasticity2d
IElemDisc IDomainElemDisc2d 
Group <b>LinearElastoPlasticity</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="LinearElastoPlasticity2d.html">LinearElastoPlasticity2d</a> <br><table><tr><td colspan=2><h3>LinearElastoPlasticity2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearElastoPlasticity2d (c_string Function, c_string Subsets)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LinearElastoPlasticity2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>close_gnuplot_file ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_state_variables (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hardening_behavior (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hooke_elasticity_tensor (number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Force field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F_x, F_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F_x, F_y, F_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (c_string Force field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>stress_eigenvalues_at (number , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>use_approx_tangent (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>use_elastoplast_mat_behavior (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_data (number )</td></tr><tr><td><br></td></tr></table>
constructor
LinearElastoPlasticity2d

LinearElastoPlasticity2d (c_string Function, c_string Subsets)
LinearElastoPlasticity2d (c_string Function, c_string Subsets)<br>Constructor of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_hooke_elasticity_tensor
void
void set_hooke_elasticity_tensor (number , number )
void set_hooke_elasticity_tensor (number , number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_quad_order
void
void set_quad_order (integer )
void set_quad_order (integer )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (SmartPtr<UserVector2d> Force field)
void set_volume_forces (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Force field)<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F)
void set_volume_forces (number F)<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F_x, F_y, number )
void set_volume_forces (number F_x, F_y, number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F_x, F_y, F_z, number , number )
void set_volume_forces (number F_x, F_y, F_z, number , number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (c_string Force field)
void set_volume_forces (c_string Force field)<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
use_elastoplast_mat_behavior
void
void use_elastoplast_mat_behavior (bool )
void use_elastoplast_mat_behavior (bool )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_hardening_behavior
void
void set_hardening_behavior (integer )
void set_hardening_behavior (integer )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
use_approx_tangent
void
void use_approx_tangent (number )
void use_approx_tangent (number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
init_state_variables
void
void init_state_variables (integer )
void init_state_variables (integer )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
stress_eigenvalues_at
void
void stress_eigenvalues_at (number , number , number )
void stress_eigenvalues_at (number , number , number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
write_data
void
void write_data (number )
void write_data (number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
close_gnuplot_file
void
void close_gnuplot_file ()
void close_gnuplot_file ()<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
;
class
LinearElastoPlasticity3d
IElemDisc IDomainElemDisc3d 
Group <b>LinearElastoPlasticity</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="LinearElastoPlasticity3d.html">LinearElastoPlasticity3d</a> <br><table><tr><td colspan=2><h3>LinearElastoPlasticity3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearElastoPlasticity3d (c_string Function, c_string Subsets)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LinearElastoPlasticity3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>close_gnuplot_file ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_state_variables (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hardening_behavior (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hooke_elasticity_tensor (number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Force field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F_x, F_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F_x, F_y, F_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (c_string Force field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>stress_eigenvalues_at (number , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>use_approx_tangent (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>use_elastoplast_mat_behavior (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_data (number )</td></tr><tr><td><br></td></tr></table>
constructor
LinearElastoPlasticity3d

LinearElastoPlasticity3d (c_string Function, c_string Subsets)
LinearElastoPlasticity3d (c_string Function, c_string Subsets)<br>Constructor of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_hooke_elasticity_tensor
void
void set_hooke_elasticity_tensor (number , number )
void set_hooke_elasticity_tensor (number , number )<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_quad_order
void
void set_quad_order (integer )
void set_quad_order (integer )<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (SmartPtr<UserVector3d> Force field)
void set_volume_forces (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Force field)<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F)
void set_volume_forces (number F)<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F_x, F_y, number )
void set_volume_forces (number F_x, F_y, number )<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F_x, F_y, F_z, number , number )
void set_volume_forces (number F_x, F_y, F_z, number , number )<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (c_string Force field)
void set_volume_forces (c_string Force field)<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
use_elastoplast_mat_behavior
void
void use_elastoplast_mat_behavior (bool )
void use_elastoplast_mat_behavior (bool )<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_hardening_behavior
void
void set_hardening_behavior (integer )
void set_hardening_behavior (integer )<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
use_approx_tangent
void
void use_approx_tangent (number )
void use_approx_tangent (number )<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
init_state_variables
void
void init_state_variables (integer )
void init_state_variables (integer )<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
stress_eigenvalues_at
void
void stress_eigenvalues_at (number , number , number )
void stress_eigenvalues_at (number , number , number )<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
write_data
void
void write_data (number )
void write_data (number )<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
close_gnuplot_file
void
void close_gnuplot_file ()
void close_gnuplot_file ()<br><br>Member function of class <b>LinearElastoPlasticity3d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
;
class
LinearIteratorProductCPU1
ILinearIteratorCPU1 
Group <b>LinearIteratorProduct</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Linear Iterator consisting of several LinearIterations<br>Inheritance: <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="LinearIteratorProductCPU1.html">LinearIteratorProductCPU1</a> <br><table><tr><td colspan=2><h3>LinearIteratorProductCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearIteratorProductCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LinearIteratorProductCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_iteration (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Add an iterator<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LinearIteratorProductCPU1

LinearIteratorProductCPU1 ()
LinearIteratorProductCPU1 ()<br>Constructor of class <b>LinearIteratorProductCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
add_iteration
void
void add_iteration (SmartPtr<ILinearIteratorCPU1> )
void add_iteration (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; )<br><br>Member function of class <b>LinearIteratorProductCPU1</b><br>returns Add an iterator<br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
LinearIteratorProductCPU2
ILinearIteratorCPU2 
Group <b>LinearIteratorProduct</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Linear Iterator consisting of several LinearIterations<br>Inheritance: <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="LinearIteratorProductCPU2.html">LinearIteratorProductCPU2</a> <br><table><tr><td colspan=2><h3>LinearIteratorProductCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearIteratorProductCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LinearIteratorProductCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_iteration (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Add an iterator<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LinearIteratorProductCPU2

LinearIteratorProductCPU2 ()
LinearIteratorProductCPU2 ()<br>Constructor of class <b>LinearIteratorProductCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
add_iteration
void
void add_iteration (SmartPtr<ILinearIteratorCPU2> )
void add_iteration (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; )<br><br>Member function of class <b>LinearIteratorProductCPU2</b><br>returns Add an iterator<br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
LinearIteratorProductCPU3
ILinearIteratorCPU3 
Group <b>LinearIteratorProduct</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Linear Iterator consisting of several LinearIterations<br>Inheritance: <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="LinearIteratorProductCPU3.html">LinearIteratorProductCPU3</a> <br><table><tr><td colspan=2><h3>LinearIteratorProductCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearIteratorProductCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LinearIteratorProductCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_iteration (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Add an iterator<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LinearIteratorProductCPU3

LinearIteratorProductCPU3 ()
LinearIteratorProductCPU3 ()<br>Constructor of class <b>LinearIteratorProductCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
add_iteration
void
void add_iteration (SmartPtr<ILinearIteratorCPU3> )
void add_iteration (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; )<br><br>Member function of class <b>LinearIteratorProductCPU3</b><br>returns Add an iterator<br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
LinearSolverCPU1
VectorDebugWritingObjectCPU1 ILinearOperatorInverseCPU1 IPreconditionedLinearOperatorInverseCPU1 
Group <b>LinearSolver</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IPreconditionedLinearOperatorInverseCPU1.html">IPreconditionedLinearOperatorInverseCPU1</a> <a href="LinearSolverCPU1.html">LinearSolverCPU1</a> <br><table><tr><td colspan=2><h3>LinearSolverCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearSolverCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
LinearSolverCPU1

LinearSolverCPU1 ()
LinearSolverCPU1 ()<br>Constructor of class <b>LinearSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
LinearSolverCPU2
VectorDebugWritingObjectCPU2 ILinearOperatorInverseCPU2 IPreconditionedLinearOperatorInverseCPU2 
Group <b>LinearSolver</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a> <a href="IPreconditionedLinearOperatorInverseCPU2.html">IPreconditionedLinearOperatorInverseCPU2</a> <a href="LinearSolverCPU2.html">LinearSolverCPU2</a> <br><table><tr><td colspan=2><h3>LinearSolverCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearSolverCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *u, const <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU2.html">VectorCPU2</a> *u, <a href="VectorCPU2.html">VectorCPU2</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
LinearSolverCPU2

LinearSolverCPU2 ()
LinearSolverCPU2 ()<br>Constructor of class <b>LinearSolverCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
LinearSolverCPU3
VectorDebugWritingObjectCPU3 ILinearOperatorInverseCPU3 IPreconditionedLinearOperatorInverseCPU3 
Group <b>LinearSolver</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a> <a href="IPreconditionedLinearOperatorInverseCPU3.html">IPreconditionedLinearOperatorInverseCPU3</a> <a href="LinearSolverCPU3.html">LinearSolverCPU3</a> <br><table><tr><td colspan=2><h3>LinearSolverCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearSolverCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *u, const <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU3.html">VectorCPU3</a> *u, <a href="VectorCPU3.html">VectorCPU3</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
LinearSolverCPU3

LinearSolverCPU3 ()
LinearSolverCPU3 ()<br>Constructor of class <b>LinearSolverCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
LocalSchurComplementCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 IOperatorCPU1 ILinearOperatorCPU1 
Group <b>LocalSchurComplement</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="IOperatorCPU1.html">IOperatorCPU1</a> <a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a> <a href="LocalSchurComplementCPU1.html">LocalSchurComplementCPU1</a> <br><table><tr><td colspan=2><h3>LocalSchurComplementCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LocalSchurComplementCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LocalSchurComplementCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *local SC times Vector, const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Dirichlet Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix (SmartPtr&lt;<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a>&gt; Matrix)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
LocalSchurComplementCPU1

LocalSchurComplementCPU1 ()
LocalSchurComplementCPU1 ()<br>Constructor of class <b>LocalSchurComplementCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_matrix
void
void set_matrix (SmartPtr<MatrixOperatorCPU1> Matrix)
void set_matrix (SmartPtr&lt;<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a>&gt; Matrix)<br><br>Member function of class <b>LocalSchurComplementCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_dirichlet_solver
void
void set_dirichlet_solver (SmartPtr<ILinearOperatorInverseCPU1> Dirichlet Solver)
void set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Dirichlet Solver)<br><br>Member function of class <b>LocalSchurComplementCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>LocalSchurComplementCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
apply
void
void apply (VectorCPU1local SC times Vector, const VectorCPU1Vector)
void apply (<a href="VectorCPU1.html">VectorCPU1</a> *local SC times Vector, const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)<br><br>Member function of class <b>LocalSchurComplementCPU1</b><br>returns Success<br>group: <b>/ug4/Algebra/Solver</b>
;
class
LocalSchurComplementCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 IOperatorCPU2 ILinearOperatorCPU2 
Group <b>LocalSchurComplement</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="IOperatorCPU2.html">IOperatorCPU2</a> <a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a> <a href="LocalSchurComplementCPU2.html">LocalSchurComplementCPU2</a> <br><table><tr><td colspan=2><h3>LocalSchurComplementCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LocalSchurComplementCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LocalSchurComplementCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *local SC times Vector, const <a href="VectorCPU2.html">VectorCPU2</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Dirichlet Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix (SmartPtr&lt;<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a>&gt; Matrix)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *, const <a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
LocalSchurComplementCPU2

LocalSchurComplementCPU2 ()
LocalSchurComplementCPU2 ()<br>Constructor of class <b>LocalSchurComplementCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_matrix
void
void set_matrix (SmartPtr<MatrixOperatorCPU2> Matrix)
void set_matrix (SmartPtr&lt;<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a>&gt; Matrix)<br><br>Member function of class <b>LocalSchurComplementCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_dirichlet_solver
void
void set_dirichlet_solver (SmartPtr<ILinearOperatorInverseCPU2> Dirichlet Solver)
void set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; Dirichlet Solver)<br><br>Member function of class <b>LocalSchurComplementCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>LocalSchurComplementCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
apply
void
void apply (VectorCPU2local SC times Vector, const VectorCPU2Vector)
void apply (<a href="VectorCPU2.html">VectorCPU2</a> *local SC times Vector, const <a href="VectorCPU2.html">VectorCPU2</a> *Vector)<br><br>Member function of class <b>LocalSchurComplementCPU2</b><br>returns Success<br>group: <b>/ug4/Algebra/Solver</b>
;
class
LocalSchurComplementCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 IOperatorCPU3 ILinearOperatorCPU3 
Group <b>LocalSchurComplement</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="IOperatorCPU3.html">IOperatorCPU3</a> <a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a> <a href="LocalSchurComplementCPU3.html">LocalSchurComplementCPU3</a> <br><table><tr><td colspan=2><h3>LocalSchurComplementCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LocalSchurComplementCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LocalSchurComplementCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *local SC times Vector, const <a href="VectorCPU3.html">VectorCPU3</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Dirichlet Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix (SmartPtr&lt;<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a>&gt; Matrix)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *, const <a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
LocalSchurComplementCPU3

LocalSchurComplementCPU3 ()
LocalSchurComplementCPU3 ()<br>Constructor of class <b>LocalSchurComplementCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_matrix
void
void set_matrix (SmartPtr<MatrixOperatorCPU3> Matrix)
void set_matrix (SmartPtr&lt;<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a>&gt; Matrix)<br><br>Member function of class <b>LocalSchurComplementCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_dirichlet_solver
void
void set_dirichlet_solver (SmartPtr<ILinearOperatorInverseCPU3> Dirichlet Solver)
void set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; Dirichlet Solver)<br><br>Member function of class <b>LocalSchurComplementCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>LocalSchurComplementCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
apply
void
void apply (VectorCPU3local SC times Vector, const VectorCPU3Vector)
void apply (<a href="VectorCPU3.html">VectorCPU3</a> *local SC times Vector, const <a href="VectorCPU3.html">VectorCPU3</a> *Vector)<br><br>Member function of class <b>LocalSchurComplementCPU3</b><br>returns Success<br>group: <b>/ug4/Algebra/Solver</b>
;
class
LogAssistant

class has no constructor. <br><table><tr><td colspan=2><h3>LogAssistant Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>enable_file_output (bool bEnable, c_string filename)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Please note that only the filename given at the first call is considered<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>enable_terminal_output (bool bEnable)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: enables or disables terminal output (enabled by default)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>flush ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: flush all buffers, especially the file buffer.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>getDebugIDs ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns debug IDs<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_output_process ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Returns the process which outputs its data.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>is_output_process (integer procRank)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Returns whether the process outputs its data.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>rename_log_file (c_string filename)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Renames previously opened logfile to the name given<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_debug_level (c_string tag, integer lev)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the debug level of Tag 'tag' to level 'lev'<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_debug_levels (integer lev)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the debug level of all tags to 'lev'<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_output_process (integer procRank)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Sets the process which shall output its data.<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LogAssistant Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_debug_level (c_string tag)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: gets the debug level of Tag 'tag'<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
enable_file_output
bool
bool enable_file_output (bool bEnable, c_string filename)
bool enable_file_output (bool bEnable, c_string filename)<br><br>Member function of class <b>LogAssistant</b><br>tooltip: Please note that only the filename given at the first call is considered<br>group: <b>/ug4/Util/Log</b>
memberfunction
rename_log_file
bool
bool rename_log_file (c_string filename)
bool rename_log_file (c_string filename)<br><br>Member function of class <b>LogAssistant</b><br>tooltip: Renames previously opened logfile to the name given<br>group: <b>/ug4/Util/Log</b>
memberfunction
enable_terminal_output
bool
bool enable_terminal_output (bool bEnable)
bool enable_terminal_output (bool bEnable)<br><br>Member function of class <b>LogAssistant</b><br>tooltip: enables or disables terminal output (enabled by default)<br>group: <b>/ug4/Util/Log</b>
memberfunction
set_debug_levels
bool
bool set_debug_levels (integer lev)
bool set_debug_levels (integer lev)<br><br>Member function of class <b>LogAssistant</b><br>tooltip: sets the debug level of all tags to 'lev'<br>group: <b>/ug4/Util/Log</b>
memberfunction
set_debug_level
bool
bool set_debug_level (c_string tag, integer lev)
bool set_debug_level (c_string tag, integer lev)<br><br>Member function of class <b>LogAssistant</b><br>tooltip: sets the debug level of Tag 'tag' to level 'lev'<br>group: <b>/ug4/Util/Log</b>
memberfunction
getDebugIDs
string
std_string getDebugIDs ()
std_string getDebugIDs ()<br><br>Member function of class <b>LogAssistant</b><br>returns debug IDs<br>group: <b>/ug4/Util/Log</b>
memberfunction
set_output_process
void
void set_output_process (integer procRank)
void set_output_process (integer procRank)<br><br>Member function of class <b>LogAssistant</b><br>tooltip: Sets the process which shall output its data.<br>group: <b>/ug4/Util/Log</b>
memberfunction
get_output_process
integer
integer get_output_process ()
integer get_output_process ()<br><br>Member function of class <b>LogAssistant</b><br>tooltip: Returns the process which outputs its data.<br>group: <b>/ug4/Util/Log</b>
memberfunction
is_output_process
void
void is_output_process (integer procRank)
void is_output_process (integer procRank)<br><br>Member function of class <b>LogAssistant</b><br>tooltip: Returns whether the process outputs its data.<br>group: <b>/ug4/Util/Log</b>
memberfunction
flush
void
void flush ()
void flush ()<br><br>Member function of class <b>LogAssistant</b><br>tooltip: flush all buffers, especially the file buffer.<br>group: <b>/ug4/Util/Log</b>
memberfunction
get_debug_level
integer
integer get_debug_level (c_string tag) const
integer get_debug_level (c_string tag)<br><br>Member function of class <b>LogAssistant</b><br>tooltip: gets the debug level of Tag 'tag'<br>group: <b>/ug4/Util/Log</b>
;
class
MGSubsetHandler
ISubsetHandler 
class has constructor. <br>Inheritance: <a href="ISubsetHandler.html">ISubsetHandler</a> <a href="MGSubsetHandler.html">MGSubsetHandler</a> <br><table><tr><td colspan=2><h3>MGSubsetHandler Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MGSubsetHandler ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MGSubsetHandler Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ISubsetHandler Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_subset_name (c_string , integer )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ISubsetHandler Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_subset_index (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>c_string </td><td class="memItemRight" valign=bottom>get_subset_name (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_subsets ()</td></tr><tr><td><br></td></tr></table>
constructor
MGSubsetHandler

MGSubsetHandler ()
MGSubsetHandler ()<br>Constructor of class <b>MGSubsetHandler</b><br>group: <b>/ug4/Grid</b>
memberfunction
assign_grid
void
void assign_grid (MultiGrid)
void assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)<br><br>Member function of class <b>MGSubsetHandler</b><br>group: <b>/ug4/Grid</b>
;
class
MatrixCPU1

Group <b>Matrix</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br><table><tr><td colspan=2><h3>MatrixCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
MatrixCPU1

MatrixCPU1 ()
MatrixCPU1 ()<br>Constructor of class <b>MatrixCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>MatrixCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
MatrixCPU2

Group <b>Matrix</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br><table><tr><td colspan=2><h3>MatrixCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
MatrixCPU2

MatrixCPU2 ()
MatrixCPU2 ()<br>Constructor of class <b>MatrixCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>MatrixCPU2</b><br>group: <b>/ug4/Algebra</b>
;
class
MatrixCPU3

Group <b>Matrix</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br><table><tr><td colspan=2><h3>MatrixCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
MatrixCPU3

MatrixCPU3 ()
MatrixCPU3 ()<br>Constructor of class <b>MatrixCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>MatrixCPU3</b><br>group: <b>/ug4/Algebra</b>
;
class
MatrixOperatorCPU1
MatrixCPU1 IOperatorCPU1 ILinearOperatorCPU1 
Group <b>MatrixOperator</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="MatrixCPU1.html">MatrixCPU1</a> <a href="IOperatorCPU1.html">IOperatorCPU1</a> <a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a> <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> <br><table><tr><td colspan=2><h3>MatrixOperatorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixOperatorCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited MatrixCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
MatrixOperatorCPU1

MatrixOperatorCPU1 ()
MatrixOperatorCPU1 ()<br>Constructor of class <b>MatrixOperatorCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
MatrixOperatorCPU2
MatrixCPU2 IOperatorCPU2 ILinearOperatorCPU2 
Group <b>MatrixOperator</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="MatrixCPU2.html">MatrixCPU2</a> <a href="IOperatorCPU2.html">IOperatorCPU2</a> <a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a> <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> <br><table><tr><td colspan=2><h3>MatrixOperatorCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixOperatorCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *, const <a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited MatrixCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
MatrixOperatorCPU2

MatrixOperatorCPU2 ()
MatrixOperatorCPU2 ()<br>Constructor of class <b>MatrixOperatorCPU2</b><br>group: <b>/ug4/Algebra</b>
;
class
MatrixOperatorCPU3
MatrixCPU3 IOperatorCPU3 ILinearOperatorCPU3 
Group <b>MatrixOperator</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="MatrixCPU3.html">MatrixCPU3</a> <a href="IOperatorCPU3.html">IOperatorCPU3</a> <a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a> <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> <br><table><tr><td colspan=2><h3>MatrixOperatorCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixOperatorCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *, const <a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited MatrixCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
MatrixOperatorCPU3

MatrixOperatorCPU3 ()
MatrixOperatorCPU3 ()<br>Constructor of class <b>MatrixOperatorCPU3</b><br>group: <b>/ug4/Algebra</b>
;
class
MembraneNeumannBoundaryElemDisc1d
IElemDisc IDomainElemDisc1d 
Group <b>MembraneNeumannBoundaryElemDisc</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="MembraneNeumannBoundaryElemDisc1d.html">MembraneNeumannBoundaryElemDisc1d</a> <br><table><tr><td colspan=2><h3>MembraneNeumannBoundaryElemDisc1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MembraneNeumannBoundaryElemDisc1d (c_string Functions, c_string Subset(s), number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MembraneNeumannBoundaryElemDisc1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boundary (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
MembraneNeumannBoundaryElemDisc1d

MembraneNeumannBoundaryElemDisc1d (c_string Functions, c_string Subset(s), number )
MembraneNeumannBoundaryElemDisc1d (c_string Functions, c_string Subset(s), number )<br>Constructor of class <b>MembraneNeumannBoundaryElemDisc1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber1d> )
void set_injection (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_boundary
void
void set_boundary (c_string )
void set_boundary (c_string )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_diffusion
void
void set_diffusion (number )
void set_diffusion (number )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc1d</b><br>group: <b>ug4/Neuron/</b>
;
class
MembraneNeumannBoundaryElemDisc2d
IElemDisc IDomainElemDisc2d 
Group <b>MembraneNeumannBoundaryElemDisc</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="MembraneNeumannBoundaryElemDisc2d.html">MembraneNeumannBoundaryElemDisc2d</a> <br><table><tr><td colspan=2><h3>MembraneNeumannBoundaryElemDisc2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MembraneNeumannBoundaryElemDisc2d (c_string Functions, c_string Subset(s), number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MembraneNeumannBoundaryElemDisc2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boundary (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
MembraneNeumannBoundaryElemDisc2d

MembraneNeumannBoundaryElemDisc2d (c_string Functions, c_string Subset(s), number )
MembraneNeumannBoundaryElemDisc2d (c_string Functions, c_string Subset(s), number )<br>Constructor of class <b>MembraneNeumannBoundaryElemDisc2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber2d> )
void set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_boundary
void
void set_boundary (c_string )
void set_boundary (c_string )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_diffusion
void
void set_diffusion (number )
void set_diffusion (number )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc2d</b><br>group: <b>ug4/Neuron/</b>
;
class
MembraneNeumannBoundaryElemDisc3d
IElemDisc IDomainElemDisc3d 
Group <b>MembraneNeumannBoundaryElemDisc</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="MembraneNeumannBoundaryElemDisc3d.html">MembraneNeumannBoundaryElemDisc3d</a> <br><table><tr><td colspan=2><h3>MembraneNeumannBoundaryElemDisc3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MembraneNeumannBoundaryElemDisc3d (c_string Functions, c_string Subset(s), number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MembraneNeumannBoundaryElemDisc3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boundary (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
MembraneNeumannBoundaryElemDisc3d

MembraneNeumannBoundaryElemDisc3d (c_string Functions, c_string Subset(s), number )
MembraneNeumannBoundaryElemDisc3d (c_string Functions, c_string Subset(s), number )<br>Constructor of class <b>MembraneNeumannBoundaryElemDisc3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber3d> )
void set_injection (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_boundary
void
void set_boundary (c_string )
void set_boundary (c_string )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_diffusion
void
void set_diffusion (number )
void set_diffusion (number )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc3d</b><br>group: <b>ug4/Neuron/</b>
;
class
MembranePotentialDiscretization1d
IElemDisc IDomainElemDisc1d 
Group <b>MembranePotentialDiscretization</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="MembranePotentialDiscretization1d.html">MembranePotentialDiscretization1d</a> <br><table><tr><td colspan=2><h3>MembranePotentialDiscretization1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MembranePotentialDiscretization1d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MembranePotentialDiscretization1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hhDynamics (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
MembranePotentialDiscretization1d

MembranePotentialDiscretization1d (c_string Functions, c_string Subset(s))
MembranePotentialDiscretization1d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>MembranePotentialDiscretization1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>MembranePotentialDiscretization1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_hhDynamics
void
void set_hhDynamics (IFunctionNumber)
void set_hhDynamics (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>MembranePotentialDiscretization1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (IFunctionNumber)
void set_injection (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>MembranePotentialDiscretization1d</b><br>group: <b>ug4/Neuron/</b>
;
class
MembranePotentialDiscretization2d
IElemDisc IDomainElemDisc2d 
Group <b>MembranePotentialDiscretization</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="MembranePotentialDiscretization2d.html">MembranePotentialDiscretization2d</a> <br><table><tr><td colspan=2><h3>MembranePotentialDiscretization2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MembranePotentialDiscretization2d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MembranePotentialDiscretization2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hhDynamics (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
MembranePotentialDiscretization2d

MembranePotentialDiscretization2d (c_string Functions, c_string Subset(s))
MembranePotentialDiscretization2d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>MembranePotentialDiscretization2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>MembranePotentialDiscretization2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_hhDynamics
void
void set_hhDynamics (IFunctionNumber)
void set_hhDynamics (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>MembranePotentialDiscretization2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (IFunctionNumber)
void set_injection (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>MembranePotentialDiscretization2d</b><br>group: <b>ug4/Neuron/</b>
;
class
MembranePotentialDiscretization3d
IElemDisc IDomainElemDisc3d 
Group <b>MembranePotentialDiscretization</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="MembranePotentialDiscretization3d.html">MembranePotentialDiscretization3d</a> <br><table><tr><td colspan=2><h3>MembranePotentialDiscretization3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MembranePotentialDiscretization3d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MembranePotentialDiscretization3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hhDynamics (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
MembranePotentialDiscretization3d

MembranePotentialDiscretization3d (c_string Functions, c_string Subset(s))
MembranePotentialDiscretization3d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>MembranePotentialDiscretization3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>MembranePotentialDiscretization3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_hhDynamics
void
void set_hhDynamics (IFunctionNumber)
void set_hhDynamics (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>MembranePotentialDiscretization3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (IFunctionNumber)
void set_injection (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>MembranePotentialDiscretization3d</b><br>group: <b>ug4/Neuron/</b>
;
class
MentenKinetik1d
IUserData UserNumber1d DependentUserDataNumber1d DataLinkerNumber1d 
Group <b>MentenKinetik</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <a href="DataLinkerNumber1d.html">DataLinkerNumber1d</a> <a href="MentenKinetik1d.html">MentenKinetik1d</a> <br><table><tr><td colspan=2><h3>MentenKinetik1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MentenKinetik1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MentenKinetik1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_l (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_l (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_I (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_I (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k_s (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k_s (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
MentenKinetik1d

MentenKinetik1d ()
MentenKinetik1d ()<br>Constructor of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_l
void
void set_C_l (number )
void set_C_l (number )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_l
void
void set_C_l (SmartPtr<UserNumber1d> )
void set_C_l (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (number )
void set_C_d (number )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (SmartPtr<UserNumber1d> )
void set_C_d (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (number )
void set_k (number )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (SmartPtr<UserNumber1d> )
void set_k (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_I
void
void set_I (number )
void set_I (number )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_I
void
void set_I (SmartPtr<UserNumber1d> )
void set_I (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_Y
void
void set_Y (number )
void set_Y (number )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_Y
void
void set_Y (SmartPtr<UserNumber1d> )
void set_Y (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k_s
void
void set_k_s (number )
void set_k_s (number )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k_s
void
void set_k_s (SmartPtr<UserNumber1d> )
void set_k_s (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>MentenKinetik1d</b><br>group: <b>ug4//Biogas</b>
;
class
MentenKinetik2d
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Group <b>MentenKinetik</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="MentenKinetik2d.html">MentenKinetik2d</a> <br><table><tr><td colspan=2><h3>MentenKinetik2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MentenKinetik2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MentenKinetik2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_l (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_l (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_I (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_I (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k_s (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k_s (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
MentenKinetik2d

MentenKinetik2d ()
MentenKinetik2d ()<br>Constructor of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_l
void
void set_C_l (number )
void set_C_l (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_l
void
void set_C_l (SmartPtr<UserNumber2d> )
void set_C_l (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (number )
void set_C_d (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (SmartPtr<UserNumber2d> )
void set_C_d (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (number )
void set_k (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (SmartPtr<UserNumber2d> )
void set_k (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_I
void
void set_I (number )
void set_I (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_I
void
void set_I (SmartPtr<UserNumber2d> )
void set_I (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_Y
void
void set_Y (number )
void set_Y (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_Y
void
void set_Y (SmartPtr<UserNumber2d> )
void set_Y (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k_s
void
void set_k_s (number )
void set_k_s (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k_s
void
void set_k_s (SmartPtr<UserNumber2d> )
void set_k_s (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
;
class
MentenKinetik3d
IUserData UserNumber3d DependentUserDataNumber3d DataLinkerNumber3d 
Group <b>MentenKinetik</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <a href="DataLinkerNumber3d.html">DataLinkerNumber3d</a> <a href="MentenKinetik3d.html">MentenKinetik3d</a> <br><table><tr><td colspan=2><h3>MentenKinetik3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MentenKinetik3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MentenKinetik3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_l (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_l (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_I (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_I (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k_s (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k_s (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
MentenKinetik3d

MentenKinetik3d ()
MentenKinetik3d ()<br>Constructor of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_l
void
void set_C_l (number )
void set_C_l (number )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_l
void
void set_C_l (SmartPtr<UserNumber3d> )
void set_C_l (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (number )
void set_C_d (number )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (SmartPtr<UserNumber3d> )
void set_C_d (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (number )
void set_k (number )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (SmartPtr<UserNumber3d> )
void set_k (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_I
void
void set_I (number )
void set_I (number )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_I
void
void set_I (SmartPtr<UserNumber3d> )
void set_I (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_Y
void
void set_Y (number )
void set_Y (number )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_Y
void
void set_Y (SmartPtr<UserNumber3d> )
void set_Y (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k_s
void
void set_k_s (number )
void set_k_s (number )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k_s
void
void set_k_s (SmartPtr<UserNumber3d> )
void set_k_s (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>MentenKinetik3d</b><br>group: <b>ug4//Biogas</b>
;
class
MinimalEnergyDampingCPU1
IDampingCPU1 
Group <b>MinimalEnergyDamping</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IDampingCPU1.html">IDampingCPU1</a> <a href="MinimalEnergyDampingCPU1.html">MinimalEnergyDampingCPU1</a> <br><table><tr><td colspan=2><h3>MinimalEnergyDampingCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MinimalEnergyDampingCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
MinimalEnergyDampingCPU1

MinimalEnergyDampingCPU1 ()
MinimalEnergyDampingCPU1 ()<br>Constructor of class <b>MinimalEnergyDampingCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
MinimalEnergyDampingCPU2
IDampingCPU2 
Group <b>MinimalEnergyDamping</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IDampingCPU2.html">IDampingCPU2</a> <a href="MinimalEnergyDampingCPU2.html">MinimalEnergyDampingCPU2</a> <br><table><tr><td colspan=2><h3>MinimalEnergyDampingCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MinimalEnergyDampingCPU2 ()</td></tr><tr><td><br></td></tr></table>
constructor
MinimalEnergyDampingCPU2

MinimalEnergyDampingCPU2 ()
MinimalEnergyDampingCPU2 ()<br>Constructor of class <b>MinimalEnergyDampingCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
MinimalEnergyDampingCPU3
IDampingCPU3 
Group <b>MinimalEnergyDamping</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IDampingCPU3.html">IDampingCPU3</a> <a href="MinimalEnergyDampingCPU3.html">MinimalEnergyDampingCPU3</a> <br><table><tr><td colspan=2><h3>MinimalEnergyDampingCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MinimalEnergyDampingCPU3 ()</td></tr><tr><td><br></td></tr></table>
constructor
MinimalEnergyDampingCPU3

MinimalEnergyDampingCPU3 ()
MinimalEnergyDampingCPU3 ()<br>Constructor of class <b>MinimalEnergyDampingCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
MinimalResiduumDampingCPU1
IDampingCPU1 
Group <b>MinimalResiduumDamping</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IDampingCPU1.html">IDampingCPU1</a> <a href="MinimalResiduumDampingCPU1.html">MinimalResiduumDampingCPU1</a> <br><table><tr><td colspan=2><h3>MinimalResiduumDampingCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MinimalResiduumDampingCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
MinimalResiduumDampingCPU1

MinimalResiduumDampingCPU1 ()
MinimalResiduumDampingCPU1 ()<br>Constructor of class <b>MinimalResiduumDampingCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
MinimalResiduumDampingCPU2
IDampingCPU2 
Group <b>MinimalResiduumDamping</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IDampingCPU2.html">IDampingCPU2</a> <a href="MinimalResiduumDampingCPU2.html">MinimalResiduumDampingCPU2</a> <br><table><tr><td colspan=2><h3>MinimalResiduumDampingCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MinimalResiduumDampingCPU2 ()</td></tr><tr><td><br></td></tr></table>
constructor
MinimalResiduumDampingCPU2

MinimalResiduumDampingCPU2 ()
MinimalResiduumDampingCPU2 ()<br>Constructor of class <b>MinimalResiduumDampingCPU2</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
MinimalResiduumDampingCPU3
IDampingCPU3 
Group <b>MinimalResiduumDamping</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IDampingCPU3.html">IDampingCPU3</a> <a href="MinimalResiduumDampingCPU3.html">MinimalResiduumDampingCPU3</a> <br><table><tr><td colspan=2><h3>MinimalResiduumDampingCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MinimalResiduumDampingCPU3 ()</td></tr><tr><td><br></td></tr></table>
constructor
MinimalResiduumDampingCPU3

MinimalResiduumDampingCPU3 ()
MinimalResiduumDampingCPU3 ()<br>Constructor of class <b>MinimalResiduumDampingCPU3</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
MultiGrid
Grid 
class has constructor. <br>Inheritance: <a href="Grid.html">Grid</a> <a href="MultiGrid.html">MultiGrid</a> <br><table><tr><td colspan=2><h3>MultiGrid Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MultiGrid ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MultiGrid Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_edges (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_faces (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_hexahedrons (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prisms (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_pyramids (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_quadrilaterals (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_tetrahedrons (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_triangles (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_vertices (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_volumes (integer )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Grid Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Grid ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited Grid Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_edges (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_faces (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_vertices (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reserve_volumes (integer )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited Grid Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_edges ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_faces ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_hexahedrons ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prisms ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_pyramids ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_quadrilaterals ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_tetrahedrons ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_triangles ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_vertices ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_volumes ()</td></tr><tr><td><br></td></tr></table>
constructor
MultiGrid

MultiGrid ()
MultiGrid ()<br>Constructor of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_levels
integer
integer num_levels () const
integer num_levels ()<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_vertices
integer
integer num_vertices (integer ) const
integer num_vertices (integer )<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_edges
integer
integer num_edges (integer ) const
integer num_edges (integer )<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_faces
integer
integer num_faces (integer ) const
integer num_faces (integer )<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_triangles
integer
integer num_triangles (integer ) const
integer num_triangles (integer )<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_quadrilaterals
integer
integer num_quadrilaterals (integer ) const
integer num_quadrilaterals (integer )<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_volumes
integer
integer num_volumes (integer ) const
integer num_volumes (integer )<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_tetrahedrons
integer
integer num_tetrahedrons (integer ) const
integer num_tetrahedrons (integer )<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_pyramids
integer
integer num_pyramids (integer ) const
integer num_pyramids (integer )<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_prisms
integer
integer num_prisms (integer ) const
integer num_prisms (integer )<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_hexahedrons
integer
integer num_hexahedrons (integer ) const
integer num_hexahedrons (integer )<br><br>Member function of class <b>MultiGrid</b><br>group: <b>/ug4/Grid</b>
;
class
NCX

class has constructor. <br><table><tr><td colspan=2><h3>NCX Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NCX (number dt [ms])</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NCX Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next (integer no. of parameters, number EC calcium concentration [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next_step (number EC calcium concentration [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NCX Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_e ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_e<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_i ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_i<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_current ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns current<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_density ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns density<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_dt ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dt<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_flux ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns flux<br/></td></tr><tr><td><br></td></tr></table>
constructor
NCX

NCX (number dt [ms])
NCX (number dt [ms])<br>Constructor of class <b>NCX</b><br>group: <b>ug4/Neuro/</b>
memberfunction
next
bool
bool next (integer no. of parameters, number EC calcium concentration [mM])
bool next (integer no. of parameters, number EC calcium concentration [mM])<br><br>Member function of class <b>NCX</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
next_step
bool
bool next_step (number EC calcium concentration [mM])
bool next_step (number EC calcium concentration [mM])<br><br>Member function of class <b>NCX</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
get_flux
number
number get_flux () const
number get_flux ()<br><br>Member function of class <b>NCX</b><br>returns flux<br>group: <b>ug4/Neuro/</b>
memberfunction
get_current
number
number get_current () const
number get_current ()<br><br>Member function of class <b>NCX</b><br>returns current<br>group: <b>ug4/Neuro/</b>
memberfunction
get_dt
number
number get_dt () const
number get_dt ()<br><br>Member function of class <b>NCX</b><br>returns dt<br>group: <b>ug4/Neuro/</b>
memberfunction
get_density
number
number get_density () const
number get_density ()<br><br>Member function of class <b>NCX</b><br>returns density<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_e
number
number dCadCa_e () const
number dCadCa_e ()<br><br>Member function of class <b>NCX</b><br>returns dCa/dCa_e<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_i
number
number dCadCa_i () const
number dCadCa_i ()<br><br>Member function of class <b>NCX</b><br>returns dCa/dCa_i<br>group: <b>ug4/Neuro/</b>
;
class
NMDA

class has constructor. <br><table><tr><td colspan=2><h3>NMDA Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NMDA (number dt [ms])</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NMDA Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next (integer no. of parameters, number IC calcium concentration [mM], number EC calcium concentration [mM], number membrane potential [mV], number EC sodium concentration [mM], number IC sodium concentration [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next_step (number IC calcium concentration [mM], number EC calcium concentrationm [mM], number membrane potential [mV], number IC sodium concentration [mM], number EC sodium concentration [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NMDA Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_e ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_e<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_i ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_i<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_current ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns current<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_density ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns density<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_dt ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dt<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_flux ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns flux<br/></td></tr><tr><td><br></td></tr></table>
constructor
NMDA

NMDA (number dt [ms])
NMDA (number dt [ms])<br>Constructor of class <b>NMDA</b><br>group: <b>ug4/Neuro/</b>
memberfunction
next
bool
bool next (integer no. of parameters, number IC calcium concentration [mM], number EC calcium concentration [mM], number membrane potential [mV], number EC sodium concentration [mM], number IC sodium concentration [mM])
bool next (integer no. of parameters, number IC calcium concentration [mM], number EC calcium concentration [mM], number membrane potential [mV], number EC sodium concentration [mM], number IC sodium concentration [mM])<br><br>Member function of class <b>NMDA</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
next_step
bool
bool next_step (number IC calcium concentration [mM], number EC calcium concentrationm [mM], number membrane potential [mV], number IC sodium concentration [mM], number EC sodium concentration [mM])
bool next_step (number IC calcium concentration [mM], number EC calcium concentrationm [mM], number membrane potential [mV], number IC sodium concentration [mM], number EC sodium concentration [mM])<br><br>Member function of class <b>NMDA</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
get_flux
number
number get_flux () const
number get_flux ()<br><br>Member function of class <b>NMDA</b><br>returns flux<br>group: <b>ug4/Neuro/</b>
memberfunction
get_current
number
number get_current () const
number get_current ()<br><br>Member function of class <b>NMDA</b><br>returns current<br>group: <b>ug4/Neuro/</b>
memberfunction
get_dt
number
number get_dt () const
number get_dt ()<br><br>Member function of class <b>NMDA</b><br>returns dt<br>group: <b>ug4/Neuro/</b>
memberfunction
get_density
number
number get_density () const
number get_density ()<br><br>Member function of class <b>NMDA</b><br>returns density<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_e
number
number dCadCa_e () const
number dCadCa_e ()<br><br>Member function of class <b>NMDA</b><br>returns dCa/dCa_e<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_i
number
number dCadCa_i () const
number dCadCa_i ()<br><br>Member function of class <b>NMDA</b><br>returns dCa/dCa_i<br>group: <b>ug4/Neuro/</b>
;
class
NMDA2

class has constructor. <br><table><tr><td colspan=2><h3>NMDA2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NMDA2 (number dt [ms])</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NMDA2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next (integer no. of parameters, number time [ms], number membrane potential [mV], number magnesium concentration [mM], number alpha [1/mV], number beta [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next_step (number time [ms], number membrane potential [mV], number magnesium concentration [mM], number alpha [1/mV], number beta [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NMDA2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_e ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_e<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_i ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_i<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_current ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns current<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_density ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns density<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_dt ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dt<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_flux ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns flux<br/></td></tr><tr><td><br></td></tr></table>
constructor
NMDA2

NMDA2 (number dt [ms])
NMDA2 (number dt [ms])<br>Constructor of class <b>NMDA2</b><br>group: <b>ug4/Neuro/</b>
memberfunction
next
bool
bool next (integer no. of parameters, number time [ms], number membrane potential [mV], number magnesium concentration [mM], number alpha [1/mV], number beta [mM])
bool next (integer no. of parameters, number time [ms], number membrane potential [mV], number magnesium concentration [mM], number alpha [1/mV], number beta [mM])<br><br>Member function of class <b>NMDA2</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
next_step
bool
bool next_step (number time [ms], number membrane potential [mV], number magnesium concentration [mM], number alpha [1/mV], number beta [mM])
bool next_step (number time [ms], number membrane potential [mV], number magnesium concentration [mM], number alpha [1/mV], number beta [mM])<br><br>Member function of class <b>NMDA2</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
get_flux
number
number get_flux () const
number get_flux ()<br><br>Member function of class <b>NMDA2</b><br>returns flux<br>group: <b>ug4/Neuro/</b>
memberfunction
get_current
number
number get_current () const
number get_current ()<br><br>Member function of class <b>NMDA2</b><br>returns current<br>group: <b>ug4/Neuro/</b>
memberfunction
get_dt
number
number get_dt () const
number get_dt ()<br><br>Member function of class <b>NMDA2</b><br>returns dt<br>group: <b>ug4/Neuro/</b>
memberfunction
get_density
number
number get_density () const
number get_density ()<br><br>Member function of class <b>NMDA2</b><br>returns density<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_e
number
number dCadCa_e () const
number dCadCa_e ()<br><br>Member function of class <b>NMDA2</b><br>returns dCa/dCa_e<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_i
number
number dCadCa_i () const
number dCadCa_i ()<br><br>Member function of class <b>NMDA2</b><br>returns dCa/dCa_i<br>group: <b>ug4/Neuro/</b>
;
class
NeumannBoundary1d
IElemDisc IDomainElemDisc1d 
Group <b>NeumannBoundary</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="NeumannBoundary1d.html">NeumannBoundary1d</a> <br><table><tr><td colspan=2><h3>NeumannBoundary1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NeumannBoundary1d (c_string Function(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NeumannBoundary1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber1d.html">CondUserNumber1d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string , c_string , c_string )</td></tr><tr><td><br></td></tr></table>
constructor
NeumannBoundary1d

NeumannBoundary1d (c_string Function(s))
NeumannBoundary1d (c_string Function(s))<br>Constructor of class <b>NeumannBoundary1d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (number , c_string , c_string )
void add (number , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary1d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> , c_string , c_string )
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary1d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber1d> , c_string , c_string )
void add (SmartPtr&lt;<a href="CondUserNumber1d.html">CondUserNumber1d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary1d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector1d> , c_string , c_string )
void add (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary1d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (c_string , c_string , c_string )
void add (c_string , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary1d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
;
class
NeumannBoundary2d
IElemDisc IDomainElemDisc2d 
Group <b>NeumannBoundary</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="NeumannBoundary2d.html">NeumannBoundary2d</a> <br><table><tr><td colspan=2><h3>NeumannBoundary2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NeumannBoundary2d (c_string Function(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NeumannBoundary2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string , c_string , c_string )</td></tr><tr><td><br></td></tr></table>
constructor
NeumannBoundary2d

NeumannBoundary2d (c_string Function(s))
NeumannBoundary2d (c_string Function(s))<br>Constructor of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (number , c_string , c_string )
void add (number , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , c_string , c_string )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber2d> , c_string , c_string )
void add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector2d> , c_string , c_string )
void add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (c_string , c_string , c_string )
void add (c_string , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
;
class
NeumannBoundary3d
IElemDisc IDomainElemDisc3d 
Group <b>NeumannBoundary</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="NeumannBoundary3d.html">NeumannBoundary3d</a> <br><table><tr><td colspan=2><h3>NeumannBoundary3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NeumannBoundary3d (c_string Function(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NeumannBoundary3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber3d.html">CondUserNumber3d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string , c_string , c_string )</td></tr><tr><td><br></td></tr></table>
constructor
NeumannBoundary3d

NeumannBoundary3d (c_string Function(s))
NeumannBoundary3d (c_string Function(s))<br>Constructor of class <b>NeumannBoundary3d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (number , c_string , c_string )
void add (number , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary3d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> , c_string , c_string )
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary3d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber3d> , c_string , c_string )
void add (SmartPtr&lt;<a href="CondUserNumber3d.html">CondUserNumber3d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary3d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector3d> , c_string , c_string )
void add (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary3d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (c_string , c_string , c_string )
void add (c_string , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary3d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
;
class
NewtonSolverCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 IOperatorInverseCPU1 
Group <b>NewtonSolver</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="IOperatorInverseCPU1.html">IOperatorInverseCPU1</a> <a href="NewtonSolverCPU1.html">NewtonSolverCPU1</a> <br><table><tr><td colspan=2><h3>NewtonSolverCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NewtonSolverCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NewtonSolverCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_average_convergence ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IOperatorCPU1.html">IOperatorCPU1</a>&gt; op)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>prepare (<a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; convCheck)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_line_search (SmartPtr&lt;<a href="ILineSearchCPU1.html">ILineSearchCPU1</a>&gt; lineSeach)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_linear_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; linSolver)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NewtonSolverCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>average_linear_steps (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns average number of linsolver steps per linsolver call in newton step iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_linsolver_calls (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of linsolver calls in iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_linsolver_steps (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of linsolver steps in newton step iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_newton_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of newton steps in history<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_average_convergence ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>total_average_linear_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total average number of linsolver steps per linsolver call<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>total_linsolver_calls ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total number of linsolver calls<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>total_linsolver_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total number of linsolver steps<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
NewtonSolverCPU1

NewtonSolverCPU1 ()
NewtonSolverCPU1 ()<br>Constructor of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_linear_solver
void
void set_linear_solver (SmartPtr<ILinearOperatorInverseCPU1> linSolver)
void set_linear_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; linSolver)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_convergence_check
void
void set_convergence_check (SmartPtr<IConvergenceCheckCPU1> convCheck)
void set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; convCheck)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_line_search
void
void set_line_search (SmartPtr<ILineSearchCPU1> lineSeach)
void set_line_search (SmartPtr&lt;<a href="ILineSearchCPU1.html">ILineSearchCPU1</a>&gt; lineSeach)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
init
bool
bool init (SmartPtr<IOperatorCPU1> op)
bool init (SmartPtr&lt;<a href="IOperatorCPU1.html">IOperatorCPU1</a>&gt; op)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
prepare
bool
bool prepare (VectorCPU1u)
bool prepare (<a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
apply
bool
bool apply (VectorCPU1u)
bool apply (<a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
clear_average_convergence
void
void clear_average_convergence ()
void clear_average_convergence ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
print_average_convergence
void
void print_average_convergence () const
void print_average_convergence ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_newton_steps
integer
integer num_newton_steps () const
integer num_newton_steps ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns number of newton steps in history<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_linsolver_calls
integer
integer num_linsolver_calls (integer iNewtonStep) const
integer num_linsolver_calls (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns number of linsolver calls in iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_linsolver_steps
integer
integer num_linsolver_steps (integer iNewtonStep) const
integer num_linsolver_steps (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns number of linsolver steps in newton step iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
average_linear_steps
number
number average_linear_steps (integer iNewtonStep) const
number average_linear_steps (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns average number of linsolver steps per linsolver call in newton step iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_linsolver_calls
integer
integer total_linsolver_calls () const
integer total_linsolver_calls ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns total number of linsolver calls<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_linsolver_steps
integer
integer total_linsolver_steps () const
integer total_linsolver_steps ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns total number of linsolver steps<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_average_linear_steps
number
number total_average_linear_steps () const
number total_average_linear_steps ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns total average number of linsolver steps per linsolver call<br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
NewtonSolverCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 IOperatorInverseCPU2 
Group <b>NewtonSolver</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="IOperatorInverseCPU2.html">IOperatorInverseCPU2</a> <a href="NewtonSolverCPU2.html">NewtonSolverCPU2</a> <br><table><tr><td colspan=2><h3>NewtonSolverCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NewtonSolverCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NewtonSolverCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_average_convergence ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IOperatorCPU2.html">IOperatorCPU2</a>&gt; op)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>prepare (<a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; convCheck)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_line_search (SmartPtr&lt;<a href="ILineSearchCPU2.html">ILineSearchCPU2</a>&gt; lineSeach)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_linear_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; linSolver)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NewtonSolverCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>average_linear_steps (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns average number of linsolver steps per linsolver call in newton step iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_linsolver_calls (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of linsolver calls in iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_linsolver_steps (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of linsolver steps in newton step iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_newton_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of newton steps in history<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_average_convergence ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>total_average_linear_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total average number of linsolver steps per linsolver call<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>total_linsolver_calls ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total number of linsolver calls<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>total_linsolver_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total number of linsolver steps<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
NewtonSolverCPU2

NewtonSolverCPU2 ()
NewtonSolverCPU2 ()<br>Constructor of class <b>NewtonSolverCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_linear_solver
void
void set_linear_solver (SmartPtr<ILinearOperatorInverseCPU2> linSolver)
void set_linear_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; linSolver)<br><br>Member function of class <b>NewtonSolverCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_convergence_check
void
void set_convergence_check (SmartPtr<IConvergenceCheckCPU2> convCheck)
void set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU2.html">IConvergenceCheckCPU2</a>&gt; convCheck)<br><br>Member function of class <b>NewtonSolverCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_line_search
void
void set_line_search (SmartPtr<ILineSearchCPU2> lineSeach)
void set_line_search (SmartPtr&lt;<a href="ILineSearchCPU2.html">ILineSearchCPU2</a>&gt; lineSeach)<br><br>Member function of class <b>NewtonSolverCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
init
bool
bool init (SmartPtr<IOperatorCPU2> op)
bool init (SmartPtr&lt;<a href="IOperatorCPU2.html">IOperatorCPU2</a>&gt; op)<br><br>Member function of class <b>NewtonSolverCPU2</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
prepare
bool
bool prepare (VectorCPU2u)
bool prepare (<a href="VectorCPU2.html">VectorCPU2</a> *u)<br><br>Member function of class <b>NewtonSolverCPU2</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
apply
bool
bool apply (VectorCPU2u)
bool apply (<a href="VectorCPU2.html">VectorCPU2</a> *u)<br><br>Member function of class <b>NewtonSolverCPU2</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
clear_average_convergence
void
void clear_average_convergence ()
void clear_average_convergence ()<br><br>Member function of class <b>NewtonSolverCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
print_average_convergence
void
void print_average_convergence () const
void print_average_convergence ()<br><br>Member function of class <b>NewtonSolverCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_newton_steps
integer
integer num_newton_steps () const
integer num_newton_steps ()<br><br>Member function of class <b>NewtonSolverCPU2</b><br>returns number of newton steps in history<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_linsolver_calls
integer
integer num_linsolver_calls (integer iNewtonStep) const
integer num_linsolver_calls (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU2</b><br>returns number of linsolver calls in iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_linsolver_steps
integer
integer num_linsolver_steps (integer iNewtonStep) const
integer num_linsolver_steps (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU2</b><br>returns number of linsolver steps in newton step iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
average_linear_steps
number
number average_linear_steps (integer iNewtonStep) const
number average_linear_steps (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU2</b><br>returns average number of linsolver steps per linsolver call in newton step iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_linsolver_calls
integer
integer total_linsolver_calls () const
integer total_linsolver_calls ()<br><br>Member function of class <b>NewtonSolverCPU2</b><br>returns total number of linsolver calls<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_linsolver_steps
integer
integer total_linsolver_steps () const
integer total_linsolver_steps ()<br><br>Member function of class <b>NewtonSolverCPU2</b><br>returns total number of linsolver steps<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_average_linear_steps
number
number total_average_linear_steps () const
number total_average_linear_steps ()<br><br>Member function of class <b>NewtonSolverCPU2</b><br>returns total average number of linsolver steps per linsolver call<br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
NewtonSolverCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 IOperatorInverseCPU3 
Group <b>NewtonSolver</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="IOperatorInverseCPU3.html">IOperatorInverseCPU3</a> <a href="NewtonSolverCPU3.html">NewtonSolverCPU3</a> <br><table><tr><td colspan=2><h3>NewtonSolverCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NewtonSolverCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NewtonSolverCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_average_convergence ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IOperatorCPU3.html">IOperatorCPU3</a>&gt; op)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>prepare (<a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; convCheck)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_line_search (SmartPtr&lt;<a href="ILineSearchCPU3.html">ILineSearchCPU3</a>&gt; lineSeach)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_linear_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; linSolver)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NewtonSolverCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>average_linear_steps (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns average number of linsolver steps per linsolver call in newton step iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_linsolver_calls (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of linsolver calls in iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_linsolver_steps (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of linsolver steps in newton step iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_newton_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of newton steps in history<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_average_convergence ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>total_average_linear_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total average number of linsolver steps per linsolver call<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>total_linsolver_calls ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total number of linsolver calls<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>total_linsolver_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total number of linsolver steps<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
NewtonSolverCPU3

NewtonSolverCPU3 ()
NewtonSolverCPU3 ()<br>Constructor of class <b>NewtonSolverCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_linear_solver
void
void set_linear_solver (SmartPtr<ILinearOperatorInverseCPU3> linSolver)
void set_linear_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; linSolver)<br><br>Member function of class <b>NewtonSolverCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_convergence_check
void
void set_convergence_check (SmartPtr<IConvergenceCheckCPU3> convCheck)
void set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU3.html">IConvergenceCheckCPU3</a>&gt; convCheck)<br><br>Member function of class <b>NewtonSolverCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_line_search
void
void set_line_search (SmartPtr<ILineSearchCPU3> lineSeach)
void set_line_search (SmartPtr&lt;<a href="ILineSearchCPU3.html">ILineSearchCPU3</a>&gt; lineSeach)<br><br>Member function of class <b>NewtonSolverCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
init
bool
bool init (SmartPtr<IOperatorCPU3> op)
bool init (SmartPtr&lt;<a href="IOperatorCPU3.html">IOperatorCPU3</a>&gt; op)<br><br>Member function of class <b>NewtonSolverCPU3</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
prepare
bool
bool prepare (VectorCPU3u)
bool prepare (<a href="VectorCPU3.html">VectorCPU3</a> *u)<br><br>Member function of class <b>NewtonSolverCPU3</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
apply
bool
bool apply (VectorCPU3u)
bool apply (<a href="VectorCPU3.html">VectorCPU3</a> *u)<br><br>Member function of class <b>NewtonSolverCPU3</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
clear_average_convergence
void
void clear_average_convergence ()
void clear_average_convergence ()<br><br>Member function of class <b>NewtonSolverCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
print_average_convergence
void
void print_average_convergence () const
void print_average_convergence ()<br><br>Member function of class <b>NewtonSolverCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_newton_steps
integer
integer num_newton_steps () const
integer num_newton_steps ()<br><br>Member function of class <b>NewtonSolverCPU3</b><br>returns number of newton steps in history<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_linsolver_calls
integer
integer num_linsolver_calls (integer iNewtonStep) const
integer num_linsolver_calls (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU3</b><br>returns number of linsolver calls in iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_linsolver_steps
integer
integer num_linsolver_steps (integer iNewtonStep) const
integer num_linsolver_steps (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU3</b><br>returns number of linsolver steps in newton step iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
average_linear_steps
number
number average_linear_steps (integer iNewtonStep) const
number average_linear_steps (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU3</b><br>returns average number of linsolver steps per linsolver call in newton step iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_linsolver_calls
integer
integer total_linsolver_calls () const
integer total_linsolver_calls ()<br><br>Member function of class <b>NewtonSolverCPU3</b><br>returns total number of linsolver calls<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_linsolver_steps
integer
integer total_linsolver_steps () const
integer total_linsolver_steps ()<br><br>Member function of class <b>NewtonSolverCPU3</b><br>returns total number of linsolver steps<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_average_linear_steps
number
number total_average_linear_steps () const
number total_average_linear_steps ()<br><br>Member function of class <b>NewtonSolverCPU3</b><br>returns total average number of linsolver steps per linsolver call<br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
NoUpwind1d
IConvectionShapes1d 
Group <b>NoUpwind</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IConvectionShapes1d.html">IConvectionShapes1d</a> <a href="NoUpwind1d.html">NoUpwind1d</a> <br><table><tr><td colspan=2><h3>NoUpwind1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NoUpwind1d ()</td></tr><tr><td><br></td></tr></table>
constructor
NoUpwind1d

NoUpwind1d ()
NoUpwind1d ()<br>Constructor of class <b>NoUpwind1d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
NoUpwind2d
IConvectionShapes2d 
Group <b>NoUpwind</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IConvectionShapes2d.html">IConvectionShapes2d</a> <a href="NoUpwind2d.html">NoUpwind2d</a> <br><table><tr><td colspan=2><h3>NoUpwind2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NoUpwind2d ()</td></tr><tr><td><br></td></tr></table>
constructor
NoUpwind2d

NoUpwind2d ()
NoUpwind2d ()<br>Constructor of class <b>NoUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
NoUpwind3d
IConvectionShapes3d 
Group <b>NoUpwind</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IConvectionShapes3d.html">IConvectionShapes3d</a> <a href="NoUpwind3d.html">NoUpwind3d</a> <br><table><tr><td colspan=2><h3>NoUpwind3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NoUpwind3d ()</td></tr><tr><td><br></td></tr></table>
constructor
NoUpwind3d

NoUpwind3d ()
NoUpwind3d ()<br>Constructor of class <b>NoUpwind3d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
OneSideP1Constraints1dCPU1
IConstraintCPU1 IDomainConstraint1dCPU1 
Group <b>OneSideP1Constraints</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint1dCPU1.html">IDomainConstraint1dCPU1</a> <a href="OneSideP1Constraints1dCPU1.html">OneSideP1Constraints1dCPU1</a> <br><table><tr><td colspan=2><h3>OneSideP1Constraints1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>OneSideP1Constraints1dCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
OneSideP1Constraints1dCPU1

OneSideP1Constraints1dCPU1 ()
OneSideP1Constraints1dCPU1 ()<br>Constructor of class <b>OneSideP1Constraints1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
OneSideP1Constraints1dCPU2
IConstraintCPU2 IDomainConstraint1dCPU2 
Group <b>OneSideP1Constraints</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint1dCPU2.html">IDomainConstraint1dCPU2</a> <a href="OneSideP1Constraints1dCPU2.html">OneSideP1Constraints1dCPU2</a> <br><table><tr><td colspan=2><h3>OneSideP1Constraints1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>OneSideP1Constraints1dCPU2 ()</td></tr><tr><td><br></td></tr></table>
constructor
OneSideP1Constraints1dCPU2

OneSideP1Constraints1dCPU2 ()
OneSideP1Constraints1dCPU2 ()<br>Constructor of class <b>OneSideP1Constraints1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
OneSideP1Constraints1dCPU3
IConstraintCPU3 IDomainConstraint1dCPU3 
Group <b>OneSideP1Constraints</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint1dCPU3.html">IDomainConstraint1dCPU3</a> <a href="OneSideP1Constraints1dCPU3.html">OneSideP1Constraints1dCPU3</a> <br><table><tr><td colspan=2><h3>OneSideP1Constraints1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>OneSideP1Constraints1dCPU3 ()</td></tr><tr><td><br></td></tr></table>
constructor
OneSideP1Constraints1dCPU3

OneSideP1Constraints1dCPU3 ()
OneSideP1Constraints1dCPU3 ()<br>Constructor of class <b>OneSideP1Constraints1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
OneSideP1Constraints2dCPU1
IConstraintCPU1 IDomainConstraint2dCPU1 
Group <b>OneSideP1Constraints</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a> <a href="OneSideP1Constraints2dCPU1.html">OneSideP1Constraints2dCPU1</a> <br><table><tr><td colspan=2><h3>OneSideP1Constraints2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>OneSideP1Constraints2dCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
OneSideP1Constraints2dCPU1

OneSideP1Constraints2dCPU1 ()
OneSideP1Constraints2dCPU1 ()<br>Constructor of class <b>OneSideP1Constraints2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
OneSideP1Constraints2dCPU2
IConstraintCPU2 IDomainConstraint2dCPU2 
Group <b>OneSideP1Constraints</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint2dCPU2.html">IDomainConstraint2dCPU2</a> <a href="OneSideP1Constraints2dCPU2.html">OneSideP1Constraints2dCPU2</a> <br><table><tr><td colspan=2><h3>OneSideP1Constraints2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>OneSideP1Constraints2dCPU2 ()</td></tr><tr><td><br></td></tr></table>
constructor
OneSideP1Constraints2dCPU2

OneSideP1Constraints2dCPU2 ()
OneSideP1Constraints2dCPU2 ()<br>Constructor of class <b>OneSideP1Constraints2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
OneSideP1Constraints2dCPU3
IConstraintCPU3 IDomainConstraint2dCPU3 
Group <b>OneSideP1Constraints</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint2dCPU3.html">IDomainConstraint2dCPU3</a> <a href="OneSideP1Constraints2dCPU3.html">OneSideP1Constraints2dCPU3</a> <br><table><tr><td colspan=2><h3>OneSideP1Constraints2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>OneSideP1Constraints2dCPU3 ()</td></tr><tr><td><br></td></tr></table>
constructor
OneSideP1Constraints2dCPU3

OneSideP1Constraints2dCPU3 ()
OneSideP1Constraints2dCPU3 ()<br>Constructor of class <b>OneSideP1Constraints2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
OneSideP1Constraints3dCPU1
IConstraintCPU1 IDomainConstraint3dCPU1 
Group <b>OneSideP1Constraints</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint3dCPU1.html">IDomainConstraint3dCPU1</a> <a href="OneSideP1Constraints3dCPU1.html">OneSideP1Constraints3dCPU1</a> <br><table><tr><td colspan=2><h3>OneSideP1Constraints3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>OneSideP1Constraints3dCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
OneSideP1Constraints3dCPU1

OneSideP1Constraints3dCPU1 ()
OneSideP1Constraints3dCPU1 ()<br>Constructor of class <b>OneSideP1Constraints3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
OneSideP1Constraints3dCPU2
IConstraintCPU2 IDomainConstraint3dCPU2 
Group <b>OneSideP1Constraints</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint3dCPU2.html">IDomainConstraint3dCPU2</a> <a href="OneSideP1Constraints3dCPU2.html">OneSideP1Constraints3dCPU2</a> <br><table><tr><td colspan=2><h3>OneSideP1Constraints3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>OneSideP1Constraints3dCPU2 ()</td></tr><tr><td><br></td></tr></table>
constructor
OneSideP1Constraints3dCPU2

OneSideP1Constraints3dCPU2 ()
OneSideP1Constraints3dCPU2 ()<br>Constructor of class <b>OneSideP1Constraints3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
OneSideP1Constraints3dCPU3
IConstraintCPU3 IDomainConstraint3dCPU3 
Group <b>OneSideP1Constraints</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint3dCPU3.html">IDomainConstraint3dCPU3</a> <a href="OneSideP1Constraints3dCPU3.html">OneSideP1Constraints3dCPU3</a> <br><table><tr><td colspan=2><h3>OneSideP1Constraints3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>OneSideP1Constraints3dCPU3 ()</td></tr><tr><td><br></td></tr></table>
constructor
OneSideP1Constraints3dCPU3

OneSideP1Constraints3dCPU3 ()
OneSideP1Constraints3dCPU3 ()<br>Constructor of class <b>OneSideP1Constraints3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
P1LocalTransferCPU1
ILocalTransfer ILocalTransferAlgebraCPU1 
Group <b>P1LocalTransfer</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="ILocalTransfer.html">ILocalTransfer</a> <a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a> <a href="P1LocalTransferCPU1.html">P1LocalTransferCPU1</a> <br><table><tr><td colspan=2><h3>P1LocalTransferCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>P1LocalTransferCPU1 (integer fct)</td></tr><tr><td><br></td></tr></table>
constructor
P1LocalTransferCPU1

P1LocalTransferCPU1 (integer fct)
P1LocalTransferCPU1 (integer fct)<br>Constructor of class <b>P1LocalTransferCPU1</b>
;
class
P1LocalTransferCPU2
ILocalTransfer ILocalTransferAlgebraCPU2 
Group <b>P1LocalTransfer</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="ILocalTransfer.html">ILocalTransfer</a> <a href="ILocalTransferAlgebraCPU2.html">ILocalTransferAlgebraCPU2</a> <a href="P1LocalTransferCPU2.html">P1LocalTransferCPU2</a> <br><table><tr><td colspan=2><h3>P1LocalTransferCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>P1LocalTransferCPU2 (integer fct)</td></tr><tr><td><br></td></tr></table>
constructor
P1LocalTransferCPU2

P1LocalTransferCPU2 (integer fct)
P1LocalTransferCPU2 (integer fct)<br>Constructor of class <b>P1LocalTransferCPU2</b>
;
class
P1LocalTransferCPU3
ILocalTransfer ILocalTransferAlgebraCPU3 
Group <b>P1LocalTransfer</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="ILocalTransfer.html">ILocalTransfer</a> <a href="ILocalTransferAlgebraCPU3.html">ILocalTransferAlgebraCPU3</a> <a href="P1LocalTransferCPU3.html">P1LocalTransferCPU3</a> <br><table><tr><td colspan=2><h3>P1LocalTransferCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>P1LocalTransferCPU3 (integer fct)</td></tr><tr><td><br></td></tr></table>
constructor
P1LocalTransferCPU3

P1LocalTransferCPU3 (integer fct)
P1LocalTransferCPU3 (integer fct)<br>Constructor of class <b>P1LocalTransferCPU3</b>
;
class
PMCAsimple

class has constructor. <br><table><tr><td colspan=2><h3>PMCAsimple Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>PMCAsimple (number dt [ms])</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>PMCAsimple Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next (integer no. of parameters, number IC calcium concentration [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next_step (number IC calcium concentration [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>PMCAsimple Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_e ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_e<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_i ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_i<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_current ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns current<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_density ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns density<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_dt ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dt<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_flux ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns flux<br/></td></tr><tr><td><br></td></tr></table>
constructor
PMCAsimple

PMCAsimple (number dt [ms])
PMCAsimple (number dt [ms])<br>Constructor of class <b>PMCAsimple</b><br>group: <b>ug4/Neuro/</b>
memberfunction
next
bool
bool next (integer no. of parameters, number IC calcium concentration [mM])
bool next (integer no. of parameters, number IC calcium concentration [mM])<br><br>Member function of class <b>PMCAsimple</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
next_step
bool
bool next_step (number IC calcium concentration [mM])
bool next_step (number IC calcium concentration [mM])<br><br>Member function of class <b>PMCAsimple</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
get_flux
number
number get_flux () const
number get_flux ()<br><br>Member function of class <b>PMCAsimple</b><br>returns flux<br>group: <b>ug4/Neuro/</b>
memberfunction
get_current
number
number get_current () const
number get_current ()<br><br>Member function of class <b>PMCAsimple</b><br>returns current<br>group: <b>ug4/Neuro/</b>
memberfunction
get_dt
number
number get_dt () const
number get_dt ()<br><br>Member function of class <b>PMCAsimple</b><br>returns dt<br>group: <b>ug4/Neuro/</b>
memberfunction
get_density
number
number get_density () const
number get_density ()<br><br>Member function of class <b>PMCAsimple</b><br>returns density<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_i
number
number dCadCa_i () const
number dCadCa_i ()<br><br>Member function of class <b>PMCAsimple</b><br>returns dCa/dCa_i<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_e
number
number dCadCa_e () const
number dCadCa_e ()<br><br>Member function of class <b>PMCAsimple</b><br>returns dCa/dCa_e<br>group: <b>ug4/Neuro/</b>
;
class
PMCAtimedep

class has constructor. <br><table><tr><td colspan=2><h3>PMCAtimedep Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>PMCAtimedep (number dt [ms])</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>PMCAtimedep Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next (integer no. of parameters, number IC calcium concentration [mM], number stimulation fraction)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>next_step (number IC calcium concentration [mM])</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Boolean<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: ug4/Neuro/<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>PMCAtimedep Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_e ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_e<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>dCadCa_i ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dCa/dCa_i<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_current ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns current<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_density ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns density<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_dt ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns dt<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_flux ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns flux<br/></td></tr><tr><td><br></td></tr></table>
constructor
PMCAtimedep

PMCAtimedep (number dt [ms])
PMCAtimedep (number dt [ms])<br>Constructor of class <b>PMCAtimedep</b><br>group: <b>ug4/Neuro/</b>
memberfunction
next
bool
bool next (integer no. of parameters, number IC calcium concentration [mM], number stimulation fraction)
bool next (integer no. of parameters, number IC calcium concentration [mM], number stimulation fraction)<br><br>Member function of class <b>PMCAtimedep</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
next_step
bool
bool next_step (number IC calcium concentration [mM])
bool next_step (number IC calcium concentration [mM])<br><br>Member function of class <b>PMCAtimedep</b><br>returns Boolean<br>tooltip: ug4/Neuro/<br>group: <b>ug4/Neuro/</b>
memberfunction
get_flux
number
number get_flux () const
number get_flux ()<br><br>Member function of class <b>PMCAtimedep</b><br>returns flux<br>group: <b>ug4/Neuro/</b>
memberfunction
get_current
number
number get_current () const
number get_current ()<br><br>Member function of class <b>PMCAtimedep</b><br>returns current<br>group: <b>ug4/Neuro/</b>
memberfunction
get_dt
number
number get_dt () const
number get_dt ()<br><br>Member function of class <b>PMCAtimedep</b><br>returns dt<br>group: <b>ug4/Neuro/</b>
memberfunction
get_density
number
number get_density () const
number get_density ()<br><br>Member function of class <b>PMCAtimedep</b><br>returns density<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_i
number
number dCadCa_i () const
number dCadCa_i ()<br><br>Member function of class <b>PMCAtimedep</b><br>returns dCa/dCa_i<br>group: <b>ug4/Neuro/</b>
memberfunction
dCadCa_e
number
number dCadCa_e () const
number dCadCa_e ()<br><br>Member function of class <b>PMCAtimedep</b><br>returns dCa/dCa_e<br>group: <b>ug4/Neuro/</b>
;
class
ParallelHangingNodeRefiner_MultiGrid
IRefiner HangingNodeRefiner_MultiGrid 
class has constructor. <br>Inheritance: <a href="IRefiner.html">IRefiner</a> <a href="HangingNodeRefiner_MultiGrid.html">HangingNodeRefiner_MultiGrid</a> <a href="ParallelHangingNodeRefiner_MultiGrid.html">ParallelHangingNodeRefiner_MultiGrid</a> <br><table><tr><td colspan=2><h3>ParallelHangingNodeRefiner_MultiGrid Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ParallelHangingNodeRefiner_MultiGrid ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>HangingNodeRefiner_MultiGrid Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>HangingNodeRefiner_MultiGrid ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited HangingNodeRefiner_MultiGrid Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign_grid (<a href="MultiGrid.html">MultiGrid</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IRefiner Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_marks ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>coarsen ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>refine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>save_marks_to_file (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_adjusted_marks_debug_filename (c_string )</td></tr><tr><td><br></td></tr></table>
constructor
ParallelHangingNodeRefiner_MultiGrid

ParallelHangingNodeRefiner_MultiGrid ()
ParallelHangingNodeRefiner_MultiGrid ()<br>Constructor of class <b>ParallelHangingNodeRefiner_MultiGrid</b><br>group: <b>/ug4/Grid</b>
;
class
PartialUpwind1d
IConvectionShapes1d 
Group <b>PartialUpwind</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IConvectionShapes1d.html">IConvectionShapes1d</a> <a href="PartialUpwind1d.html">PartialUpwind1d</a> <br><table><tr><td colspan=2><h3>PartialUpwind1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>PartialUpwind1d ()</td></tr><tr><td><br></td></tr></table>
constructor
PartialUpwind1d

PartialUpwind1d ()
PartialUpwind1d ()<br>Constructor of class <b>PartialUpwind1d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
PartialUpwind2d
IConvectionShapes2d 
Group <b>PartialUpwind</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IConvectionShapes2d.html">IConvectionShapes2d</a> <a href="PartialUpwind2d.html">PartialUpwind2d</a> <br><table><tr><td colspan=2><h3>PartialUpwind2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>PartialUpwind2d ()</td></tr><tr><td><br></td></tr></table>
constructor
PartialUpwind2d

PartialUpwind2d ()
PartialUpwind2d ()<br>Constructor of class <b>PartialUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
PartialUpwind3d
IConvectionShapes3d 
Group <b>PartialUpwind</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IConvectionShapes3d.html">IConvectionShapes3d</a> <a href="PartialUpwind3d.html">PartialUpwind3d</a> <br><table><tr><td colspan=2><h3>PartialUpwind3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>PartialUpwind3d ()</td></tr><tr><td><br></td></tr></table>
constructor
PartialUpwind3d

PartialUpwind3d ()
PartialUpwind3d ()<br>Constructor of class <b>PartialUpwind3d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
PartitionMap

class has constructor. <br><table><tr><td colspan=2><h3>PartitionMap Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>PartitionMap ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>PartitionMap Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_target_proc (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_target_procs (integer , integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top><a href="SubsetHandler.html">SubsetHandler</a> *</td><td class="memItemRight" valign=bottom>get_partition_handler ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_target_proc (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_target_procs ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>shift_target_procs (integer )</td></tr><tr><td><br></td></tr></table>
constructor
PartitionMap

PartitionMap ()
PartitionMap ()<br>Constructor of class <b>PartitionMap</b><br>group: <b>/ug4/Grid</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>PartitionMap</b><br>group: <b>/ug4/Grid</b>
memberfunction
get_partition_handler
SubsetHandler*
SubsetHandlerget_partition_handler ()
<a href="SubsetHandler.html">SubsetHandler</a> *get_partition_handler ()<br><br>Member function of class <b>PartitionMap</b><br>group: <b>/ug4/Grid</b>
memberfunction
add_target_proc
void
void add_target_proc (integer )
void add_target_proc (integer )<br><br>Member function of class <b>PartitionMap</b><br>group: <b>/ug4/Grid</b>
memberfunction
add_target_procs
void
void add_target_procs (integer , integer )
void add_target_procs (integer , integer )<br><br>Member function of class <b>PartitionMap</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_target_procs
integer
integer num_target_procs ()
integer num_target_procs ()<br><br>Member function of class <b>PartitionMap</b><br>group: <b>/ug4/Grid</b>
memberfunction
get_target_proc
integer
integer get_target_proc (integer )
integer get_target_proc (integer )<br><br>Member function of class <b>PartitionMap</b><br>group: <b>/ug4/Grid</b>
memberfunction
shift_target_procs
void
void shift_target_procs (integer )
void shift_target_procs (integer )<br><br>Member function of class <b>PartitionMap</b><br>group: <b>/ug4/Grid</b>
;
class
RSAMGPreconditionerCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 AMGBaseCPU1 
Group <b>RSAMGPreconditioner</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Ruge-Stueben Algebraic Multigrid Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="AMGBaseCPU1.html">AMGBaseCPU1</a> <a href="RSAMGPreconditionerCPU1.html">RSAMGPreconditionerCPU1</a> <br><table><tr><td colspan=2><h3>RSAMGPreconditionerCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>RSAMGPreconditionerCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>RSAMGPreconditionerCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>disable_aggressive_coarsening ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: disables aggressive coarsening<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>enable_aggressive_coarsening_A (integer nrOfPaths)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: enables aggressive coarsening (A1 or A2) on the first level.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_epsilon_strong (number epsilon_str)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets epsilon_strong, a measure for strong connectivity<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation_truncation (number prolongation_tr)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the truncation of interpolation<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>RSAMGPreconditionerCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_epsilon_strong ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns epsilon_strong<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_prolongation_truncation ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns prolongation_tr<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>is_aggressive_coarsening ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>is_aggressive_coarsening_A (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>tostring ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited AMGBaseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check2 (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_fsmoothing ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y_cycle (integer , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; basesmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_checkLevel_post_iterations (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer gamma)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_fsmoothing (bool enable)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix_write_path (c_string matrixWritePath)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: set the path where connectionviewer matrices of the levels are written<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_fill_before_base (number fillrate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_levels (integer max_levels)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_nodes_for_base (integer maxNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_min_nodes_on_one_processor (integer minNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_nr_of_preiterations_at_check (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: nr of mg cycles performed before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer nu2)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer nu1)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_one_init (bool b)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; postsmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preiterations_mimum_defect_at_check (number d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: minimum defect for preiterations before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; presmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_interfaces ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited AMGBaseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_cycle_type ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>get_fsmoothing ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns f smoothing enabled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_grid_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns grid complexity c_G<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="AMGLevelInformationCPU1.html">AMGLevelInformationCPU1</a> *</td><td class="memItemRight" valign=bottom>get_level_information (integer L)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns information about the level L<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_max_fill_before_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_nodes_for_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_min_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns minNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_postsmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_presmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_operator_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns operator complexity c_A<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_preferred_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns preferredNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_coarse_solver_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent in the coarse solver setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_whole_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent on the whole setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_used_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns used nr of AMG levels<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
RSAMGPreconditionerCPU1

RSAMGPreconditionerCPU1 ()
RSAMGPreconditionerCPU1 ()<br>Constructor of class <b>RSAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_epsilon_strong
void
void set_epsilon_strong (number epsilon_str)
void set_epsilon_strong (number epsilon_str)<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>tooltip: sets epsilon_strong, a measure for strong connectivity<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_prolongation_truncation
void
void set_prolongation_truncation (number prolongation_tr)
void set_prolongation_truncation (number prolongation_tr)<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>tooltip: sets the truncation of interpolation<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
enable_aggressive_coarsening_A
void
void enable_aggressive_coarsening_A (integer nrOfPaths)
void enable_aggressive_coarsening_A (integer nrOfPaths)<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>tooltip: enables aggressive coarsening (A1 or A2) on the first level.<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
disable_aggressive_coarsening
void
void disable_aggressive_coarsening ()
void disable_aggressive_coarsening ()<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>tooltip: disables aggressive coarsening<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_parallel_coarsening
void
void set_parallel_coarsening (IParallelCoarsening)
void set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *)<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_epsilon_strong
number
number get_epsilon_strong () const
number get_epsilon_strong ()<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>returns epsilon_strong<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_prolongation_truncation
number
number get_prolongation_truncation () const
number get_prolongation_truncation ()<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>returns prolongation_tr<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
tostring
void
void tostring () const
void tostring ()<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
is_aggressive_coarsening
bool
bool is_aggressive_coarsening () const
bool is_aggressive_coarsening ()<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
is_aggressive_coarsening_A
bool
bool is_aggressive_coarsening_A (integer ) const
bool is_aggressive_coarsening_A (integer )<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
Rho1d
IUserData UserNumber1d DependentUserDataNumber1d DataLinkerNumber1d 
Group <b>Rho</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <a href="DataLinkerNumber1d.html">DataLinkerNumber1d</a> <a href="Rho1d.html">Rho1d</a> <br><table><tr><td colspan=2><h3>Rho1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Rho1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Rho1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega_1 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega_1 (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_1 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_1 (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_2 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_2 (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Rho1d

Rho1d ()
Rho1d ()<br>Constructor of class <b>Rho1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_1
void
void set_rho_1 (number )
void set_rho_1 (number )<br><br>Member function of class <b>Rho1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_1
void
void set_rho_1 (SmartPtr<UserNumber1d> )
void set_rho_1 (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Rho1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_2
void
void set_rho_2 (number )
void set_rho_2 (number )<br><br>Member function of class <b>Rho1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_2
void
void set_rho_2 (SmartPtr<UserNumber1d> )
void set_rho_2 (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Rho1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega_1
void
void set_omega_1 (number )
void set_omega_1 (number )<br><br>Member function of class <b>Rho1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega_1
void
void set_omega_1 (SmartPtr<UserNumber1d> )
void set_omega_1 (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Rho1d</b><br>group: <b>ug4//Biogas</b>
;
class
Rho2d
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Group <b>Rho</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="Rho2d.html">Rho2d</a> <br><table><tr><td colspan=2><h3>Rho2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Rho2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Rho2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega_1 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega_1 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_1 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_1 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_2 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_2 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Rho2d

Rho2d ()
Rho2d ()<br>Constructor of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_1
void
void set_rho_1 (number )
void set_rho_1 (number )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_1
void
void set_rho_1 (SmartPtr<UserNumber2d> )
void set_rho_1 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_2
void
void set_rho_2 (number )
void set_rho_2 (number )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_2
void
void set_rho_2 (SmartPtr<UserNumber2d> )
void set_rho_2 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega_1
void
void set_omega_1 (number )
void set_omega_1 (number )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega_1
void
void set_omega_1 (SmartPtr<UserNumber2d> )
void set_omega_1 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
;
class
Rho3d
IUserData UserNumber3d DependentUserDataNumber3d DataLinkerNumber3d 
Group <b>Rho</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <a href="DataLinkerNumber3d.html">DataLinkerNumber3d</a> <a href="Rho3d.html">Rho3d</a> <br><table><tr><td colspan=2><h3>Rho3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Rho3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Rho3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega_1 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega_1 (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_1 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_1 (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_2 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_2 (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Rho3d

Rho3d ()
Rho3d ()<br>Constructor of class <b>Rho3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_1
void
void set_rho_1 (number )
void set_rho_1 (number )<br><br>Member function of class <b>Rho3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_1
void
void set_rho_1 (SmartPtr<UserNumber3d> )
void set_rho_1 (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Rho3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_2
void
void set_rho_2 (number )
void set_rho_2 (number )<br><br>Member function of class <b>Rho3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_2
void
void set_rho_2 (SmartPtr<UserNumber3d> )
void set_rho_2 (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Rho3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega_1
void
void set_omega_1 (number )
void set_omega_1 (number )<br><br>Member function of class <b>Rho3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega_1
void
void set_omega_1 (SmartPtr<UserNumber3d> )
void set_omega_1 (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Rho3d</b><br>group: <b>ug4//Biogas</b>
;
class
ScaleAddLinkerMatrix1d
IUserData UserMatrix1d DependentUserDataMatrix1d DataLinkerMatrix1d 
Group <b>ScaleAddLinkerMatrix</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix1d.html">UserMatrix1d</a> <a href="DependentUserDataMatrix1d.html">DependentUserDataMatrix1d</a> <a href="DataLinkerMatrix1d.html">DataLinkerMatrix1d</a> <a href="ScaleAddLinkerMatrix1d.html">ScaleAddLinkerMatrix1d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerMatrix1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerMatrix1d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerMatrix1d (const <a href="ScaleAddLinkerMatrix1d.html">ScaleAddLinkerMatrix1d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerMatrix1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserMatrix1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerMatrix1d

ScaleAddLinkerMatrix1d ()
ScaleAddLinkerMatrix1d ()<br>Constructor of class <b>ScaleAddLinkerMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerMatrix1d

ScaleAddLinkerMatrix1d (const ScaleAddLinkerMatrix1d)
ScaleAddLinkerMatrix1d (const <a href="ScaleAddLinkerMatrix1d.html">ScaleAddLinkerMatrix1d</a> *)<br>Constructor of class <b>ScaleAddLinkerMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> , SmartPtr<UserMatrix1d> )
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserMatrix1d> )
void add (number , SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> , number )
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerMatrix2d
IUserData UserMatrix2d DependentUserDataMatrix2d DataLinkerMatrix2d 
Group <b>ScaleAddLinkerMatrix</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix2d.html">UserMatrix2d</a> <a href="DependentUserDataMatrix2d.html">DependentUserDataMatrix2d</a> <a href="DataLinkerMatrix2d.html">DataLinkerMatrix2d</a> <a href="ScaleAddLinkerMatrix2d.html">ScaleAddLinkerMatrix2d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerMatrix2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerMatrix2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerMatrix2d (const <a href="ScaleAddLinkerMatrix2d.html">ScaleAddLinkerMatrix2d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerMatrix2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerMatrix2d

ScaleAddLinkerMatrix2d ()
ScaleAddLinkerMatrix2d ()<br>Constructor of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerMatrix2d

ScaleAddLinkerMatrix2d (const ScaleAddLinkerMatrix2d)
ScaleAddLinkerMatrix2d (const <a href="ScaleAddLinkerMatrix2d.html">ScaleAddLinkerMatrix2d</a> *)<br>Constructor of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , SmartPtr<UserMatrix2d> )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserMatrix2d> )
void add (number , SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , number )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerMatrix3d
IUserData UserMatrix3d DependentUserDataMatrix3d DataLinkerMatrix3d 
Group <b>ScaleAddLinkerMatrix</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix3d.html">UserMatrix3d</a> <a href="DependentUserDataMatrix3d.html">DependentUserDataMatrix3d</a> <a href="DataLinkerMatrix3d.html">DataLinkerMatrix3d</a> <a href="ScaleAddLinkerMatrix3d.html">ScaleAddLinkerMatrix3d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerMatrix3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerMatrix3d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerMatrix3d (const <a href="ScaleAddLinkerMatrix3d.html">ScaleAddLinkerMatrix3d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerMatrix3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserMatrix3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerMatrix3d

ScaleAddLinkerMatrix3d ()
ScaleAddLinkerMatrix3d ()<br>Constructor of class <b>ScaleAddLinkerMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerMatrix3d

ScaleAddLinkerMatrix3d (const ScaleAddLinkerMatrix3d)
ScaleAddLinkerMatrix3d (const <a href="ScaleAddLinkerMatrix3d.html">ScaleAddLinkerMatrix3d</a> *)<br>Constructor of class <b>ScaleAddLinkerMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> , SmartPtr<UserMatrix3d> )
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserMatrix3d> )
void add (number , SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> , number )
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerNumber1d
IUserData UserNumber1d DependentUserDataNumber1d DataLinkerNumber1d 
Group <b>ScaleAddLinkerNumber</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <a href="DataLinkerNumber1d.html">DataLinkerNumber1d</a> <a href="ScaleAddLinkerNumber1d.html">ScaleAddLinkerNumber1d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerNumber1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerNumber1d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerNumber1d (const <a href="ScaleAddLinkerNumber1d.html">ScaleAddLinkerNumber1d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerNumber1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerNumber1d

ScaleAddLinkerNumber1d ()
ScaleAddLinkerNumber1d ()<br>Constructor of class <b>ScaleAddLinkerNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerNumber1d

ScaleAddLinkerNumber1d (const ScaleAddLinkerNumber1d)
ScaleAddLinkerNumber1d (const <a href="ScaleAddLinkerNumber1d.html">ScaleAddLinkerNumber1d</a> *)<br>Constructor of class <b>ScaleAddLinkerNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> , SmartPtr<UserNumber1d> )
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserNumber1d> )
void add (number , SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> , number )
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerNumber2d
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Group <b>ScaleAddLinkerNumber</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="ScaleAddLinkerNumber2d.html">ScaleAddLinkerNumber2d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerNumber2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerNumber2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerNumber2d (const <a href="ScaleAddLinkerNumber2d.html">ScaleAddLinkerNumber2d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerNumber2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerNumber2d

ScaleAddLinkerNumber2d ()
ScaleAddLinkerNumber2d ()<br>Constructor of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerNumber2d

ScaleAddLinkerNumber2d (const ScaleAddLinkerNumber2d)
ScaleAddLinkerNumber2d (const <a href="ScaleAddLinkerNumber2d.html">ScaleAddLinkerNumber2d</a> *)<br>Constructor of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , SmartPtr<UserNumber2d> )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserNumber2d> )
void add (number , SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , number )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerNumber3d
IUserData UserNumber3d DependentUserDataNumber3d DataLinkerNumber3d 
Group <b>ScaleAddLinkerNumber</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <a href="DataLinkerNumber3d.html">DataLinkerNumber3d</a> <a href="ScaleAddLinkerNumber3d.html">ScaleAddLinkerNumber3d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerNumber3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerNumber3d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerNumber3d (const <a href="ScaleAddLinkerNumber3d.html">ScaleAddLinkerNumber3d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerNumber3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerNumber3d

ScaleAddLinkerNumber3d ()
ScaleAddLinkerNumber3d ()<br>Constructor of class <b>ScaleAddLinkerNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerNumber3d

ScaleAddLinkerNumber3d (const ScaleAddLinkerNumber3d)
ScaleAddLinkerNumber3d (const <a href="ScaleAddLinkerNumber3d.html">ScaleAddLinkerNumber3d</a> *)<br>Constructor of class <b>ScaleAddLinkerNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> , SmartPtr<UserNumber3d> )
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserNumber3d> )
void add (number , SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> , number )
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerTensor41d
IUserData UserTensor41d DependentUserDataTensor41d DataLinkerTensor41d 
Group <b>ScaleAddLinkerTensor4</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor41d.html">UserTensor41d</a> <a href="DependentUserDataTensor41d.html">DependentUserDataTensor41d</a> <a href="DataLinkerTensor41d.html">DataLinkerTensor41d</a> <a href="ScaleAddLinkerTensor41d.html">ScaleAddLinkerTensor41d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerTensor41d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerTensor41d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerTensor41d (const <a href="ScaleAddLinkerTensor41d.html">ScaleAddLinkerTensor41d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerTensor41d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserTensor41d.html">UserTensor41d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserTensor41d.html">UserTensor41d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserTensor41d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerTensor41d

ScaleAddLinkerTensor41d ()
ScaleAddLinkerTensor41d ()<br>Constructor of class <b>ScaleAddLinkerTensor41d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerTensor41d

ScaleAddLinkerTensor41d (const ScaleAddLinkerTensor41d)
ScaleAddLinkerTensor41d (const <a href="ScaleAddLinkerTensor41d.html">ScaleAddLinkerTensor41d</a> *)<br>Constructor of class <b>ScaleAddLinkerTensor41d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> , SmartPtr<UserTensor41d> )
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserTensor41d.html">UserTensor41d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerTensor41d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserTensor41d> )
void add (number , SmartPtr&lt;<a href="UserTensor41d.html">UserTensor41d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerTensor41d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> , number )
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerTensor41d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerTensor41d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerTensor42d
IUserData UserTensor42d DependentUserDataTensor42d DataLinkerTensor42d 
Group <b>ScaleAddLinkerTensor4</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor42d.html">UserTensor42d</a> <a href="DependentUserDataTensor42d.html">DependentUserDataTensor42d</a> <a href="DataLinkerTensor42d.html">DataLinkerTensor42d</a> <a href="ScaleAddLinkerTensor42d.html">ScaleAddLinkerTensor42d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerTensor42d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerTensor42d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerTensor42d (const <a href="ScaleAddLinkerTensor42d.html">ScaleAddLinkerTensor42d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerTensor42d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserTensor42d.html">UserTensor42d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserTensor42d.html">UserTensor42d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserTensor42d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerTensor42d

ScaleAddLinkerTensor42d ()
ScaleAddLinkerTensor42d ()<br>Constructor of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerTensor42d

ScaleAddLinkerTensor42d (const ScaleAddLinkerTensor42d)
ScaleAddLinkerTensor42d (const <a href="ScaleAddLinkerTensor42d.html">ScaleAddLinkerTensor42d</a> *)<br>Constructor of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , SmartPtr<UserTensor42d> )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserTensor42d.html">UserTensor42d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserTensor42d> )
void add (number , SmartPtr&lt;<a href="UserTensor42d.html">UserTensor42d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , number )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerTensor43d
IUserData UserTensor43d DependentUserDataTensor43d DataLinkerTensor43d 
Group <b>ScaleAddLinkerTensor4</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor43d.html">UserTensor43d</a> <a href="DependentUserDataTensor43d.html">DependentUserDataTensor43d</a> <a href="DataLinkerTensor43d.html">DataLinkerTensor43d</a> <a href="ScaleAddLinkerTensor43d.html">ScaleAddLinkerTensor43d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerTensor43d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerTensor43d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerTensor43d (const <a href="ScaleAddLinkerTensor43d.html">ScaleAddLinkerTensor43d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerTensor43d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserTensor43d.html">UserTensor43d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserTensor43d.html">UserTensor43d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserTensor43d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerTensor43d

ScaleAddLinkerTensor43d ()
ScaleAddLinkerTensor43d ()<br>Constructor of class <b>ScaleAddLinkerTensor43d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerTensor43d

ScaleAddLinkerTensor43d (const ScaleAddLinkerTensor43d)
ScaleAddLinkerTensor43d (const <a href="ScaleAddLinkerTensor43d.html">ScaleAddLinkerTensor43d</a> *)<br>Constructor of class <b>ScaleAddLinkerTensor43d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> , SmartPtr<UserTensor43d> )
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserTensor43d.html">UserTensor43d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerTensor43d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserTensor43d> )
void add (number , SmartPtr&lt;<a href="UserTensor43d.html">UserTensor43d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerTensor43d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> , number )
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerTensor43d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerTensor43d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerVector1d
IUserData UserVector1d DependentUserDataVector1d DataLinkerVector1d 
Group <b>ScaleAddLinkerVector</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <a href="DependentUserDataVector1d.html">DependentUserDataVector1d</a> <a href="DataLinkerVector1d.html">DataLinkerVector1d</a> <a href="ScaleAddLinkerVector1d.html">ScaleAddLinkerVector1d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerVector1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerVector1d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerVector1d (const <a href="ScaleAddLinkerVector1d.html">ScaleAddLinkerVector1d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerVector1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerVector1d

ScaleAddLinkerVector1d ()
ScaleAddLinkerVector1d ()<br>Constructor of class <b>ScaleAddLinkerVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerVector1d

ScaleAddLinkerVector1d (const ScaleAddLinkerVector1d)
ScaleAddLinkerVector1d (const <a href="ScaleAddLinkerVector1d.html">ScaleAddLinkerVector1d</a> *)<br>Constructor of class <b>ScaleAddLinkerVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> , SmartPtr<UserVector1d> )
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserVector1d> )
void add (number , SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber1d> , number )
void add (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerVector2d
IUserData UserVector2d DependentUserDataVector2d DataLinkerVector2d 
Group <b>ScaleAddLinkerVector</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="DependentUserDataVector2d.html">DependentUserDataVector2d</a> <a href="DataLinkerVector2d.html">DataLinkerVector2d</a> <a href="ScaleAddLinkerVector2d.html">ScaleAddLinkerVector2d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerVector2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerVector2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerVector2d (const <a href="ScaleAddLinkerVector2d.html">ScaleAddLinkerVector2d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerVector2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerVector2d

ScaleAddLinkerVector2d ()
ScaleAddLinkerVector2d ()<br>Constructor of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerVector2d

ScaleAddLinkerVector2d (const ScaleAddLinkerVector2d)
ScaleAddLinkerVector2d (const <a href="ScaleAddLinkerVector2d.html">ScaleAddLinkerVector2d</a> *)<br>Constructor of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , SmartPtr<UserVector2d> )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserVector2d> )
void add (number , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , number )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ScaleAddLinkerVector3d
IUserData UserVector3d DependentUserDataVector3d DataLinkerVector3d 
Group <b>ScaleAddLinkerVector</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <a href="DependentUserDataVector3d.html">DependentUserDataVector3d</a> <a href="DataLinkerVector3d.html">DataLinkerVector3d</a> <a href="ScaleAddLinkerVector3d.html">ScaleAddLinkerVector3d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerVector3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerVector3d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerVector3d (const <a href="ScaleAddLinkerVector3d.html">ScaleAddLinkerVector3d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerVector3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerVector3d

ScaleAddLinkerVector3d ()
ScaleAddLinkerVector3d ()<br>Constructor of class <b>ScaleAddLinkerVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerVector3d

ScaleAddLinkerVector3d (const ScaleAddLinkerVector3d)
ScaleAddLinkerVector3d (const <a href="ScaleAddLinkerVector3d.html">ScaleAddLinkerVector3d</a> *)<br>Constructor of class <b>ScaleAddLinkerVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> , SmartPtr<UserVector3d> )
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserVector3d> )
void add (number , SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber3d> , number )
void add (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
Selector
ISelector 
class has constructor. <br>Inheritance: <a href="ISelector.html">ISelector</a> <a href="Selector.html">Selector</a> <br><table><tr><td colspan=2><h3>Selector Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Selector (<a href="Grid.html">Grid</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Selector Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_edges ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_faces ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_hexahedrons ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prisms ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_pyramids ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_quadrilaterals ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_tetrahedrons ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_triangles ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_vertices ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_volumes ()</td></tr><tr><td><br></td></tr></table>
constructor
Selector

Selector (Grid)
Selector (<a href="Grid.html">Grid</a> *)<br>Constructor of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_vertices
integer
integer num_vertices () const
integer num_vertices ()<br><br>Member function of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_edges
integer
integer num_edges () const
integer num_edges ()<br><br>Member function of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_faces
integer
integer num_faces () const
integer num_faces ()<br><br>Member function of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_triangles
integer
integer num_triangles () const
integer num_triangles ()<br><br>Member function of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_quadrilaterals
integer
integer num_quadrilaterals () const
integer num_quadrilaterals ()<br><br>Member function of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_volumes
integer
integer num_volumes () const
integer num_volumes ()<br><br>Member function of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_tetrahedrons
integer
integer num_tetrahedrons () const
integer num_tetrahedrons ()<br><br>Member function of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_pyramids
integer
integer num_pyramids () const
integer num_pyramids ()<br><br>Member function of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_prisms
integer
integer num_prisms () const
integer num_prisms ()<br><br>Member function of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_hexahedrons
integer
integer num_hexahedrons () const
integer num_hexahedrons ()<br><br>Member function of class <b>Selector</b><br>group: <b>/ug4/Grid</b>
;
class
SolutionTimeSeriesCPU1

Group <b>SolutionTimeSeries</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br><table><tr><td colspan=2><h3>SolutionTimeSeriesCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SolutionTimeSeriesCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>SolutionTimeSeriesCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>latest ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns latest solution<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>oldest ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns oldest solution<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>push (SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; vec, number time)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: adds new time point, not discarding the oldest<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>push_discard_oldest (SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; vec, number time)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns oldest solution<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: adds new time point, oldest solution is discarded and returned<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>SolutionTimeSeriesCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of time steps handled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>solution (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the local vector for the i'th time point<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>time (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns point in time for solution<br/></td></tr><tr><td><br></td></tr></table>
constructor
SolutionTimeSeriesCPU1

SolutionTimeSeriesCPU1 ()
SolutionTimeSeriesCPU1 ()<br>Constructor of class <b>SolutionTimeSeriesCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
push_discard_oldest
SmartPtr<VectorCPU1>
SmartPtr<VectorCPU1> push_discard_oldest (SmartPtr<VectorCPU1> vec, number time)
SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; push_discard_oldest (SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; vec, number time)<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns oldest solution<br>tooltip: adds new time point, oldest solution is discarded and returned<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
push
void
void push (SmartPtr<VectorCPU1> vec, number time)
void push (SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; vec, number time)<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>tooltip: adds new time point, not discarding the oldest<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
oldest
SmartPtr<VectorCPU1>
SmartPtr<VectorCPU1> oldest ()
SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; oldest ()<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns oldest solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
latest
SmartPtr<VectorCPU1>
SmartPtr<VectorCPU1> latest ()
SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; latest ()<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns latest solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
size
integer
integer size () const
integer size ()<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns number of time steps handled<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
solution
ConstSmartPtr<VectorCPU1>
const SmartPtr<VectorCPU1> solution (integer i) const
const SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; solution (integer i)<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns the local vector for the i'th time point<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
time
number
number time (integer i) const
number time (integer i)<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns point in time for solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
SolutionTimeSeriesCPU2

Group <b>SolutionTimeSeries</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br><table><tr><td colspan=2><h3>SolutionTimeSeriesCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SolutionTimeSeriesCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>SolutionTimeSeriesCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>latest ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns latest solution<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>oldest ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns oldest solution<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>push (SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; vec, number time)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: adds new time point, not discarding the oldest<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>push_discard_oldest (SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; vec, number time)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns oldest solution<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: adds new time point, oldest solution is discarded and returned<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>SolutionTimeSeriesCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of time steps handled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>solution (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the local vector for the i'th time point<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>time (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns point in time for solution<br/></td></tr><tr><td><br></td></tr></table>
constructor
SolutionTimeSeriesCPU2

SolutionTimeSeriesCPU2 ()
SolutionTimeSeriesCPU2 ()<br>Constructor of class <b>SolutionTimeSeriesCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
push_discard_oldest
SmartPtr<VectorCPU2>
SmartPtr<VectorCPU2> push_discard_oldest (SmartPtr<VectorCPU2> vec, number time)
SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; push_discard_oldest (SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; vec, number time)<br><br>Member function of class <b>SolutionTimeSeriesCPU2</b><br>returns oldest solution<br>tooltip: adds new time point, oldest solution is discarded and returned<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
push
void
void push (SmartPtr<VectorCPU2> vec, number time)
void push (SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; vec, number time)<br><br>Member function of class <b>SolutionTimeSeriesCPU2</b><br>tooltip: adds new time point, not discarding the oldest<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
oldest
SmartPtr<VectorCPU2>
SmartPtr<VectorCPU2> oldest ()
SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; oldest ()<br><br>Member function of class <b>SolutionTimeSeriesCPU2</b><br>returns oldest solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
latest
SmartPtr<VectorCPU2>
SmartPtr<VectorCPU2> latest ()
SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; latest ()<br><br>Member function of class <b>SolutionTimeSeriesCPU2</b><br>returns latest solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
size
integer
integer size () const
integer size ()<br><br>Member function of class <b>SolutionTimeSeriesCPU2</b><br>returns number of time steps handled<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
solution
ConstSmartPtr<VectorCPU2>
const SmartPtr<VectorCPU2> solution (integer i) const
const SmartPtr&lt;<a href="VectorCPU2.html">VectorCPU2</a>&gt; solution (integer i)<br><br>Member function of class <b>SolutionTimeSeriesCPU2</b><br>returns the local vector for the i'th time point<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
time
number
number time (integer i) const
number time (integer i)<br><br>Member function of class <b>SolutionTimeSeriesCPU2</b><br>returns point in time for solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
SolutionTimeSeriesCPU3

Group <b>SolutionTimeSeries</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br><table><tr><td colspan=2><h3>SolutionTimeSeriesCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SolutionTimeSeriesCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>SolutionTimeSeriesCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>latest ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns latest solution<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>oldest ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns oldest solution<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>push (SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; vec, number time)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: adds new time point, not discarding the oldest<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>push_discard_oldest (SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; vec, number time)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns oldest solution<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: adds new time point, oldest solution is discarded and returned<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>SolutionTimeSeriesCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of time steps handled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>solution (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the local vector for the i'th time point<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>time (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns point in time for solution<br/></td></tr><tr><td><br></td></tr></table>
constructor
SolutionTimeSeriesCPU3

SolutionTimeSeriesCPU3 ()
SolutionTimeSeriesCPU3 ()<br>Constructor of class <b>SolutionTimeSeriesCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
push_discard_oldest
SmartPtr<VectorCPU3>
SmartPtr<VectorCPU3> push_discard_oldest (SmartPtr<VectorCPU3> vec, number time)
SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; push_discard_oldest (SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; vec, number time)<br><br>Member function of class <b>SolutionTimeSeriesCPU3</b><br>returns oldest solution<br>tooltip: adds new time point, oldest solution is discarded and returned<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
push
void
void push (SmartPtr<VectorCPU3> vec, number time)
void push (SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; vec, number time)<br><br>Member function of class <b>SolutionTimeSeriesCPU3</b><br>tooltip: adds new time point, not discarding the oldest<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
oldest
SmartPtr<VectorCPU3>
SmartPtr<VectorCPU3> oldest ()
SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; oldest ()<br><br>Member function of class <b>SolutionTimeSeriesCPU3</b><br>returns oldest solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
latest
SmartPtr<VectorCPU3>
SmartPtr<VectorCPU3> latest ()
SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; latest ()<br><br>Member function of class <b>SolutionTimeSeriesCPU3</b><br>returns latest solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
size
integer
integer size () const
integer size ()<br><br>Member function of class <b>SolutionTimeSeriesCPU3</b><br>returns number of time steps handled<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
solution
ConstSmartPtr<VectorCPU3>
const SmartPtr<VectorCPU3> solution (integer i) const
const SmartPtr&lt;<a href="VectorCPU3.html">VectorCPU3</a>&gt; solution (integer i)<br><br>Member function of class <b>SolutionTimeSeriesCPU3</b><br>returns the local vector for the i'th time point<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
time
number
number time (integer i) const
number time (integer i)<br><br>Member function of class <b>SolutionTimeSeriesCPU3</b><br>returns point in time for solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
StandardDomainDecompositionInfo
IDomainDecompositionInfo 
class has constructor. <br>Inheritance: <a href="IDomainDecompositionInfo.html">IDomainDecompositionInfo</a> <a href="StandardDomainDecompositionInfo.html">StandardDomainDecompositionInfo</a> <br><table><tr><td colspan=2><h3>StandardDomainDecompositionInfo Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StandardDomainDecompositionInfo ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StandardDomainDecompositionInfo Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_subdomains (integer )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StandardDomainDecompositionInfo Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_subdomains ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>map_proc_id_to_subdomain_id (integer )</td></tr><tr><td><br></td></tr></table>
constructor
StandardDomainDecompositionInfo

StandardDomainDecompositionInfo ()
StandardDomainDecompositionInfo ()<br>Constructor of class <b>StandardDomainDecompositionInfo</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_num_subdomains
void
void set_num_subdomains (integer )
void set_num_subdomains (integer )<br><br>Member function of class <b>StandardDomainDecompositionInfo</b><br>group: <b>/ug4/Discretization</b>
memberfunction
map_proc_id_to_subdomain_id
integer
integer map_proc_id_to_subdomain_id (integer ) const
integer map_proc_id_to_subdomain_id (integer )<br><br>Member function of class <b>StandardDomainDecompositionInfo</b><br>group: <b>/ug4/Discretization</b>
memberfunction
get_num_subdomains
integer
integer get_num_subdomains () const
integer get_num_subdomains ()<br><br>Member function of class <b>StandardDomainDecompositionInfo</b><br>group: <b>/ug4/Discretization</b>
;
class
StandardLineSearchCPU1
ILineSearchCPU1 
Group <b>StandardLineSearch</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="ILineSearchCPU1.html">ILineSearchCPU1</a> <a href="StandardLineSearchCPU1.html">StandardLineSearchCPU1</a> <br><table><tr><td colspan=2><h3>StandardLineSearchCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StandardLineSearchCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StandardLineSearchCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_accept_best (bool bAcceptBest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_lambda_start (number start)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_defect (number maxDef)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_offset (std_string strOffset)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduce_factor (number factor)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool verboseLevel)</td></tr><tr><td><br></td></tr></table>
constructor
StandardLineSearchCPU1

StandardLineSearchCPU1 ()
StandardLineSearchCPU1 ()<br>Constructor of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer steps)
void set_maximum_steps (integer steps)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_lambda_start
void
void set_lambda_start (number start)
void set_lambda_start (number start)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_reduce_factor
void
void set_reduce_factor (number factor)
void set_reduce_factor (number factor)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_accept_best
void
void set_accept_best (bool bAcceptBest)
void set_accept_best (bool bAcceptBest)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_maximum_defect
void
void set_maximum_defect (number maxDef)
void set_maximum_defect (number maxDef)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_verbose
void
void set_verbose (bool verboseLevel)
void set_verbose (bool verboseLevel)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_offset
void
void set_offset (std_string strOffset)
void set_offset (std_string strOffset)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
StandardLineSearchCPU2
ILineSearchCPU2 
Group <b>StandardLineSearch</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="ILineSearchCPU2.html">ILineSearchCPU2</a> <a href="StandardLineSearchCPU2.html">StandardLineSearchCPU2</a> <br><table><tr><td colspan=2><h3>StandardLineSearchCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StandardLineSearchCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StandardLineSearchCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_accept_best (bool bAcceptBest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_lambda_start (number start)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_defect (number maxDef)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_offset (std_string strOffset)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduce_factor (number factor)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool verboseLevel)</td></tr><tr><td><br></td></tr></table>
constructor
StandardLineSearchCPU2

StandardLineSearchCPU2 ()
StandardLineSearchCPU2 ()<br>Constructor of class <b>StandardLineSearchCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer steps)
void set_maximum_steps (integer steps)<br><br>Member function of class <b>StandardLineSearchCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_lambda_start
void
void set_lambda_start (number start)
void set_lambda_start (number start)<br><br>Member function of class <b>StandardLineSearchCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_reduce_factor
void
void set_reduce_factor (number factor)
void set_reduce_factor (number factor)<br><br>Member function of class <b>StandardLineSearchCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_accept_best
void
void set_accept_best (bool bAcceptBest)
void set_accept_best (bool bAcceptBest)<br><br>Member function of class <b>StandardLineSearchCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_maximum_defect
void
void set_maximum_defect (number maxDef)
void set_maximum_defect (number maxDef)<br><br>Member function of class <b>StandardLineSearchCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_verbose
void
void set_verbose (bool verboseLevel)
void set_verbose (bool verboseLevel)<br><br>Member function of class <b>StandardLineSearchCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_offset
void
void set_offset (std_string strOffset)
void set_offset (std_string strOffset)<br><br>Member function of class <b>StandardLineSearchCPU2</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
StandardLineSearchCPU3
ILineSearchCPU3 
Group <b>StandardLineSearch</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="ILineSearchCPU3.html">ILineSearchCPU3</a> <a href="StandardLineSearchCPU3.html">StandardLineSearchCPU3</a> <br><table><tr><td colspan=2><h3>StandardLineSearchCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StandardLineSearchCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StandardLineSearchCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_accept_best (bool bAcceptBest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_lambda_start (number start)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_defect (number maxDef)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_offset (std_string strOffset)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduce_factor (number factor)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool verboseLevel)</td></tr><tr><td><br></td></tr></table>
constructor
StandardLineSearchCPU3

StandardLineSearchCPU3 ()
StandardLineSearchCPU3 ()<br>Constructor of class <b>StandardLineSearchCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer steps)
void set_maximum_steps (integer steps)<br><br>Member function of class <b>StandardLineSearchCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_lambda_start
void
void set_lambda_start (number start)
void set_lambda_start (number start)<br><br>Member function of class <b>StandardLineSearchCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_reduce_factor
void
void set_reduce_factor (number factor)
void set_reduce_factor (number factor)<br><br>Member function of class <b>StandardLineSearchCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_accept_best
void
void set_accept_best (bool bAcceptBest)
void set_accept_best (bool bAcceptBest)<br><br>Member function of class <b>StandardLineSearchCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_maximum_defect
void
void set_maximum_defect (number maxDef)
void set_maximum_defect (number maxDef)<br><br>Member function of class <b>StandardLineSearchCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_verbose
void
void set_verbose (bool verboseLevel)
void set_verbose (bool verboseLevel)<br><br>Member function of class <b>StandardLineSearchCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_offset
void
void set_offset (std_string strOffset)
void set_offset (std_string strOffset)<br><br>Member function of class <b>StandardLineSearchCPU3</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
StdTransfer1dCPU1
ITransferOperatorCPU1 
Group <b>StdTransfer</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a> <a href="StdTransfer1dCPU1.html">StdTransfer1dCPU1</a> <br><table><tr><td colspan=2><h3>StdTransfer1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer1dCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StdTransfer1dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_constraint (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction_damping (number )</td></tr><tr><td><br></td></tr></table>
constructor
StdTransfer1dCPU1

StdTransfer1dCPU1 ()
StdTransfer1dCPU1 ()<br>Constructor of class <b>StdTransfer1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
StdTransfer1dCPU1

StdTransfer1dCPU1 (SmartPtr<ApproximationSpace1d> Approximation Space)
StdTransfer1dCPU1 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)<br>Constructor of class <b>StdTransfer1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction_damping
void
void set_restriction_damping (number )
void set_restriction_damping (number )<br><br>Member function of class <b>StdTransfer1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_constraint
void
void add_constraint (SmartPtr<IConstraintCPU1> )
void add_constraint (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; )<br><br>Member function of class <b>StdTransfer1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )<br><br>Member function of class <b>StdTransfer1dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
StdTransfer1dCPU2
ITransferOperatorCPU2 
Group <b>StdTransfer</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a> <a href="StdTransfer1dCPU2.html">StdTransfer1dCPU2</a> <br><table><tr><td colspan=2><h3>StdTransfer1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer1dCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StdTransfer1dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_constraint (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction_damping (number )</td></tr><tr><td><br></td></tr></table>
constructor
StdTransfer1dCPU2

StdTransfer1dCPU2 ()
StdTransfer1dCPU2 ()<br>Constructor of class <b>StdTransfer1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
StdTransfer1dCPU2

StdTransfer1dCPU2 (SmartPtr<ApproximationSpace1d> Approximation Space)
StdTransfer1dCPU2 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)<br>Constructor of class <b>StdTransfer1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction_damping
void
void set_restriction_damping (number )
void set_restriction_damping (number )<br><br>Member function of class <b>StdTransfer1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_constraint
void
void add_constraint (SmartPtr<IConstraintCPU2> )
void add_constraint (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; )<br><br>Member function of class <b>StdTransfer1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU2> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )<br><br>Member function of class <b>StdTransfer1dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
StdTransfer1dCPU3
ITransferOperatorCPU3 
Group <b>StdTransfer</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a> <a href="StdTransfer1dCPU3.html">StdTransfer1dCPU3</a> <br><table><tr><td colspan=2><h3>StdTransfer1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer1dCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StdTransfer1dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_constraint (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction_damping (number )</td></tr><tr><td><br></td></tr></table>
constructor
StdTransfer1dCPU3

StdTransfer1dCPU3 ()
StdTransfer1dCPU3 ()<br>Constructor of class <b>StdTransfer1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
StdTransfer1dCPU3

StdTransfer1dCPU3 (SmartPtr<ApproximationSpace1d> Approximation Space)
StdTransfer1dCPU3 (SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; Approximation Space)<br>Constructor of class <b>StdTransfer1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction_damping
void
void set_restriction_damping (number )
void set_restriction_damping (number )<br><br>Member function of class <b>StdTransfer1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_constraint
void
void add_constraint (SmartPtr<IConstraintCPU3> )
void add_constraint (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; )<br><br>Member function of class <b>StdTransfer1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU3> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )<br><br>Member function of class <b>StdTransfer1dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
StdTransfer2dCPU1
ITransferOperatorCPU1 
Group <b>StdTransfer</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a> <a href="StdTransfer2dCPU1.html">StdTransfer2dCPU1</a> <br><table><tr><td colspan=2><h3>StdTransfer2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer2dCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StdTransfer2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_constraint (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction_damping (number )</td></tr><tr><td><br></td></tr></table>
constructor
StdTransfer2dCPU1

StdTransfer2dCPU1 ()
StdTransfer2dCPU1 ()<br>Constructor of class <b>StdTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
StdTransfer2dCPU1

StdTransfer2dCPU1 (SmartPtr<ApproximationSpace2d> Approximation Space)
StdTransfer2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>StdTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction_damping
void
void set_restriction_damping (number )
void set_restriction_damping (number )<br><br>Member function of class <b>StdTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_constraint
void
void add_constraint (SmartPtr<IConstraintCPU1> )
void add_constraint (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; )<br><br>Member function of class <b>StdTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )<br><br>Member function of class <b>StdTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
StdTransfer2dCPU2
ITransferOperatorCPU2 
Group <b>StdTransfer</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a> <a href="StdTransfer2dCPU2.html">StdTransfer2dCPU2</a> <br><table><tr><td colspan=2><h3>StdTransfer2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer2dCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StdTransfer2dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_constraint (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction_damping (number )</td></tr><tr><td><br></td></tr></table>
constructor
StdTransfer2dCPU2

StdTransfer2dCPU2 ()
StdTransfer2dCPU2 ()<br>Constructor of class <b>StdTransfer2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
StdTransfer2dCPU2

StdTransfer2dCPU2 (SmartPtr<ApproximationSpace2d> Approximation Space)
StdTransfer2dCPU2 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>StdTransfer2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction_damping
void
void set_restriction_damping (number )
void set_restriction_damping (number )<br><br>Member function of class <b>StdTransfer2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_constraint
void
void add_constraint (SmartPtr<IConstraintCPU2> )
void add_constraint (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; )<br><br>Member function of class <b>StdTransfer2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU2> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )<br><br>Member function of class <b>StdTransfer2dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
StdTransfer2dCPU3
ITransferOperatorCPU3 
Group <b>StdTransfer</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a> <a href="StdTransfer2dCPU3.html">StdTransfer2dCPU3</a> <br><table><tr><td colspan=2><h3>StdTransfer2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer2dCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StdTransfer2dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_constraint (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction_damping (number )</td></tr><tr><td><br></td></tr></table>
constructor
StdTransfer2dCPU3

StdTransfer2dCPU3 ()
StdTransfer2dCPU3 ()<br>Constructor of class <b>StdTransfer2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
StdTransfer2dCPU3

StdTransfer2dCPU3 (SmartPtr<ApproximationSpace2d> Approximation Space)
StdTransfer2dCPU3 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>StdTransfer2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction_damping
void
void set_restriction_damping (number )
void set_restriction_damping (number )<br><br>Member function of class <b>StdTransfer2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_constraint
void
void add_constraint (SmartPtr<IConstraintCPU3> )
void add_constraint (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; )<br><br>Member function of class <b>StdTransfer2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU3> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )<br><br>Member function of class <b>StdTransfer2dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
StdTransfer3dCPU1
ITransferOperatorCPU1 
Group <b>StdTransfer</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a> <a href="StdTransfer3dCPU1.html">StdTransfer3dCPU1</a> <br><table><tr><td colspan=2><h3>StdTransfer3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer3dCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StdTransfer3dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_constraint (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction_damping (number )</td></tr><tr><td><br></td></tr></table>
constructor
StdTransfer3dCPU1

StdTransfer3dCPU1 ()
StdTransfer3dCPU1 ()<br>Constructor of class <b>StdTransfer3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
StdTransfer3dCPU1

StdTransfer3dCPU1 (SmartPtr<ApproximationSpace3d> Approximation Space)
StdTransfer3dCPU1 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)<br>Constructor of class <b>StdTransfer3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction_damping
void
void set_restriction_damping (number )
void set_restriction_damping (number )<br><br>Member function of class <b>StdTransfer3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_constraint
void
void add_constraint (SmartPtr<IConstraintCPU1> )
void add_constraint (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; )<br><br>Member function of class <b>StdTransfer3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )<br><br>Member function of class <b>StdTransfer3dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
StdTransfer3dCPU2
ITransferOperatorCPU2 
Group <b>StdTransfer</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="ITransferOperatorCPU2.html">ITransferOperatorCPU2</a> <a href="StdTransfer3dCPU2.html">StdTransfer3dCPU2</a> <br><table><tr><td colspan=2><h3>StdTransfer3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer3dCPU2 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StdTransfer3dCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_constraint (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction_damping (number )</td></tr><tr><td><br></td></tr></table>
constructor
StdTransfer3dCPU2

StdTransfer3dCPU2 ()
StdTransfer3dCPU2 ()<br>Constructor of class <b>StdTransfer3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
StdTransfer3dCPU2

StdTransfer3dCPU2 (SmartPtr<ApproximationSpace3d> Approximation Space)
StdTransfer3dCPU2 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)<br>Constructor of class <b>StdTransfer3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction_damping
void
void set_restriction_damping (number )
void set_restriction_damping (number )<br><br>Member function of class <b>StdTransfer3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_constraint
void
void add_constraint (SmartPtr<IConstraintCPU2> )
void add_constraint (SmartPtr&lt;<a href="IConstraintCPU2.html">IConstraintCPU2</a>&gt; )<br><br>Member function of class <b>StdTransfer3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU2> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; )<br><br>Member function of class <b>StdTransfer3dCPU2</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
StdTransfer3dCPU3
ITransferOperatorCPU3 
Group <b>StdTransfer</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="ITransferOperatorCPU3.html">ITransferOperatorCPU3</a> <a href="StdTransfer3dCPU3.html">StdTransfer3dCPU3</a> <br><table><tr><td colspan=2><h3>StdTransfer3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer3dCPU3 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StdTransfer3dCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_constraint (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction_damping (number )</td></tr><tr><td><br></td></tr></table>
constructor
StdTransfer3dCPU3

StdTransfer3dCPU3 ()
StdTransfer3dCPU3 ()<br>Constructor of class <b>StdTransfer3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
StdTransfer3dCPU3

StdTransfer3dCPU3 (SmartPtr<ApproximationSpace3d> Approximation Space)
StdTransfer3dCPU3 (SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; Approximation Space)<br>Constructor of class <b>StdTransfer3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction_damping
void
void set_restriction_damping (number )
void set_restriction_damping (number )<br><br>Member function of class <b>StdTransfer3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_constraint
void
void add_constraint (SmartPtr<IConstraintCPU3> )
void add_constraint (SmartPtr&lt;<a href="IConstraintCPU3.html">IConstraintCPU3</a>&gt; )<br><br>Member function of class <b>StdTransfer3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU3> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; )<br><br>Member function of class <b>StdTransfer3dCPU3</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
SubsetHandler
ISubsetHandler 
class has constructor. <br>Inheritance: <a href="ISubsetHandler.html">ISubsetHandler</a> <a href="SubsetHandler.html">SubsetHandler</a> <br><table><tr><td colspan=2><h3>SubsetHandler Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SubsetHandler ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>SubsetHandler Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign_grid (<a href="Grid.html">Grid</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ISubsetHandler Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_subset_name (c_string , integer )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ISubsetHandler Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_subset_index (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>c_string </td><td class="memItemRight" valign=bottom>get_subset_name (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_subsets ()</td></tr><tr><td><br></td></tr></table>
constructor
SubsetHandler

SubsetHandler ()
SubsetHandler ()<br>Constructor of class <b>SubsetHandler</b><br>group: <b>/ug4/Grid</b>
memberfunction
assign_grid
void
void assign_grid (Grid)
void assign_grid (<a href="Grid.html">Grid</a> *)<br><br>Member function of class <b>SubsetHandler</b><br>group: <b>/ug4/Grid</b>
;
class
SurfaceView

class has no constructor. <br><table><tr><td colspan=2><h3>SurfaceView Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="MGSubsetHandler.html">MGSubsetHandler</a>&gt; </td><td class="memItemRight" valign=bottom>subset_handler ()</td></tr><tr><td><br></td></tr></table>
memberfunction
subset_handler
ConstSmartPtr<MGSubsetHandler>
const SmartPtr<MGSubsetHandler> subset_handler () const
const SmartPtr&lt;<a href="MGSubsetHandler.html">MGSubsetHandler</a>&gt; subset_handler ()<br><br>Member function of class <b>SurfaceView</b><br>group: <b>/ug4/Grid</b>
;
class
SymP1Constraints1dCPU1
IConstraintCPU1 IDomainConstraint1dCPU1 
Group <b>SymP1Constraints</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint1dCPU1.html">IDomainConstraint1dCPU1</a> <a href="SymP1Constraints1dCPU1.html">SymP1Constraints1dCPU1</a> <br><table><tr><td colspan=2><h3>SymP1Constraints1dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymP1Constraints1dCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
SymP1Constraints1dCPU1

SymP1Constraints1dCPU1 ()
SymP1Constraints1dCPU1 ()<br>Constructor of class <b>SymP1Constraints1dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
SymP1Constraints1dCPU2
IConstraintCPU2 IDomainConstraint1dCPU2 
Group <b>SymP1Constraints</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint1dCPU2.html">IDomainConstraint1dCPU2</a> <a href="SymP1Constraints1dCPU2.html">SymP1Constraints1dCPU2</a> <br><table><tr><td colspan=2><h3>SymP1Constraints1dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymP1Constraints1dCPU2 ()</td></tr><tr><td><br></td></tr></table>
constructor
SymP1Constraints1dCPU2

SymP1Constraints1dCPU2 ()
SymP1Constraints1dCPU2 ()<br>Constructor of class <b>SymP1Constraints1dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
SymP1Constraints1dCPU3
IConstraintCPU3 IDomainConstraint1dCPU3 
Group <b>SymP1Constraints</b><br>class has constructor.  Tag <b>dim=1d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint1dCPU3.html">IDomainConstraint1dCPU3</a> <a href="SymP1Constraints1dCPU3.html">SymP1Constraints1dCPU3</a> <br><table><tr><td colspan=2><h3>SymP1Constraints1dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymP1Constraints1dCPU3 ()</td></tr><tr><td><br></td></tr></table>
constructor
SymP1Constraints1dCPU3

SymP1Constraints1dCPU3 ()
SymP1Constraints1dCPU3 ()<br>Constructor of class <b>SymP1Constraints1dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
SymP1Constraints2dCPU1
IConstraintCPU1 IDomainConstraint2dCPU1 
Group <b>SymP1Constraints</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a> <a href="SymP1Constraints2dCPU1.html">SymP1Constraints2dCPU1</a> <br><table><tr><td colspan=2><h3>SymP1Constraints2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymP1Constraints2dCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
SymP1Constraints2dCPU1

SymP1Constraints2dCPU1 ()
SymP1Constraints2dCPU1 ()<br>Constructor of class <b>SymP1Constraints2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
SymP1Constraints2dCPU2
IConstraintCPU2 IDomainConstraint2dCPU2 
Group <b>SymP1Constraints</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint2dCPU2.html">IDomainConstraint2dCPU2</a> <a href="SymP1Constraints2dCPU2.html">SymP1Constraints2dCPU2</a> <br><table><tr><td colspan=2><h3>SymP1Constraints2dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymP1Constraints2dCPU2 ()</td></tr><tr><td><br></td></tr></table>
constructor
SymP1Constraints2dCPU2

SymP1Constraints2dCPU2 ()
SymP1Constraints2dCPU2 ()<br>Constructor of class <b>SymP1Constraints2dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
SymP1Constraints2dCPU3
IConstraintCPU3 IDomainConstraint2dCPU3 
Group <b>SymP1Constraints</b><br>class has constructor.  Tag <b>dim=2d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint2dCPU3.html">IDomainConstraint2dCPU3</a> <a href="SymP1Constraints2dCPU3.html">SymP1Constraints2dCPU3</a> <br><table><tr><td colspan=2><h3>SymP1Constraints2dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymP1Constraints2dCPU3 ()</td></tr><tr><td><br></td></tr></table>
constructor
SymP1Constraints2dCPU3

SymP1Constraints2dCPU3 ()
SymP1Constraints2dCPU3 ()<br>Constructor of class <b>SymP1Constraints2dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
SymP1Constraints3dCPU1
IConstraintCPU1 IDomainConstraint3dCPU1 
Group <b>SymP1Constraints</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU1;</b><br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint3dCPU1.html">IDomainConstraint3dCPU1</a> <a href="SymP1Constraints3dCPU1.html">SymP1Constraints3dCPU1</a> <br><table><tr><td colspan=2><h3>SymP1Constraints3dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymP1Constraints3dCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
SymP1Constraints3dCPU1

SymP1Constraints3dCPU1 ()
SymP1Constraints3dCPU1 ()<br>Constructor of class <b>SymP1Constraints3dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
SymP1Constraints3dCPU2
IConstraintCPU2 IDomainConstraint3dCPU2 
Group <b>SymP1Constraints</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU2;</b><br>Inheritance: <a href="IConstraintCPU2.html">IConstraintCPU2</a> <a href="IDomainConstraint3dCPU2.html">IDomainConstraint3dCPU2</a> <a href="SymP1Constraints3dCPU2.html">SymP1Constraints3dCPU2</a> <br><table><tr><td colspan=2><h3>SymP1Constraints3dCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymP1Constraints3dCPU2 ()</td></tr><tr><td><br></td></tr></table>
constructor
SymP1Constraints3dCPU2

SymP1Constraints3dCPU2 ()
SymP1Constraints3dCPU2 ()<br>Constructor of class <b>SymP1Constraints3dCPU2</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
SymP1Constraints3dCPU3
IConstraintCPU3 IDomainConstraint3dCPU3 
Group <b>SymP1Constraints</b><br>class has constructor.  Tag <b>dim=3d;alg=CPU3;</b><br>Inheritance: <a href="IConstraintCPU3.html">IConstraintCPU3</a> <a href="IDomainConstraint3dCPU3.html">IDomainConstraint3dCPU3</a> <a href="SymP1Constraints3dCPU3.html">SymP1Constraints3dCPU3</a> <br><table><tr><td colspan=2><h3>SymP1Constraints3dCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymP1Constraints3dCPU3 ()</td></tr><tr><td><br></td></tr></table>
constructor
SymP1Constraints3dCPU3

SymP1Constraints3dCPU3 ()
SymP1Constraints3dCPU3 ()<br>Constructor of class <b>SymP1Constraints3dCPU3</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
SymmetricGaussSeidelCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Group <b>SymmetricGaussSeidel</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="SymmetricGaussSeidelCPU1.html">SymmetricGaussSeidelCPU1</a> <br><table><tr><td colspan=2><h3>SymmetricGaussSeidelCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymmetricGaussSeidelCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
SymmetricGaussSeidelCPU1

SymmetricGaussSeidelCPU1 ()
SymmetricGaussSeidelCPU1 ()<br>Constructor of class <b>SymmetricGaussSeidelCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
SymmetricGaussSeidelCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 IPreconditionerCPU2 
Group <b>SymmetricGaussSeidel</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <a href="SymmetricGaussSeidelCPU2.html">SymmetricGaussSeidelCPU2</a> <br><table><tr><td colspan=2><h3>SymmetricGaussSeidelCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymmetricGaussSeidelCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
SymmetricGaussSeidelCPU2

SymmetricGaussSeidelCPU2 ()
SymmetricGaussSeidelCPU2 ()<br>Constructor of class <b>SymmetricGaussSeidelCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
SymmetricGaussSeidelCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 IPreconditionerCPU3 
Group <b>SymmetricGaussSeidel</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <a href="SymmetricGaussSeidelCPU3.html">SymmetricGaussSeidelCPU3</a> <br><table><tr><td colspan=2><h3>SymmetricGaussSeidelCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymmetricGaussSeidelCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
SymmetricGaussSeidelCPU3

SymmetricGaussSeidelCPU3 ()
SymmetricGaussSeidelCPU3 ()<br>Constructor of class <b>SymmetricGaussSeidelCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
TKDDomainGenerator

class has constructor. <br>Domain (grid) generator for tkds.<br><table><tr><td colspan=2><h3>TKDDomainGenerator Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>TKDDomainGenerator (<a href="Grid.html">Grid</a> *Grid to fill with TKD, <a href="ISubsetHandler.html">ISubsetHandler</a> *SubsetHandler to use)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>TKDDomainGenerator (<a href="Grid.html">Grid</a> *Grid to fill with TKD, <a href="ISubsetHandler.html">ISubsetHandler</a> *SubsetHandler to use;third parameter indicates whether a SC domain should be created, bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>TKDDomainGenerator Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>createSCDomain (number a, number w, number h, number d_lipid, integer rows, integer cols, integer layers)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns fills your given grid and SubsetHandler with a stratum corneum domain  with given parameters a, h, w and d_lipid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>createSimpleTKDDomain (number a, number w, number h, integer d_lipid, integer rows, integer cols)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns fills your given grid and SubsetHandler with tkds with given parameters a, h, w and d_lipid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top><a href="TKDGeometryGenerator.html">TKDGeometryGenerator</a> *</td><td class="memItemRight" valign=bottom>getGeometryGenerator ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Geometry generator used to build coordinate informations. 			 Also calculates volume and surface of single tkd<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>setGridObject (<a href="Grid.html">Grid</a> *, <a href="ISubsetHandler.html">ISubsetHandler</a> *)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets Grid and SubsetHandler to use.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>setIsSCDomain (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns switch whether a stratum corneum domain or a simple tkd domainwill be created on createDomain()<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>setSubsetInfo (c_string corneocyte_name, c_string lipid_name, const <a href="Vec4d.html">Vec4d</a> *corneocyte_color, const <a href="Vec4d.html">Vec4d</a> *lipid_color)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Set SubsetHandler informations (name, color) for corneocytes and lipid matrix<br/></td></tr><tr><td><br></td></tr></table>
constructor
TKDDomainGenerator

TKDDomainGenerator (GridGrid to fill with TKD, ISubsetHandlerSubsetHandler to use)
TKDDomainGenerator (<a href="Grid.html">Grid</a> *Grid to fill with TKD, <a href="ISubsetHandler.html">ISubsetHandler</a> *SubsetHandler to use)<br>Constructor of class <b>TKDDomainGenerator</b><br>group: <b>ug4/tkd_generator/</b>
constructor
TKDDomainGenerator

TKDDomainGenerator (GridGrid to fill with TKD, ISubsetHandlerSubsetHandler to use;third parameter indicates whether a SC domain should be created, bool )
TKDDomainGenerator (<a href="Grid.html">Grid</a> *Grid to fill with TKD, <a href="ISubsetHandler.html">ISubsetHandler</a> *SubsetHandler to use;third parameter indicates whether a SC domain should be created, bool )<br>Constructor of class <b>TKDDomainGenerator</b><br>group: <b>ug4/tkd_generator/</b>
memberfunction
setIsSCDomain
void
void setIsSCDomain (bool )
void setIsSCDomain (bool )<br><br>Member function of class <b>TKDDomainGenerator</b><br>returns switch whether a stratum corneum domain or a simple tkd domainwill be created on createDomain()<br>group: <b>ug4/tkd_generator/</b>
memberfunction
setGridObject
void
void setGridObject (Grid, ISubsetHandler)
void setGridObject (<a href="Grid.html">Grid</a> *, <a href="ISubsetHandler.html">ISubsetHandler</a> *)<br><br>Member function of class <b>TKDDomainGenerator</b><br>returns sets Grid and SubsetHandler to use.<br>group: <b>ug4/tkd_generator/</b>
memberfunction
createSCDomain
void
void createSCDomain (number a, number w, number h, number d_lipid, integer rows, integer cols, integer layers)
void createSCDomain (number a, number w, number h, number d_lipid, integer rows, integer cols, integer layers)<br><br>Member function of class <b>TKDDomainGenerator</b><br>returns fills your given grid and SubsetHandler with a stratum corneum domain  with given parameters a, h, w and d_lipid<br>group: <b>ug4/tkd_generator/</b>
memberfunction
createSimpleTKDDomain
void
void createSimpleTKDDomain (number a, number w, number h, integer d_lipid, integer rows, integer cols)
void createSimpleTKDDomain (number a, number w, number h, integer d_lipid, integer rows, integer cols)<br><br>Member function of class <b>TKDDomainGenerator</b><br>returns fills your given grid and SubsetHandler with tkds with given parameters a, h, w and d_lipid<br>group: <b>ug4/tkd_generator/</b>
memberfunction
setSubsetInfo
void
void setSubsetInfo (c_string corneocyte_name, c_string lipid_name, const Vec4dcorneocyte_color, const Vec4dlipid_color)
void setSubsetInfo (c_string corneocyte_name, c_string lipid_name, const <a href="Vec4d.html">Vec4d</a> *corneocyte_color, const <a href="Vec4d.html">Vec4d</a> *lipid_color)<br><br>Member function of class <b>TKDDomainGenerator</b><br>returns Set SubsetHandler informations (name, color) for corneocytes and lipid matrix<br>group: <b>ug4/tkd_generator/</b>
memberfunction
getGeometryGenerator
TKDGeometryGenerator*
TKDGeometryGeneratorgetGeometryGenerator ()
<a href="TKDGeometryGenerator.html">TKDGeometryGenerator</a> *getGeometryGenerator ()<br><br>Member function of class <b>TKDDomainGenerator</b><br>returns Geometry generator used to build coordinate informations. 			 Also calculates volume and surface of single tkd<br>group: <b>ug4/tkd_generator/</b>
;
class
TKDGeometryGenerator

class has constructor. <br>Geometry generator class for tkds<br><table><tr><td colspan=2><h3>TKDGeometryGenerator Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>TKDGeometryGenerator (number height, number baseEdgeLength, number diameter, number d_lipid)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>TKDGeometryGenerator Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>createGeometry ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>TKDGeometryGenerator Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>GetSurface (integer )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Surface of given subset (1 element)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>GetVolume (integer )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Volume of given subset (1 element)<br/></td></tr><tr><td><br></td></tr></table>
constructor
TKDGeometryGenerator

TKDGeometryGenerator (number height, number baseEdgeLength, number diameter, number d_lipid)
TKDGeometryGenerator (number height, number baseEdgeLength, number diameter, number d_lipid)<br>Constructor of class <b>TKDGeometryGenerator</b><br>group: <b>ug4/tkd_generator/</b>
memberfunction
createGeometry
void
void createGeometry ()
void createGeometry ()<br><br>Member function of class <b>TKDGeometryGenerator</b><br>group: <b>ug4/tkd_generator/</b>
memberfunction
GetVolume
number
number GetVolume (integer ) const
number GetVolume (integer )<br><br>Member function of class <b>TKDGeometryGenerator</b><br>returns Volume of given subset (1 element)<br>group: <b>ug4/tkd_generator/</b>
memberfunction
GetSurface
number
number GetSurface (integer ) const
number GetSurface (integer )<br><br>Member function of class <b>TKDGeometryGenerator</b><br>returns Surface of given subset (1 element)<br>group: <b>ug4/tkd_generator/</b>
;
class
ThermohalineFlow1d
IElemDisc IDomainElemDisc1d 
Group <b>ThermohalineFlow</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="ThermohalineFlow1d.html">ThermohalineFlow1d</a> <br><table><tr><td colspan=2><h3>ThermohalineFlow1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThermohalineFlow1d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ThermohalineFlow1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; </td><td class="memItemRight" valign=bottom>brine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; </td><td class="memItemRight" valign=bottom>darcy_velocity ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; </td><td class="memItemRight" valign=bottom>pressure_grad ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_density (number BoussinesqDensity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_flow (bool BoussinesqFlow)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_transport (bool BoussinesqTransport)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_consistent_gravity (bool ConsistentGravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Density)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, g_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (c_string Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_heat_capacity_fluid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_heat_capacity_solid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_density_solid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (number MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (c_string MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (c_string Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (c_string Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (number Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (c_string ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (number ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes1d.html">IConvectionShapes1d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind_energy (SmartPtr&lt;<a href="IConvectionShapes1d.html">IConvectionShapes1d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (c_string Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; </td><td class="memItemRight" valign=bottom>temperature ()</td></tr><tr><td><br></td></tr></table>
constructor
ThermohalineFlow1d

ThermohalineFlow1d (c_string Function(s), c_string Subset(s))
ThermohalineFlow1d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_consistent_gravity
void
void set_consistent_gravity (bool ConsistentGravity)
void set_consistent_gravity (bool ConsistentGravity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_transport
void
void set_boussinesq_transport (bool BoussinesqTransport)
void set_boussinesq_transport (bool BoussinesqTransport)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_flow
void
void set_boussinesq_flow (bool BoussinesqFlow)
void set_boussinesq_flow (bool BoussinesqFlow)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_density
void
void set_boussinesq_density (number BoussinesqDensity)
void set_boussinesq_density (number BoussinesqDensity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes1d> Upwind (no, part, full))
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes1d.html">IConvectionShapes1d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind_energy
void
void set_upwind_energy (SmartPtr<IConvectionShapes1d> Upwind (no, part, full))
void set_upwind_energy (SmartPtr&lt;<a href="IConvectionShapes1d.html">IConvectionShapes1d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (SmartPtr<UserNumber1d> Porosity)
void set_porosity (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Porosity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (number Porosity)
void set_porosity (number Porosity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (c_string Porosity)
void set_porosity (c_string Porosity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector1d> Gravity)
void set_gravity (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Gravity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x)
void set_gravity (number g_x)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, number )
void set_gravity (number g_x, g_y, number )<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, g_z, number , number )
void set_gravity (number g_x, g_y, g_z, number , number )<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (c_string Gravity)
void set_gravity (c_string Gravity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (SmartPtr<UserMatrix1d> MolecularDiffusion)
void set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (number MolecularDiffusion)
void set_molecular_diffusion (number MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (c_string MolecularDiffusion)
void set_molecular_diffusion (c_string MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (SmartPtr<UserMatrix1d> ThermalConductivity)
void set_thermal_conductivity (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (number ThermalConductivity)
void set_thermal_conductivity (number ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (c_string ThermalConductivity)
void set_thermal_conductivity (c_string ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix1d> Permeability)
void set_permeability (SmartPtr&lt;<a href="UserMatrix1d.html">UserMatrix1d</a>&gt; Permeability)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (number Permeability)
void set_permeability (number Permeability)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (c_string Permeability)
void set_permeability (c_string Permeability)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber1d> Viscosity)
void set_viscosity (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Viscosity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (number Viscosity)
void set_viscosity (number Viscosity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (c_string Viscosity)
void set_viscosity (c_string Viscosity)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber1d> Density)
void set_density (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Density)<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_heat_capacity_fluid
void
void set_heat_capacity_fluid (number )
void set_heat_capacity_fluid (number )<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_heat_capacity_solid
void
void set_heat_capacity_solid (number )
void set_heat_capacity_solid (number )<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_mass_density_solid
void
void set_mass_density_solid (number )
void set_mass_density_solid (number )<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
darcy_velocity
SmartPtr<UserVector1d>
SmartPtr<UserVector1d> darcy_velocity ()
SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; darcy_velocity ()<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
pressure_grad
SmartPtr<UserVector1d>
SmartPtr<UserVector1d> pressure_grad ()
SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; pressure_grad ()<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
temperature
SmartPtr<UserNumber1d>
SmartPtr<UserNumber1d> temperature ()
SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; temperature ()<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
brine
SmartPtr<UserNumber1d>
SmartPtr<UserNumber1d> brine ()
SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; brine ()<br><br>Member function of class <b>ThermohalineFlow1d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
;
class
ThermohalineFlow2d
IElemDisc IDomainElemDisc2d 
Group <b>ThermohalineFlow</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="ThermohalineFlow2d.html">ThermohalineFlow2d</a> <br><table><tr><td colspan=2><h3>ThermohalineFlow2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThermohalineFlow2d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ThermohalineFlow2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; </td><td class="memItemRight" valign=bottom>brine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>darcy_velocity ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>pressure_grad ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_density (number BoussinesqDensity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_flow (bool BoussinesqFlow)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_transport (bool BoussinesqTransport)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_consistent_gravity (bool ConsistentGravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Density)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, g_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (c_string Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_heat_capacity_fluid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_heat_capacity_solid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_density_solid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (number MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (c_string MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (c_string Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (c_string Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (number Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (c_string ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (number ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind_energy (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (c_string Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; </td><td class="memItemRight" valign=bottom>temperature ()</td></tr><tr><td><br></td></tr></table>
constructor
ThermohalineFlow2d

ThermohalineFlow2d (c_string Function(s), c_string Subset(s))
ThermohalineFlow2d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_consistent_gravity
void
void set_consistent_gravity (bool ConsistentGravity)
void set_consistent_gravity (bool ConsistentGravity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_transport
void
void set_boussinesq_transport (bool BoussinesqTransport)
void set_boussinesq_transport (bool BoussinesqTransport)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_flow
void
void set_boussinesq_flow (bool BoussinesqFlow)
void set_boussinesq_flow (bool BoussinesqFlow)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_density
void
void set_boussinesq_density (number BoussinesqDensity)
void set_boussinesq_density (number BoussinesqDensity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes2d> Upwind (no, part, full))
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind_energy
void
void set_upwind_energy (SmartPtr<IConvectionShapes2d> Upwind (no, part, full))
void set_upwind_energy (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (SmartPtr<UserNumber2d> Porosity)
void set_porosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Porosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (number Porosity)
void set_porosity (number Porosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (c_string Porosity)
void set_porosity (c_string Porosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector2d> Gravity)
void set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Gravity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x)
void set_gravity (number g_x)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, number )
void set_gravity (number g_x, g_y, number )<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, g_z, number , number )
void set_gravity (number g_x, g_y, g_z, number , number )<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (c_string Gravity)
void set_gravity (c_string Gravity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (SmartPtr<UserMatrix2d> MolecularDiffusion)
void set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (number MolecularDiffusion)
void set_molecular_diffusion (number MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (c_string MolecularDiffusion)
void set_molecular_diffusion (c_string MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (SmartPtr<UserMatrix2d> ThermalConductivity)
void set_thermal_conductivity (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (number ThermalConductivity)
void set_thermal_conductivity (number ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (c_string ThermalConductivity)
void set_thermal_conductivity (c_string ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix2d> Permeability)
void set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Permeability)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (number Permeability)
void set_permeability (number Permeability)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (c_string Permeability)
void set_permeability (c_string Permeability)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber2d> Viscosity)
void set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Viscosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (number Viscosity)
void set_viscosity (number Viscosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (c_string Viscosity)
void set_viscosity (c_string Viscosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber2d> Density)
void set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Density)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_heat_capacity_fluid
void
void set_heat_capacity_fluid (number )
void set_heat_capacity_fluid (number )<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_heat_capacity_solid
void
void set_heat_capacity_solid (number )
void set_heat_capacity_solid (number )<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_mass_density_solid
void
void set_mass_density_solid (number )
void set_mass_density_solid (number )<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
darcy_velocity
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> darcy_velocity ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; darcy_velocity ()<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
pressure_grad
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> pressure_grad ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; pressure_grad ()<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
temperature
SmartPtr<UserNumber2d>
SmartPtr<UserNumber2d> temperature ()
SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; temperature ()<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
brine
SmartPtr<UserNumber2d>
SmartPtr<UserNumber2d> brine ()
SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; brine ()<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
;
class
ThermohalineFlow3d
IElemDisc IDomainElemDisc3d 
Group <b>ThermohalineFlow</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="ThermohalineFlow3d.html">ThermohalineFlow3d</a> <br><table><tr><td colspan=2><h3>ThermohalineFlow3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThermohalineFlow3d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ThermohalineFlow3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; </td><td class="memItemRight" valign=bottom>brine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; </td><td class="memItemRight" valign=bottom>darcy_velocity ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; </td><td class="memItemRight" valign=bottom>pressure_grad ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_density (number BoussinesqDensity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_flow (bool BoussinesqFlow)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_transport (bool BoussinesqTransport)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_consistent_gravity (bool ConsistentGravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Density)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, g_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (c_string Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_heat_capacity_fluid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_heat_capacity_solid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_density_solid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (number MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (c_string MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (c_string Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (c_string Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (number Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (c_string ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (number ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes3d.html">IConvectionShapes3d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind_energy (SmartPtr&lt;<a href="IConvectionShapes3d.html">IConvectionShapes3d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (c_string Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; </td><td class="memItemRight" valign=bottom>temperature ()</td></tr><tr><td><br></td></tr></table>
constructor
ThermohalineFlow3d

ThermohalineFlow3d (c_string Function(s), c_string Subset(s))
ThermohalineFlow3d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_consistent_gravity
void
void set_consistent_gravity (bool ConsistentGravity)
void set_consistent_gravity (bool ConsistentGravity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_transport
void
void set_boussinesq_transport (bool BoussinesqTransport)
void set_boussinesq_transport (bool BoussinesqTransport)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_flow
void
void set_boussinesq_flow (bool BoussinesqFlow)
void set_boussinesq_flow (bool BoussinesqFlow)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_density
void
void set_boussinesq_density (number BoussinesqDensity)
void set_boussinesq_density (number BoussinesqDensity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes3d> Upwind (no, part, full))
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes3d.html">IConvectionShapes3d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind_energy
void
void set_upwind_energy (SmartPtr<IConvectionShapes3d> Upwind (no, part, full))
void set_upwind_energy (SmartPtr&lt;<a href="IConvectionShapes3d.html">IConvectionShapes3d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (SmartPtr<UserNumber3d> Porosity)
void set_porosity (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Porosity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (number Porosity)
void set_porosity (number Porosity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (c_string Porosity)
void set_porosity (c_string Porosity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector3d> Gravity)
void set_gravity (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Gravity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x)
void set_gravity (number g_x)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, number )
void set_gravity (number g_x, g_y, number )<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, g_z, number , number )
void set_gravity (number g_x, g_y, g_z, number , number )<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (c_string Gravity)
void set_gravity (c_string Gravity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (SmartPtr<UserMatrix3d> MolecularDiffusion)
void set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (number MolecularDiffusion)
void set_molecular_diffusion (number MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (c_string MolecularDiffusion)
void set_molecular_diffusion (c_string MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (SmartPtr<UserMatrix3d> ThermalConductivity)
void set_thermal_conductivity (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (number ThermalConductivity)
void set_thermal_conductivity (number ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (c_string ThermalConductivity)
void set_thermal_conductivity (c_string ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix3d> Permeability)
void set_permeability (SmartPtr&lt;<a href="UserMatrix3d.html">UserMatrix3d</a>&gt; Permeability)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (number Permeability)
void set_permeability (number Permeability)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (c_string Permeability)
void set_permeability (c_string Permeability)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber3d> Viscosity)
void set_viscosity (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Viscosity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (number Viscosity)
void set_viscosity (number Viscosity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (c_string Viscosity)
void set_viscosity (c_string Viscosity)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber3d> Density)
void set_density (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Density)<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_heat_capacity_fluid
void
void set_heat_capacity_fluid (number )
void set_heat_capacity_fluid (number )<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_heat_capacity_solid
void
void set_heat_capacity_solid (number )
void set_heat_capacity_solid (number )<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_mass_density_solid
void
void set_mass_density_solid (number )
void set_mass_density_solid (number )<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
darcy_velocity
SmartPtr<UserVector3d>
SmartPtr<UserVector3d> darcy_velocity ()
SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; darcy_velocity ()<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
pressure_grad
SmartPtr<UserVector3d>
SmartPtr<UserVector3d> pressure_grad ()
SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; pressure_grad ()<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
temperature
SmartPtr<UserNumber3d>
SmartPtr<UserNumber3d> temperature ()
SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; temperature ()<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
brine
SmartPtr<UserNumber3d>
SmartPtr<UserNumber3d> brine ()
SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; brine ()<br><br>Member function of class <b>ThermohalineFlow3d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
;
class
ThetaTimeStepCPU1
IAssembleCPU1 ITimeDiscretizationCPU1 
Group <b>ThetaTimeStep</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="ITimeDiscretizationCPU1.html">ITimeDiscretizationCPU1</a> <a href="ThetaTimeStepCPU1.html">ThetaTimeStepCPU1</a> <br><table><tr><td colspan=2><h3>ThetaTimeStepCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, number Theta)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, c_string Scheme)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ThetaTimeStepCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_scheme (c_string Scheme)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer Stage)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_theta (number Theta (1 = Impl; 0 = Expl))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ITimeDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ITimeDiscretizationCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
ThetaTimeStepCPU1

ThetaTimeStepCPU1 (SmartPtr<IDomainDiscretizationCPU1> Domain Discretization)
ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization)<br>Constructor of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
ThetaTimeStepCPU1

ThetaTimeStepCPU1 (SmartPtr<IDomainDiscretizationCPU1> Domain Discretization, number Theta)
ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, number Theta)<br>Constructor of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
ThetaTimeStepCPU1

ThetaTimeStepCPU1 (SmartPtr<IDomainDiscretizationCPU1> Domain Discretization, c_string Scheme)
ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, c_string Scheme)<br>Constructor of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_theta
void
void set_theta (number Theta (1 = Impl; 0 = Expl))
void set_theta (number Theta (1 = Impl; 0 = Expl))<br><br>Member function of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_scheme
void
void set_scheme (c_string Scheme)
void set_scheme (c_string Scheme)<br><br>Member function of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_stage
void
void set_stage (integer Stage)
void set_stage (integer Stage)<br><br>Member function of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
ThetaTimeStepCPU2
IAssembleCPU2 ITimeDiscretizationCPU2 
Group <b>ThetaTimeStep</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Inheritance: <a href="IAssembleCPU2.html">IAssembleCPU2</a> <a href="ITimeDiscretizationCPU2.html">ITimeDiscretizationCPU2</a> <a href="ThetaTimeStepCPU2.html">ThetaTimeStepCPU2</a> <br><table><tr><td colspan=2><h3>ThetaTimeStepCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU2 (SmartPtr&lt;<a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a>&gt; Domain Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU2 (SmartPtr&lt;<a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a>&gt; Domain Discretization, number Theta)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU2 (SmartPtr&lt;<a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a>&gt; Domain Discretization, c_string Scheme)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ThetaTimeStepCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_scheme (c_string Scheme)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer Stage)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_theta (number Theta (1 = Impl; 0 = Expl))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ITimeDiscretizationCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU2.html">SolutionTimeSeriesCPU2</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ITimeDiscretizationCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU2.html">VectorCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU2.html">VectorCPU2</a> *d(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU2.html">MatrixCPU2</a> *J(u), const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, <a href="VectorCPU2.html">VectorCPU2</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *M, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU2.html">VectorCPU2</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU2.html">MatrixCPU2</a> *A, const <a href="VectorCPU2.html">VectorCPU2</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
ThetaTimeStepCPU2

ThetaTimeStepCPU2 (SmartPtr<IDomainDiscretizationCPU2> Domain Discretization)
ThetaTimeStepCPU2 (SmartPtr&lt;<a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a>&gt; Domain Discretization)<br>Constructor of class <b>ThetaTimeStepCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
ThetaTimeStepCPU2

ThetaTimeStepCPU2 (SmartPtr<IDomainDiscretizationCPU2> Domain Discretization, number Theta)
ThetaTimeStepCPU2 (SmartPtr&lt;<a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a>&gt; Domain Discretization, number Theta)<br>Constructor of class <b>ThetaTimeStepCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
ThetaTimeStepCPU2

ThetaTimeStepCPU2 (SmartPtr<IDomainDiscretizationCPU2> Domain Discretization, c_string Scheme)
ThetaTimeStepCPU2 (SmartPtr&lt;<a href="IDomainDiscretizationCPU2.html">IDomainDiscretizationCPU2</a>&gt; Domain Discretization, c_string Scheme)<br>Constructor of class <b>ThetaTimeStepCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_theta
void
void set_theta (number Theta (1 = Impl; 0 = Expl))
void set_theta (number Theta (1 = Impl; 0 = Expl))<br><br>Member function of class <b>ThetaTimeStepCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_scheme
void
void set_scheme (c_string Scheme)
void set_scheme (c_string Scheme)<br><br>Member function of class <b>ThetaTimeStepCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_stage
void
void set_stage (integer Stage)
void set_stage (integer Stage)<br><br>Member function of class <b>ThetaTimeStepCPU2</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
ThetaTimeStepCPU3
IAssembleCPU3 ITimeDiscretizationCPU3 
Group <b>ThetaTimeStep</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Inheritance: <a href="IAssembleCPU3.html">IAssembleCPU3</a> <a href="ITimeDiscretizationCPU3.html">ITimeDiscretizationCPU3</a> <a href="ThetaTimeStepCPU3.html">ThetaTimeStepCPU3</a> <br><table><tr><td colspan=2><h3>ThetaTimeStepCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU3 (SmartPtr&lt;<a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a>&gt; Domain Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU3 (SmartPtr&lt;<a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a>&gt; Domain Discretization, number Theta)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU3 (SmartPtr&lt;<a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a>&gt; Domain Discretization, c_string Scheme)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ThetaTimeStepCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_scheme (c_string Scheme)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer Stage)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_theta (number Theta (1 = Impl; 0 = Expl))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ITimeDiscretizationCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU3.html">SolutionTimeSeriesCPU3</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ITimeDiscretizationCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU3.html">VectorCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU3.html">VectorCPU3</a> *d(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU3.html">MatrixCPU3</a> *J(u), const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, <a href="VectorCPU3.html">VectorCPU3</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *M, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU3.html">VectorCPU3</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU3.html">MatrixCPU3</a> *A, const <a href="VectorCPU3.html">VectorCPU3</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
ThetaTimeStepCPU3

ThetaTimeStepCPU3 (SmartPtr<IDomainDiscretizationCPU3> Domain Discretization)
ThetaTimeStepCPU3 (SmartPtr&lt;<a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a>&gt; Domain Discretization)<br>Constructor of class <b>ThetaTimeStepCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
ThetaTimeStepCPU3

ThetaTimeStepCPU3 (SmartPtr<IDomainDiscretizationCPU3> Domain Discretization, number Theta)
ThetaTimeStepCPU3 (SmartPtr&lt;<a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a>&gt; Domain Discretization, number Theta)<br>Constructor of class <b>ThetaTimeStepCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
ThetaTimeStepCPU3

ThetaTimeStepCPU3 (SmartPtr<IDomainDiscretizationCPU3> Domain Discretization, c_string Scheme)
ThetaTimeStepCPU3 (SmartPtr&lt;<a href="IDomainDiscretizationCPU3.html">IDomainDiscretizationCPU3</a>&gt; Domain Discretization, c_string Scheme)<br>Constructor of class <b>ThetaTimeStepCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_theta
void
void set_theta (number Theta (1 = Impl; 0 = Expl))
void set_theta (number Theta (1 = Impl; 0 = Expl))<br><br>Member function of class <b>ThetaTimeStepCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_scheme
void
void set_scheme (c_string Scheme)
void set_scheme (c_string Scheme)<br><br>Member function of class <b>ThetaTimeStepCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_stage
void
void set_stage (integer Stage)
void set_stage (integer Stage)<br><br>Member function of class <b>ThetaTimeStepCPU3</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
Timel1d
IUserData UserNumber1d DependentUserDataNumber1d DataLinkerNumber1d 
Group <b>Timel</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <a href="DataLinkerNumber1d.html">DataLinkerNumber1d</a> <a href="Timel1d.html">Timel1d</a> <br><table><tr><td colspan=2><h3>Timel1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Timel1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Timel1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Timel1d

Timel1d ()
Timel1d ()<br>Constructor of class <b>Timel1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Timel1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber1d> )
void set_phi (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Timel1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Timel1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber1d> )
void set_rho (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Timel1d</b><br>group: <b>ug4//Biogas</b>
;
class
Timel2d
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Group <b>Timel</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="Timel2d.html">Timel2d</a> <br><table><tr><td colspan=2><h3>Timel2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Timel2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Timel2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Timel2d

Timel2d ()
Timel2d ()<br>Constructor of class <b>Timel2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Timel2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber2d> )
void set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Timel2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Timel2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber2d> )
void set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Timel2d</b><br>group: <b>ug4//Biogas</b>
;
class
Timel3d
IUserData UserNumber3d DependentUserDataNumber3d DataLinkerNumber3d 
Group <b>Timel</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <a href="DataLinkerNumber3d.html">DataLinkerNumber3d</a> <a href="Timel3d.html">Timel3d</a> <br><table><tr><td colspan=2><h3>Timel3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Timel3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Timel3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Timel3d

Timel3d ()
Timel3d ()<br>Constructor of class <b>Timel3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Timel3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber3d> )
void set_phi (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Timel3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Timel3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber3d> )
void set_rho (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Timel3d</b><br>group: <b>ug4//Biogas</b>
;
class
Times1d
IUserData UserNumber1d DependentUserDataNumber1d DataLinkerNumber1d 
Group <b>Times</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <a href="DependentUserDataNumber1d.html">DependentUserDataNumber1d</a> <a href="DataLinkerNumber1d.html">DataLinkerNumber1d</a> <a href="Times1d.html">Times1d</a> <br><table><tr><td colspan=2><h3>Times1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Times1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Times1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Times1d

Times1d ()
Times1d ()<br>Constructor of class <b>Times1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Times1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber1d> )
void set_phi (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Times1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Times1d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber1d> )
void set_rho (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>Times1d</b><br>group: <b>ug4//Biogas</b>
;
class
Times2d
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Group <b>Times</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="Times2d.html">Times2d</a> <br><table><tr><td colspan=2><h3>Times2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Times2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Times2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Times2d

Times2d ()
Times2d ()<br>Constructor of class <b>Times2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Times2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber2d> )
void set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Times2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Times2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber2d> )
void set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Times2d</b><br>group: <b>ug4//Biogas</b>
;
class
Times3d
IUserData UserNumber3d DependentUserDataNumber3d DataLinkerNumber3d 
Group <b>Times</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <a href="DependentUserDataNumber3d.html">DependentUserDataNumber3d</a> <a href="DataLinkerNumber3d.html">DataLinkerNumber3d</a> <a href="Times3d.html">Times3d</a> <br><table><tr><td colspan=2><h3>Times3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Times3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Times3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Times3d

Times3d ()
Times3d ()<br>Constructor of class <b>Times3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Times3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber3d> )
void set_phi (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Times3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Times3d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber3d> )
void set_rho (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>Times3d</b><br>group: <b>ug4//Biogas</b>
;
class
UGProfileNode

class has no constructor. <br><table><tr><td colspan=2><h3>UGProfileNode Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>call_tree ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns string with call tree<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>call_tree (number dSkipMarginal)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns string with call tree<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>child_self_time_sorted ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns string with sorted childs<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: childs are sorted by self time<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>child_self_time_sorted (number dSkipMarginal)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns string with sorted childs<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: childs are sorted by self time<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>entry_count_sorted ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns string with sorted childs<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: childs are sorted by entry count<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>entry_count_sorted (number dSkipMarginal)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns string with sorted childs<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: childs are sorted by entry count<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_avg_entry_count ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of entries in this profiler node<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_avg_self_time_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns time in milliseconds spend in this node excluding subnodes<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_avg_total_time_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns time in milliseconds spend in this node including subnodes<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>groups ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>is_valid ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if node has been found<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>total_time_sorted ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns string with sorted childs<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: childs are sorted by total time<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>total_time_sorted (number dSkipMarginal)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns string with sorted childs<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: childs are sorted by total time<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
call_tree
string
std_string call_tree () const
std_string call_tree ()<br><br>Member function of class <b>UGProfileNode</b><br>returns string with call tree<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
call_tree
string
std_string call_tree (number dSkipMarginal) const
std_string call_tree (number dSkipMarginal)<br><br>Member function of class <b>UGProfileNode</b><br>returns string with call tree<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
child_self_time_sorted
string
std_string child_self_time_sorted () const
std_string child_self_time_sorted ()<br><br>Member function of class <b>UGProfileNode</b><br>returns string with sorted childs<br>tooltip: childs are sorted by self time<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
child_self_time_sorted
string
std_string child_self_time_sorted (number dSkipMarginal) const
std_string child_self_time_sorted (number dSkipMarginal)<br><br>Member function of class <b>UGProfileNode</b><br>returns string with sorted childs<br>tooltip: childs are sorted by self time<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
total_time_sorted
string
std_string total_time_sorted () const
std_string total_time_sorted ()<br><br>Member function of class <b>UGProfileNode</b><br>returns string with sorted childs<br>tooltip: childs are sorted by total time<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
total_time_sorted
string
std_string total_time_sorted (number dSkipMarginal) const
std_string total_time_sorted (number dSkipMarginal)<br><br>Member function of class <b>UGProfileNode</b><br>returns string with sorted childs<br>tooltip: childs are sorted by total time<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
entry_count_sorted
string
std_string entry_count_sorted () const
std_string entry_count_sorted ()<br><br>Member function of class <b>UGProfileNode</b><br>returns string with sorted childs<br>tooltip: childs are sorted by entry count<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
entry_count_sorted
string
std_string entry_count_sorted (number dSkipMarginal) const
std_string entry_count_sorted (number dSkipMarginal)<br><br>Member function of class <b>UGProfileNode</b><br>returns string with sorted childs<br>tooltip: childs are sorted by entry count<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
get_avg_entry_count
number
number get_avg_entry_count () const
number get_avg_entry_count ()<br><br>Member function of class <b>UGProfileNode</b><br>returns number of entries in this profiler node<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
get_avg_self_time_ms
number
number get_avg_self_time_ms () const
number get_avg_self_time_ms ()<br><br>Member function of class <b>UGProfileNode</b><br>returns time in milliseconds spend in this node excluding subnodes<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
get_avg_total_time_ms
number
number get_avg_total_time_ms () const
number get_avg_total_time_ms ()<br><br>Member function of class <b>UGProfileNode</b><br>returns time in milliseconds spend in this node including subnodes<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
is_valid
bool
bool is_valid () const
bool is_valid ()<br><br>Member function of class <b>UGProfileNode</b><br>returns true if node has been found<br>group: <b>/ug4/Util/Profiler</b>
memberfunction
groups
string
std_string groups () const
std_string groups ()<br><br>Member function of class <b>UGProfileNode</b><br>group: <b>/ug4/Util/Profiler</b>
;
class
UGXFileInfo

class has constructor. <br><table><tr><td colspan=2><h3>UGXFileInfo Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>UGXFileInfo ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>UGXFileInfo Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>parse_file (c_string )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>UGXFileInfo Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>grid_name (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>grid_world_dimension (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_grids ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_subset_handlers (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_subsets (integer , integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>subset_handler_name (integer , integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>subset_name (integer , integer , integer )</td></tr><tr><td><br></td></tr></table>
constructor
UGXFileInfo

UGXFileInfo ()
UGXFileInfo ()<br>Constructor of class <b>UGXFileInfo</b><br>group: <b>/ug4/Grid</b>
memberfunction
parse_file
bool
bool parse_file (c_string )
bool parse_file (c_string )<br><br>Member function of class <b>UGXFileInfo</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_grids
integer
integer num_grids () const
integer num_grids ()<br><br>Member function of class <b>UGXFileInfo</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_subset_handlers
integer
integer num_subset_handlers (integer ) const
integer num_subset_handlers (integer )<br><br>Member function of class <b>UGXFileInfo</b><br>group: <b>/ug4/Grid</b>
memberfunction
num_subsets
integer
integer num_subsets (integer , integer ) const
integer num_subsets (integer , integer )<br><br>Member function of class <b>UGXFileInfo</b><br>group: <b>/ug4/Grid</b>
memberfunction
grid_name
string
std_string grid_name (integer ) const
std_string grid_name (integer )<br><br>Member function of class <b>UGXFileInfo</b><br>group: <b>/ug4/Grid</b>
memberfunction
subset_handler_name
string
std_string subset_handler_name (integer , integer ) const
std_string subset_handler_name (integer , integer )<br><br>Member function of class <b>UGXFileInfo</b><br>group: <b>/ug4/Grid</b>
memberfunction
subset_name
string
std_string subset_name (integer , integer , integer ) const
std_string subset_name (integer , integer , integer )<br><br>Member function of class <b>UGXFileInfo</b><br>group: <b>/ug4/Grid</b>
memberfunction
grid_world_dimension
integer
integer grid_world_dimension (integer ) const
integer grid_world_dimension (integer )<br><br>Member function of class <b>UGXFileInfo</b><br>group: <b>/ug4/Grid</b>
;
class
UserMatrix1d
IUserData 
Group <b>UserMatrix</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix1d.html">UserMatrix1d</a> <br><table><tr><td colspan=2><h3>UserMatrix1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserMatrix1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserMatrix2d
IUserData 
Group <b>UserMatrix</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix2d.html">UserMatrix2d</a> <br><table><tr><td colspan=2><h3>UserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserMatrix3d
IUserData 
Group <b>UserMatrix</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix3d.html">UserMatrix3d</a> <br><table><tr><td colspan=2><h3>UserMatrix3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserMatrix3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserNumber1d
IUserData 
Group <b>UserNumber</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber1d.html">UserNumber1d</a> <br><table><tr><td colspan=2><h3>UserNumber1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserNumber1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserNumber2d
IUserData 
Group <b>UserNumber</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <br><table><tr><td colspan=2><h3>UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserNumber3d
IUserData 
Group <b>UserNumber</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber3d.html">UserNumber3d</a> <br><table><tr><td colspan=2><h3>UserNumber3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserNumber3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserTensor41d
IUserData 
Group <b>UserTensor4</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor41d.html">UserTensor41d</a> <br><table><tr><td colspan=2><h3>UserTensor41d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserTensor41d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserTensor41d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserTensor42d
IUserData 
Group <b>UserTensor4</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor42d.html">UserTensor42d</a> <br><table><tr><td colspan=2><h3>UserTensor42d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserTensor43d
IUserData 
Group <b>UserTensor4</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor43d.html">UserTensor43d</a> <br><table><tr><td colspan=2><h3>UserTensor43d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserTensor43d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserTensor43d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserVector1d
IUserData 
Group <b>UserVector</b><br>class has no constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector1d.html">UserVector1d</a> <br><table><tr><td colspan=2><h3>UserVector1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserVector1d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserVector2d
IUserData 
Group <b>UserVector</b><br>class has no constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <br><table><tr><td colspan=2><h3>UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserVector3d
IUserData 
Group <b>UserVector</b><br>class has no constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector3d.html">UserVector3d</a> <br><table><tr><td colspan=2><h3>UserVector3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserVector3d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
VTKOutput1d

Group <b>VTKOutput</b><br>class has constructor.  Tag <b>dim=1d;</b><br><table><tr><td colspan=2><h3>VTKOutput1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VTKOutput1d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VTKOutput1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_selection ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_all (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
VTKOutput1d

VTKOutput1d ()
VTKOutput1d ()<br>Constructor of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
clear_selection
void
void clear_selection ()
void clear_selection ()<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_all
void
void select_all (bool )
void select_all (bool )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (c_string , c_string )
void select_nodal (c_string , c_string )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (SmartPtr<UserNumber1d> , c_string )
void select_nodal (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (SmartPtr<UserVector1d> , c_string )
void select_nodal (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (c_string , c_string )
void select_element (c_string , c_string )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (SmartPtr<UserNumber1d> , c_string )
void select_element (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (SmartPtr<UserVector1d> , c_string )
void select_element (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction1dCPU1)
void write_time_pvd (c_string , <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *)<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction1dCPU2)
void write_time_pvd (c_string , <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *)<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction1dCPU3)
void write_time_pvd (c_string , <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *)<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU1, integer , number , bool )
void print (c_string , <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU1, integer , number )
void print (c_string , <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, integer , number )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU1, bool )
void print (c_string , <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, bool )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU1)
void print (c_string , <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *)<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU2, integer , number , bool )
void print (c_string , <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU2, integer , number )
void print (c_string , <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, integer , number )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU2, bool )
void print (c_string , <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, bool )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU2)
void print (c_string , <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *)<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU3, integer , number , bool )
void print (c_string , <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU3, integer , number )
void print (c_string , <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, integer , number )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU3, bool )
void print (c_string , <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, bool )<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction1dCPU3)
void print (c_string , <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *)<br><br>Member function of class <b>VTKOutput1d</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
VTKOutput2d

Group <b>VTKOutput</b><br>class has constructor.  Tag <b>dim=2d;</b><br><table><tr><td colspan=2><h3>VTKOutput2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VTKOutput2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VTKOutput2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_selection ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_all (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
VTKOutput2d

VTKOutput2d ()
VTKOutput2d ()<br>Constructor of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
clear_selection
void
void clear_selection ()
void clear_selection ()<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_all
void
void select_all (bool )
void select_all (bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (c_string , c_string )
void select_nodal (c_string , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (SmartPtr<UserNumber2d> , c_string )
void select_nodal (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (SmartPtr<UserVector2d> , c_string )
void select_nodal (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (c_string , c_string )
void select_element (c_string , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (SmartPtr<UserNumber2d> , c_string )
void select_element (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (SmartPtr<UserVector2d> , c_string )
void select_element (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction2dCPU1)
void write_time_pvd (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction2dCPU2)
void write_time_pvd (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction2dCPU3)
void write_time_pvd (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU1, integer , number , bool )
void print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU1, integer , number )
void print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, integer , number )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU1, bool )
void print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU1)
void print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU2, integer , number , bool )
void print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU2, integer , number )
void print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, integer , number )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU2, bool )
void print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU2)
void print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU3, integer , number , bool )
void print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU3, integer , number )
void print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, integer , number )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU3, bool )
void print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU3)
void print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
VTKOutput3d

Group <b>VTKOutput</b><br>class has constructor.  Tag <b>dim=3d;</b><br><table><tr><td colspan=2><h3>VTKOutput3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VTKOutput3d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VTKOutput3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_selection ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_all (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
VTKOutput3d

VTKOutput3d ()
VTKOutput3d ()<br>Constructor of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
clear_selection
void
void clear_selection ()
void clear_selection ()<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_all
void
void select_all (bool )
void select_all (bool )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (c_string , c_string )
void select_nodal (c_string , c_string )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (SmartPtr<UserNumber3d> , c_string )
void select_nodal (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (SmartPtr<UserVector3d> , c_string )
void select_nodal (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (c_string , c_string )
void select_element (c_string , c_string )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (SmartPtr<UserNumber3d> , c_string )
void select_element (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (SmartPtr<UserVector3d> , c_string )
void select_element (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction3dCPU1)
void write_time_pvd (c_string , <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *)<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction3dCPU2)
void write_time_pvd (c_string , <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *)<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction3dCPU3)
void write_time_pvd (c_string , <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *)<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU1, integer , number , bool )
void print (c_string , <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU1, integer , number )
void print (c_string , <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, integer , number )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU1, bool )
void print (c_string , <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, bool )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU1)
void print (c_string , <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *)<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU2, integer , number , bool )
void print (c_string , <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU2, integer , number )
void print (c_string , <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, integer , number )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU2, bool )
void print (c_string , <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, bool )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU2)
void print (c_string , <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *)<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU3, integer , number , bool )
void print (c_string , <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU3, integer , number )
void print (c_string , <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, integer , number )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU3, bool )
void print (c_string , <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, bool )<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction3dCPU3)
void print (c_string , <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *)<br><br>Member function of class <b>VTKOutput3d</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
VankaCPU1
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Group <b>Vanka</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br>Vanka Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="VankaCPU1.html">VankaCPU1</a> <br><table><tr><td colspan=2><h3>VankaCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VankaCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VankaCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_relax (number relax)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
VankaCPU1

VankaCPU1 ()
VankaCPU1 ()<br>Constructor of class <b>VankaCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_relax
void
void set_relax (number relax)
void set_relax (number relax)<br><br>Member function of class <b>VankaCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
VankaCPU2
VectorDebugWritingObjectCPU2 DebugWritingObjectCPU2 ILinearIteratorCPU2 IPreconditionerCPU2 
Group <b>Vanka</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br>Vanka Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU2.html">VectorDebugWritingObjectCPU2</a> <a href="DebugWritingObjectCPU2.html">DebugWritingObjectCPU2</a> <a href="ILinearIteratorCPU2.html">ILinearIteratorCPU2</a> <a href="IPreconditionerCPU2.html">IPreconditionerCPU2</a> <a href="VankaCPU2.html">VankaCPU2</a> <br><table><tr><td colspan=2><h3>VankaCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VankaCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VankaCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_relax (number relax)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU2.html">IDampingCPU2</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU2.html">IDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
VankaCPU2

VankaCPU2 ()
VankaCPU2 ()<br>Constructor of class <b>VankaCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_relax
void
void set_relax (number relax)
void set_relax (number relax)<br><br>Member function of class <b>VankaCPU2</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
VankaCPU3
VectorDebugWritingObjectCPU3 DebugWritingObjectCPU3 ILinearIteratorCPU3 IPreconditionerCPU3 
Group <b>Vanka</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br>Vanka Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU3.html">VectorDebugWritingObjectCPU3</a> <a href="DebugWritingObjectCPU3.html">DebugWritingObjectCPU3</a> <a href="ILinearIteratorCPU3.html">ILinearIteratorCPU3</a> <a href="IPreconditionerCPU3.html">IPreconditionerCPU3</a> <a href="VankaCPU3.html">VankaCPU3</a> <br><table><tr><td colspan=2><h3>VankaCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VankaCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VankaCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_relax (number relax)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU3.html">IDampingCPU3</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU3.html">IDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
VankaCPU3

VankaCPU3 ()
VankaCPU3 ()<br>Constructor of class <b>VankaCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_relax
void
void set_relax (number relax)
void set_relax (number relax)<br><br>Member function of class <b>VankaCPU3</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
Vec1d

Group <b>Vec</b><br>class has no constructor.  Tag <b>dim=1d</b><br><table><tr><td colspan=2><h3>Vec1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="c_double.html">c_double</a> *</td><td class="memItemRight" valign=bottom>coord (integer )</td></tr><tr><td><br></td></tr></table>
memberfunction
coord
const c_double*
const c_doublecoord (integer ) const
const <a href="c_double.html">c_double</a> *coord (integer )<br><br>Member function of class <b>Vec1d</b><br>group: <b>/ug4/Util/VecMath</b>
;
class
Vec2d

Group <b>Vec</b><br>class has no constructor.  Tag <b>dim=2d</b><br><table><tr><td colspan=2><h3>Vec2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="c_double.html">c_double</a> *</td><td class="memItemRight" valign=bottom>coord (integer )</td></tr><tr><td><br></td></tr></table>
memberfunction
coord
const c_double*
const c_doublecoord (integer ) const
const <a href="c_double.html">c_double</a> *coord (integer )<br><br>Member function of class <b>Vec2d</b><br>group: <b>/ug4/Util/VecMath</b>
;
class
Vec3d

Group <b>Vec</b><br>class has no constructor.  Tag <b>dim=3d</b><br><table><tr><td colspan=2><h3>Vec3d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="c_double.html">c_double</a> *</td><td class="memItemRight" valign=bottom>coord (integer )</td></tr><tr><td><br></td></tr></table>
memberfunction
coord
const c_double*
const c_doublecoord (integer ) const
const <a href="c_double.html">c_double</a> *coord (integer )<br><br>Member function of class <b>Vec3d</b><br>group: <b>/ug4/Util/VecMath</b>
;
class
Vec4d

Group <b>Vec</b><br>class has no constructor.  Tag <b>dim=4d</b><br><table><tr><td colspan=2><h3>Vec4d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="c_double.html">c_double</a> *</td><td class="memItemRight" valign=bottom>coord (integer )</td></tr><tr><td><br></td></tr></table>
memberfunction
coord
const c_double*
const c_doublecoord (integer ) const
const <a href="c_double.html">c_double</a> *coord (integer )<br><br>Member function of class <b>Vec4d</b><br>group: <b>/ug4/Util/VecMath</b>
;
class
VectorCPU1

Group <b>Vector</b><br>class has constructor.  Tag <b>alg=CPU1;</b><br><table><tr><td colspan=2><h3>VectorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
VectorCPU1

VectorCPU1 ()
VectorCPU1 ()<br>Constructor of class <b>VectorCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set
bool
bool set (number Number)
bool set (number Number)<br><br>Member function of class <b>VectorCPU1</b><br>returns Success<br>group: <b>/ug4/Algebra</b>
memberfunction
set_random
bool
bool set_random (number Number, number )
bool set_random (number Number, number )<br><br>Member function of class <b>VectorCPU1</b><br>returns Success<br>group: <b>/ug4/Algebra</b>
memberfunction
print
void
void print ()
void print ()<br><br>Member function of class <b>VectorCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
size
integer
integer size () const
integer size ()<br><br>Member function of class <b>VectorCPU1</b><br>returns Size<br>group: <b>/ug4/Algebra</b>
;
class
VectorCPU2

Group <b>Vector</b><br>class has constructor.  Tag <b>alg=CPU2;</b><br><table><tr><td colspan=2><h3>VectorCPU2 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU2 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
VectorCPU2

VectorCPU2 ()
VectorCPU2 ()<br>Constructor of class <b>VectorCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set
bool
bool set (number Number)
bool set (number Number)<br><br>Member function of class <b>VectorCPU2</b><br>returns Success<br>group: <b>/ug4/Algebra</b>
memberfunction
set_random
bool
bool set_random (number Number, number )
bool set_random (number Number, number )<br><br>Member function of class <b>VectorCPU2</b><br>returns Success<br>group: <b>/ug4/Algebra</b>
memberfunction
print
void
void print ()
void print ()<br><br>Member function of class <b>VectorCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
size
integer
integer size () const
integer size ()<br><br>Member function of class <b>VectorCPU2</b><br>returns Size<br>group: <b>/ug4/Algebra</b>
;
class
VectorCPU3

Group <b>Vector</b><br>class has constructor.  Tag <b>alg=CPU3;</b><br><table><tr><td colspan=2><h3>VectorCPU3 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU3 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
VectorCPU3

VectorCPU3 ()
VectorCPU3 ()<br>Constructor of class <b>VectorCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set
bool
bool set (number Number)
bool set (number Number)<br><br>Member function of class <b>VectorCPU3</b><br>returns Success<br>group: <b>/ug4/Algebra</b>
memberfunction
set_random
bool
bool set_random (number Number, number )
bool set_random (number Number, number )<br><br>Member function of class <b>VectorCPU3</b><br>returns Success<br>group: <b>/ug4/Algebra</b>
memberfunction
print
void
void print ()
void print ()<br><br>Member function of class <b>VectorCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
size
integer
integer size () const
integer size ()<br><br>Member function of class <b>VectorCPU3</b><br>returns Size<br>group: <b>/ug4/Algebra</b>
;
class
VectorDebugWritingObjectCPU1

Group <b>VectorDebugWritingObject</b><br>class has no constructor.  Tag <b>alg=CPU1;</b><br><table><tr><td colspan=2><h3>VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_debug
void
void set_debug (SmartPtr<IVectorDebugWriterCPU1> d)
void set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)<br><br>Member function of class <b>VectorDebugWritingObjectCPU1</b><br>returns sets a debug writer<br>group: <b>/ug4/Algebra</b>
memberfunction
vector_debug_writer
SmartPtr<IVectorDebugWriterCPU1>
SmartPtr<IVectorDebugWriterCPU1> vector_debug_writer ()
SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; vector_debug_writer ()<br><br>Member function of class <b>VectorDebugWritingObjectCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
vector_debug_writer
ConstSmartPtr<IVectorDebugWriterCPU1>
const SmartPtr<IVectorDebugWriterCPU1> vector_debug_writer () const
const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; vector_debug_writer ()<br><br>Member function of class <b>VectorDebugWritingObjectCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
VectorDebugWritingObjectCPU2

Group <b>VectorDebugWritingObject</b><br>class has no constructor.  Tag <b>alg=CPU2;</b><br><table><tr><td colspan=2><h3>VectorDebugWritingObjectCPU2 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorDebugWritingObjectCPU2 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_debug
void
void set_debug (SmartPtr<IVectorDebugWriterCPU2> d)
void set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; d)<br><br>Member function of class <b>VectorDebugWritingObjectCPU2</b><br>returns sets a debug writer<br>group: <b>/ug4/Algebra</b>
memberfunction
vector_debug_writer
SmartPtr<IVectorDebugWriterCPU2>
SmartPtr<IVectorDebugWriterCPU2> vector_debug_writer ()
SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; vector_debug_writer ()<br><br>Member function of class <b>VectorDebugWritingObjectCPU2</b><br>group: <b>/ug4/Algebra</b>
memberfunction
vector_debug_writer
ConstSmartPtr<IVectorDebugWriterCPU2>
const SmartPtr<IVectorDebugWriterCPU2> vector_debug_writer () const
const SmartPtr&lt;<a href="IVectorDebugWriterCPU2.html">IVectorDebugWriterCPU2</a>&gt; vector_debug_writer ()<br><br>Member function of class <b>VectorDebugWritingObjectCPU2</b><br>group: <b>/ug4/Algebra</b>
;
class
VectorDebugWritingObjectCPU3

Group <b>VectorDebugWritingObject</b><br>class has no constructor.  Tag <b>alg=CPU3;</b><br><table><tr><td colspan=2><h3>VectorDebugWritingObjectCPU3 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorDebugWritingObjectCPU3 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_debug
void
void set_debug (SmartPtr<IVectorDebugWriterCPU3> d)
void set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; d)<br><br>Member function of class <b>VectorDebugWritingObjectCPU3</b><br>returns sets a debug writer<br>group: <b>/ug4/Algebra</b>
memberfunction
vector_debug_writer
SmartPtr<IVectorDebugWriterCPU3>
SmartPtr<IVectorDebugWriterCPU3> vector_debug_writer ()
SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; vector_debug_writer ()<br><br>Member function of class <b>VectorDebugWritingObjectCPU3</b><br>group: <b>/ug4/Algebra</b>
memberfunction
vector_debug_writer
ConstSmartPtr<IVectorDebugWriterCPU3>
const SmartPtr<IVectorDebugWriterCPU3> vector_debug_writer () const
const SmartPtr&lt;<a href="IVectorDebugWriterCPU3.html">IVectorDebugWriterCPU3</a>&gt; vector_debug_writer ()<br><br>Member function of class <b>VectorDebugWritingObjectCPU3</b><br>group: <b>/ug4/Algebra</b>
;
class
VoltageGatedChannels

class has constructor. <br><table><tr><td colspan=2><h3>VoltageGatedChannels Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VoltageGatedChannels ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VoltageGatedChannels Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_current ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_current_derivative ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_flux (number , integer )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_x_open_probability ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_y_open_probability ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>initial_current (number , number , number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>initial_current (number , number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>initial_current (number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>initial_current ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_L_gates_for_CFP_model ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_L_gates_for_CFP_model (number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_L_gates_for_ohmic_model ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_L_gates_for_ohmic_model (number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_N_gates_for_CFP_model ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_N_gates_for_CFP_model (number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_N_gates_for_ohmic_model (number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_N_gates_for_ohmic_model ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_T_gates_for_CFP_model (number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_T_gates_for_CFP_model ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_T_gates_for_ohmic_model (number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>install_ca_T_gates_for_ohmic_model ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>update_current (number , number , number , number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>update_current (number , number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns ug4/VoltageGatedChannels/<br/></td></tr><tr><td><br></td></tr></table>
constructor
VoltageGatedChannels

VoltageGatedChannels ()
VoltageGatedChannels ()<br>Constructor of class <b>VoltageGatedChannels</b><br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_N_gates_for_ohmic_model
void
void install_ca_N_gates_for_ohmic_model ()
void install_ca_N_gates_for_ohmic_model ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_N_gates_for_ohmic_model
void
void install_ca_N_gates_for_ohmic_model (number )
void install_ca_N_gates_for_ohmic_model (number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_N_gates_for_CFP_model
void
void install_ca_N_gates_for_CFP_model ()
void install_ca_N_gates_for_CFP_model ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_N_gates_for_CFP_model
void
void install_ca_N_gates_for_CFP_model (number )
void install_ca_N_gates_for_CFP_model (number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_L_gates_for_ohmic_model
void
void install_ca_L_gates_for_ohmic_model ()
void install_ca_L_gates_for_ohmic_model ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_L_gates_for_ohmic_model
void
void install_ca_L_gates_for_ohmic_model (number )
void install_ca_L_gates_for_ohmic_model (number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_L_gates_for_CFP_model
void
void install_ca_L_gates_for_CFP_model ()
void install_ca_L_gates_for_CFP_model ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_L_gates_for_CFP_model
void
void install_ca_L_gates_for_CFP_model (number )
void install_ca_L_gates_for_CFP_model (number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_T_gates_for_ohmic_model
void
void install_ca_T_gates_for_ohmic_model ()
void install_ca_T_gates_for_ohmic_model ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_T_gates_for_ohmic_model
void
void install_ca_T_gates_for_ohmic_model (number )
void install_ca_T_gates_for_ohmic_model (number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_T_gates_for_CFP_model
void
void install_ca_T_gates_for_CFP_model ()
void install_ca_T_gates_for_CFP_model ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
install_ca_T_gates_for_CFP_model
void
void install_ca_T_gates_for_CFP_model (number )
void install_ca_T_gates_for_CFP_model (number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
update_current
void
void update_current (number , number )
void update_current (number , number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
update_current
void
void update_current (number , number , number , number )
void update_current (number , number , number , number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
initial_current
void
void initial_current ()
void initial_current ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
initial_current
void
void initial_current (number )
void initial_current (number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
initial_current
void
void initial_current (number , number )
void initial_current (number , number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
initial_current
void
void initial_current (number , number , number )
void initial_current (number , number , number )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
get_current
number
number get_current ()
number get_current ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
get_flux
number
number get_flux (number , integer )
number get_flux (number , integer )<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
get_current_derivative
number
number get_current_derivative ()
number get_current_derivative ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
get_x_open_probability
number
number get_x_open_probability ()
number get_x_open_probability ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
memberfunction
get_y_open_probability
number
number get_y_open_probability ()
number get_y_open_probability ()<br><br>Member function of class <b>VoltageGatedChannels</b><br>returns ug4/VoltageGatedChannels/<br>group: <b>ug4/VoltageGatedChannels/</b>
;
class
WeightedUpwind1d
IConvectionShapes1d 
Group <b>WeightedUpwind</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IConvectionShapes1d.html">IConvectionShapes1d</a> <a href="WeightedUpwind1d.html">WeightedUpwind1d</a> <br><table><tr><td colspan=2><h3>WeightedUpwind1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>WeightedUpwind1d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>WeightedUpwind1d (number weight)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>WeightedUpwind1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_weight (number )</td></tr><tr><td><br></td></tr></table>
constructor
WeightedUpwind1d

WeightedUpwind1d ()
WeightedUpwind1d ()<br>Constructor of class <b>WeightedUpwind1d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
constructor
WeightedUpwind1d

WeightedUpwind1d (number weight)
WeightedUpwind1d (number weight)<br>Constructor of class <b>WeightedUpwind1d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
memberfunction
set_weight
void
void set_weight (number )
void set_weight (number )<br><br>Member function of class <b>WeightedUpwind1d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
WeightedUpwind2d
IConvectionShapes2d 
Group <b>WeightedUpwind</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IConvectionShapes2d.html">IConvectionShapes2d</a> <a href="WeightedUpwind2d.html">WeightedUpwind2d</a> <br><table><tr><td colspan=2><h3>WeightedUpwind2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>WeightedUpwind2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>WeightedUpwind2d (number weight)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>WeightedUpwind2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_weight (number )</td></tr><tr><td><br></td></tr></table>
constructor
WeightedUpwind2d

WeightedUpwind2d ()
WeightedUpwind2d ()<br>Constructor of class <b>WeightedUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
constructor
WeightedUpwind2d

WeightedUpwind2d (number weight)
WeightedUpwind2d (number weight)<br>Constructor of class <b>WeightedUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
memberfunction
set_weight
void
void set_weight (number )
void set_weight (number )<br><br>Member function of class <b>WeightedUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
WeightedUpwind3d
IConvectionShapes3d 
Group <b>WeightedUpwind</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IConvectionShapes3d.html">IConvectionShapes3d</a> <a href="WeightedUpwind3d.html">WeightedUpwind3d</a> <br><table><tr><td colspan=2><h3>WeightedUpwind3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>WeightedUpwind3d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>WeightedUpwind3d (number weight)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>WeightedUpwind3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_weight (number )</td></tr><tr><td><br></td></tr></table>
constructor
WeightedUpwind3d

WeightedUpwind3d ()
WeightedUpwind3d ()<br>Constructor of class <b>WeightedUpwind3d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
constructor
WeightedUpwind3d

WeightedUpwind3d (number weight)
WeightedUpwind3d (number weight)<br>Constructor of class <b>WeightedUpwind3d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
memberfunction
set_weight
void
void set_weight (number )
void set_weight (number )<br><br>Member function of class <b>WeightedUpwind3d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
c_bool

class has no constructor. <br><table></table>
;
class
c_char

class has no constructor. <br><table></table>
;
class
c_double

class has no constructor. <br><table></table>
;
class
c_float

class has no constructor. <br><table></table>
;
class
c_int

class has no constructor. <br><table></table>
;
class
c_size_t

class has no constructor. <br><table></table>
;
class
c_string

class has no constructor. <br><table></table>
;
class
odes1d
IElemDisc IDomainElemDisc1d 
Group <b>odes</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="odes1d.html">odes1d</a> <br><table><tr><td colspan=2><h3>odes1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>odes1d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>odes1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_D1rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_D2rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_name (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
odes1d

odes1d (c_string Functions, c_string Subset(s))
odes1d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>odes1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_rhs
void
void set_rhs (IFunctionNumber)
void set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_D1rhs
void
void set_D1rhs (IFunctionNumber)
void set_D1rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_D2rhs
void
void set_D2rhs (IFunctionNumber)
void set_D2rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_name
void
void set_name (c_string )
void set_name (c_string )<br><br>Member function of class <b>odes1d</b><br>group: <b>ug4/Neuron/</b>
;
class
odes2d
IElemDisc IDomainElemDisc2d 
Group <b>odes</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="odes2d.html">odes2d</a> <br><table><tr><td colspan=2><h3>odes2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>odes2d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>odes2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_D1rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_D2rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_name (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
odes2d

odes2d (c_string Functions, c_string Subset(s))
odes2d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>odes2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_rhs
void
void set_rhs (IFunctionNumber)
void set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_D1rhs
void
void set_D1rhs (IFunctionNumber)
void set_D1rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_D2rhs
void
void set_D2rhs (IFunctionNumber)
void set_D2rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_name
void
void set_name (c_string )
void set_name (c_string )<br><br>Member function of class <b>odes2d</b><br>group: <b>ug4/Neuron/</b>
;
class
odes3d
IElemDisc IDomainElemDisc3d 
Group <b>odes</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="odes3d.html">odes3d</a> <br><table><tr><td colspan=2><h3>odes3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>odes3d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>odes3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_D1rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_D2rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_name (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
odes3d

odes3d (c_string Functions, c_string Subset(s))
odes3d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>odes3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_rhs
void
void set_rhs (IFunctionNumber)
void set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_D1rhs
void
void set_D1rhs (IFunctionNumber)
void set_D1rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_D2rhs
void
void set_D2rhs (IFunctionNumber)
void set_D2rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_name
void
void set_name (c_string )
void set_name (c_string )<br><br>Member function of class <b>odes3d</b><br>group: <b>ug4/Neuron/</b>
;
class
transmembrane_current1d
IElemDisc IDomainElemDisc1d 
Group <b>transmembrane_current</b><br>class has constructor.  Tag <b>dim=1d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc1d.html">IDomainElemDisc1d</a> <a href="transmembrane_current1d.html">transmembrane_current1d</a> <br><table><tr><td colspan=2><h3>transmembrane_current1d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>transmembrane_current1d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>transmembrane_current1d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_activemembrane (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dendrite (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_capacitive_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_injection_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_leakage_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_postsynaptic_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_potassium_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_sodium_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_transmembrane_net_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_myelin (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_psc (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_sign (number )</td></tr><tr><td><br></td></tr></table>
constructor
transmembrane_current1d

transmembrane_current1d (c_string Functions, c_string Subset(s))
transmembrane_current1d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_sign
void
void set_sign (number )
void set_sign (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber1d> )
void set_injection (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_myelin
void
void set_myelin (number )
void set_myelin (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_activemembrane
void
void set_activemembrane (number )
void set_activemembrane (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_dendrite
void
void set_dendrite (number )
void set_dendrite (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_psc
void
void set_psc (number )
void set_psc (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_sodium_current
void
void set_measure_sodium_current (number )
void set_measure_sodium_current (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_potassium_current
void
void set_measure_potassium_current (number )
void set_measure_potassium_current (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_leakage_current
void
void set_measure_leakage_current (number )
void set_measure_leakage_current (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_capacitive_current
void
void set_measure_capacitive_current (number )
void set_measure_capacitive_current (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_transmembrane_net_current
void
void set_measure_transmembrane_net_current (number )
void set_measure_transmembrane_net_current (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_injection_current
void
void set_measure_injection_current (number )
void set_measure_injection_current (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_postsynaptic_current
void
void set_measure_postsynaptic_current (number )
void set_measure_postsynaptic_current (number )<br><br>Member function of class <b>transmembrane_current1d</b><br>group: <b>ug4/Neuron/</b>
;
class
transmembrane_current2d
IElemDisc IDomainElemDisc2d 
Group <b>transmembrane_current</b><br>class has constructor.  Tag <b>dim=2d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="transmembrane_current2d.html">transmembrane_current2d</a> <br><table><tr><td colspan=2><h3>transmembrane_current2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>transmembrane_current2d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>transmembrane_current2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_activemembrane (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dendrite (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_capacitive_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_injection_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_leakage_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_postsynaptic_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_potassium_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_sodium_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_transmembrane_net_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_myelin (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_psc (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_sign (number )</td></tr><tr><td><br></td></tr></table>
constructor
transmembrane_current2d

transmembrane_current2d (c_string Functions, c_string Subset(s))
transmembrane_current2d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_sign
void
void set_sign (number )
void set_sign (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber2d> )
void set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_myelin
void
void set_myelin (number )
void set_myelin (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_activemembrane
void
void set_activemembrane (number )
void set_activemembrane (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_dendrite
void
void set_dendrite (number )
void set_dendrite (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_psc
void
void set_psc (number )
void set_psc (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_sodium_current
void
void set_measure_sodium_current (number )
void set_measure_sodium_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_potassium_current
void
void set_measure_potassium_current (number )
void set_measure_potassium_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_leakage_current
void
void set_measure_leakage_current (number )
void set_measure_leakage_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_capacitive_current
void
void set_measure_capacitive_current (number )
void set_measure_capacitive_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_transmembrane_net_current
void
void set_measure_transmembrane_net_current (number )
void set_measure_transmembrane_net_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_injection_current
void
void set_measure_injection_current (number )
void set_measure_injection_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_postsynaptic_current
void
void set_measure_postsynaptic_current (number )
void set_measure_postsynaptic_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
;
class
transmembrane_current3d
IElemDisc IDomainElemDisc3d 
Group <b>transmembrane_current</b><br>class has constructor.  Tag <b>dim=3d;</b><br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc3d.html">IDomainElemDisc3d</a> <a href="transmembrane_current3d.html">transmembrane_current3d</a> <br><table><tr><td colspan=2><h3>transmembrane_current3d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>transmembrane_current3d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>transmembrane_current3d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_activemembrane (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dendrite (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_capacitive_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_injection_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_leakage_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_postsynaptic_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_potassium_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_sodium_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_transmembrane_net_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_myelin (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_psc (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_sign (number )</td></tr><tr><td><br></td></tr></table>
constructor
transmembrane_current3d

transmembrane_current3d (c_string Functions, c_string Subset(s))
transmembrane_current3d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_sign
void
void set_sign (number )
void set_sign (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber3d> )
void set_injection (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_myelin
void
void set_myelin (number )
void set_myelin (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_activemembrane
void
void set_activemembrane (number )
void set_activemembrane (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_dendrite
void
void set_dendrite (number )
void set_dendrite (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_psc
void
void set_psc (number )
void set_psc (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_sodium_current
void
void set_measure_sodium_current (number )
void set_measure_sodium_current (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_potassium_current
void
void set_measure_potassium_current (number )
void set_measure_potassium_current (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_leakage_current
void
void set_measure_leakage_current (number )
void set_measure_leakage_current (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_capacitive_current
void
void set_measure_capacitive_current (number )
void set_measure_capacitive_current (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_transmembrane_net_current
void
void set_measure_transmembrane_net_current (number )
void set_measure_transmembrane_net_current (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_injection_current
void
void set_measure_injection_current (number )
void set_measure_injection_current (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_postsynaptic_current
void
void set_measure_postsynaptic_current (number )
void set_measure_postsynaptic_current (number )<br><br>Member function of class <b>transmembrane_current3d</b><br>group: <b>ug4/Neuron/</b>
;
class
Vec

Class <b>Vec1d</b>, default implementation of group <b>Vec</b><br>class has no constructor. <br><table><tr><td colspan=2><h3>Vec1d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="c_double.html">c_double</a> *</td><td class="memItemRight" valign=bottom>coord (integer )</td></tr><tr><td><br></td></tr></table>
memberfunction
coord
const c_double*
const c_doublecoord (integer ) const
const <a href="c_double.html">c_double</a> *coord (integer )<br><br>Member function of class <b>Vec1d</b><br>group: <b>/ug4/Util/VecMath</b>
;
class
Domain
IDomain 
Class <b>Domain2d</b>, default implementation of group <b>Domain</b><br>class has constructor. <br>Inheritance: <a href="IDomain.html">IDomain</a> <a href="Domain2d.html">Domain2d</a> <br><table><tr><td colspan=2><h3>Domain2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Domain2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomain Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="MultiGrid.html">MultiGrid</a>&gt; </td><td class="memItemRight" valign=bottom>grid ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="MGSubsetHandler.html">MGSubsetHandler</a>&gt; </td><td class="memItemRight" valign=bottom>subset_handler ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited IDomain Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td><br></td></tr></table>
constructor
Domain2d

Domain2d ()
Domain2d ()<br>Constructor of class <b>Domain2d</b><br>group: <b>/ug4/Domain</b>
;
class
IDomainElemDisc
IElemDisc 
Class <b>IDomainElemDisc2d</b>, default implementation of group <b>IDomainElemDisc</b><br>class has no constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <br><table></table>
;
class
NeumannBoundary
IElemDisc IDomainElemDisc2d 
Class <b>NeumannBoundary2d</b>, default implementation of group <b>NeumannBoundary</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="NeumannBoundary2d.html">NeumannBoundary2d</a> <br><table><tr><td colspan=2><h3>NeumannBoundary2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NeumannBoundary2d (c_string Function(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NeumannBoundary2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string , c_string , c_string )</td></tr><tr><td><br></td></tr></table>
constructor
NeumannBoundary2d

NeumannBoundary2d (c_string Function(s))
NeumannBoundary2d (c_string Function(s))<br>Constructor of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (number , c_string , c_string )
void add (number , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , c_string , c_string )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber2d> , c_string , c_string )
void add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector2d> , c_string , c_string )
void add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
memberfunction
add
void
void add (c_string , c_string , c_string )
void add (c_string , c_string , c_string )<br><br>Member function of class <b>NeumannBoundary2d</b><br>group: <b>/ug4/SpatialDisc/ElemDisc</b>
;
class
FV1InnerBoundary
IElemDisc IDomainElemDisc2d 
Class <b>FV1InnerBoundary2d</b>, default implementation of group <b>FV1InnerBoundary</b><br>class has no constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="FV1InnerBoundary2d.html">FV1InnerBoundary2d</a> <br><table></table>
;
class
IConvectionShapes

Class <b>IConvectionShapes2d</b>, default implementation of group <b>IConvectionShapes</b><br>class has no constructor. <br><table></table>
;
class
NoUpwind
IConvectionShapes2d 
Class <b>NoUpwind2d</b>, default implementation of group <b>NoUpwind</b><br>class has constructor. <br>Inheritance: <a href="IConvectionShapes2d.html">IConvectionShapes2d</a> <a href="NoUpwind2d.html">NoUpwind2d</a> <br><table><tr><td colspan=2><h3>NoUpwind2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NoUpwind2d ()</td></tr><tr><td><br></td></tr></table>
constructor
NoUpwind2d

NoUpwind2d ()
NoUpwind2d ()<br>Constructor of class <b>NoUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
FullUpwind
IConvectionShapes2d 
Class <b>FullUpwind2d</b>, default implementation of group <b>FullUpwind</b><br>class has constructor. <br>Inheritance: <a href="IConvectionShapes2d.html">IConvectionShapes2d</a> <a href="FullUpwind2d.html">FullUpwind2d</a> <br><table><tr><td colspan=2><h3>FullUpwind2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FullUpwind2d ()</td></tr><tr><td><br></td></tr></table>
constructor
FullUpwind2d

FullUpwind2d ()
FullUpwind2d ()<br>Constructor of class <b>FullUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
WeightedUpwind
IConvectionShapes2d 
Class <b>WeightedUpwind2d</b>, default implementation of group <b>WeightedUpwind</b><br>class has constructor. <br>Inheritance: <a href="IConvectionShapes2d.html">IConvectionShapes2d</a> <a href="WeightedUpwind2d.html">WeightedUpwind2d</a> <br><table><tr><td colspan=2><h3>WeightedUpwind2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>WeightedUpwind2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>WeightedUpwind2d (number weight)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>WeightedUpwind2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_weight (number )</td></tr><tr><td><br></td></tr></table>
constructor
WeightedUpwind2d

WeightedUpwind2d ()
WeightedUpwind2d ()<br>Constructor of class <b>WeightedUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
constructor
WeightedUpwind2d

WeightedUpwind2d (number weight)
WeightedUpwind2d (number weight)<br>Constructor of class <b>WeightedUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
memberfunction
set_weight
void
void set_weight (number )
void set_weight (number )<br><br>Member function of class <b>WeightedUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
PartialUpwind
IConvectionShapes2d 
Class <b>PartialUpwind2d</b>, default implementation of group <b>PartialUpwind</b><br>class has constructor. <br>Inheritance: <a href="IConvectionShapes2d.html">IConvectionShapes2d</a> <a href="PartialUpwind2d.html">PartialUpwind2d</a> <br><table><tr><td colspan=2><h3>PartialUpwind2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>PartialUpwind2d ()</td></tr><tr><td><br></td></tr></table>
constructor
PartialUpwind2d

PartialUpwind2d ()
PartialUpwind2d ()<br>Constructor of class <b>PartialUpwind2d</b><br>group: <b>/ug4/SpatialDisc/Upwind</b>
;
class
IPositionProvider

Class <b>IPositionProvider2d</b>, default implementation of group <b>IPositionProvider</b><br>class has no constructor. <br><table></table>
;
class
Vector

Class <b>VectorCPU1</b>, default implementation of group <b>Vector</b><br>class has constructor. <br><table><tr><td colspan=2><h3>VectorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
VectorCPU1

VectorCPU1 ()
VectorCPU1 ()<br>Constructor of class <b>VectorCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set
bool
bool set (number Number)
bool set (number Number)<br><br>Member function of class <b>VectorCPU1</b><br>returns Success<br>group: <b>/ug4/Algebra</b>
memberfunction
set_random
bool
bool set_random (number Number, number )
bool set_random (number Number, number )<br><br>Member function of class <b>VectorCPU1</b><br>returns Success<br>group: <b>/ug4/Algebra</b>
memberfunction
print
void
void print ()
void print ()<br><br>Member function of class <b>VectorCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
size
integer
integer size () const
integer size ()<br><br>Member function of class <b>VectorCPU1</b><br>returns Size<br>group: <b>/ug4/Algebra</b>
;
class
Matrix

Class <b>MatrixCPU1</b>, default implementation of group <b>Matrix</b><br>class has constructor. <br><table><tr><td colspan=2><h3>MatrixCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
MatrixCPU1

MatrixCPU1 ()
MatrixCPU1 ()<br>Constructor of class <b>MatrixCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>MatrixCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
IVectorDebugWriter

Class <b>IVectorDebugWriterCPU1</b>, default implementation of group <b>IVectorDebugWriter</b><br>class has no constructor. <br><table></table>
;
class
IDebugWriter
IVectorDebugWriterCPU1 
Class <b>IDebugWriterCPU1</b>, default implementation of group <b>IDebugWriter</b><br>class has no constructor. <br>Inheritance: <a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a> <a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a> <br><table></table>
;
class
VectorDebugWritingObject

Class <b>VectorDebugWritingObjectCPU1</b>, default implementation of group <b>VectorDebugWritingObject</b><br>class has no constructor. <br><table><tr><td colspan=2><h3>VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_debug
void
void set_debug (SmartPtr<IVectorDebugWriterCPU1> d)
void set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)<br><br>Member function of class <b>VectorDebugWritingObjectCPU1</b><br>returns sets a debug writer<br>group: <b>/ug4/Algebra</b>
memberfunction
vector_debug_writer
SmartPtr<IVectorDebugWriterCPU1>
SmartPtr<IVectorDebugWriterCPU1> vector_debug_writer ()
SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; vector_debug_writer ()<br><br>Member function of class <b>VectorDebugWritingObjectCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
vector_debug_writer
ConstSmartPtr<IVectorDebugWriterCPU1>
const SmartPtr<IVectorDebugWriterCPU1> vector_debug_writer () const
const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; vector_debug_writer ()<br><br>Member function of class <b>VectorDebugWritingObjectCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
DebugWritingObject
VectorDebugWritingObjectCPU1 
Class <b>DebugWritingObjectCPU1</b>, default implementation of group <b>DebugWritingObject</b><br>class has no constructor. <br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <br><table><tr><td colspan=2><h3>DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> d)
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)<br><br>Member function of class <b>DebugWritingObjectCPU1</b><br>returns sets a debug writer<br>group: <b>/ug4/Algebra</b>
memberfunction
debug_writer
SmartPtr<IDebugWriterCPU1>
SmartPtr<IDebugWriterCPU1> debug_writer ()
SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; debug_writer ()<br><br>Member function of class <b>DebugWritingObjectCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
debug_writer
ConstSmartPtr<IDebugWriterCPU1>
const SmartPtr<IDebugWriterCPU1> debug_writer () const
const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; debug_writer ()<br><br>Member function of class <b>DebugWritingObjectCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
IVectorWriter

Class <b>IVectorWriterCPU1</b>, default implementation of group <b>IVectorWriter</b><br>class has no constructor. <br><table><tr><td colspan=2><h3>IVectorWriterCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU1.html">VectorCPU1</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
update
bool
bool update (VectorCPU1v)
bool update (<a href="VectorCPU1.html">VectorCPU1</a> *v)<br><br>Member function of class <b>IVectorWriterCPU1</b><br>tooltip: updates the vector v<br>group: <b>/ug4/Algebra</b>
;
class
ILinearOperator
IOperatorCPU1 
Class <b>ILinearOperatorCPU1</b>, default implementation of group <b>ILinearOperator</b><br>class has no constructor. <br>Inheritance: <a href="IOperatorCPU1.html">IOperatorCPU1</a> <a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a> <br><table><tr><td colspan=2><h3>ILinearOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr></table>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>ILinearOperatorCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
apply
void
void apply (VectorCPU1, const VectorCPU1)
void apply (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>Member function of class <b>ILinearOperatorCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
MatrixOperator
MatrixCPU1 IOperatorCPU1 ILinearOperatorCPU1 
Class <b>MatrixOperatorCPU1</b>, default implementation of group <b>MatrixOperator</b><br>class has constructor. <br>Inheritance: <a href="MatrixCPU1.html">MatrixCPU1</a> <a href="IOperatorCPU1.html">IOperatorCPU1</a> <a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a> <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> <br><table><tr><td colspan=2><h3>MatrixOperatorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixOperatorCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited MatrixCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
MatrixOperatorCPU1

MatrixOperatorCPU1 ()
MatrixOperatorCPU1 ()<br>Constructor of class <b>MatrixOperatorCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
ILinearIterator

Class <b>ILinearIteratorCPU1</b>, default implementation of group <b>ILinearIterator</b><br>class has no constructor. <br><table><tr><td colspan=2><h3>ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr></table>
memberfunction
set_damp
void
void set_damp (number )
void set_damp (number )<br><br>Member function of class <b>ILinearIteratorCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_damp
void
void set_damp (SmartPtr<IDampingCPU1> )
void set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )<br><br>Member function of class <b>ILinearIteratorCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
IPreconditioner
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 
Class <b>IPreconditionerCPU1</b>, default implementation of group <b>IPreconditioner</b><br>class has no constructor. <br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <br><table><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
;
class
ILinearOperatorInverse

Class <b>ILinearOperatorInverseCPU1</b>, default implementation of group <b>ILinearOperatorInverse</b><br>class has no constructor. <br><table><tr><td colspan=2><h3>ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
memberfunction
init
bool
bool init (SmartPtr<ILinearOperatorCPU1> )
bool init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
apply_return_defect
bool
bool apply_return_defect (VectorCPU1u, VectorCPU1f)
bool apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>returns Success<br>tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br>group: <b>/ug4/Algebra</b>
memberfunction
apply
bool
bool apply (VectorCPU1u, const VectorCPU1f)
bool apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>returns Success<br>tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br>group: <b>/ug4/Algebra</b>
memberfunction
set_convergence_check
void
void set_convergence_check (SmartPtr<IConvergenceCheckCPU1> )
void set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
convergence_check
ConstSmartPtr<IConvergenceCheckCPU1>
const SmartPtr<IConvergenceCheckCPU1> convergence_check () const
const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; convergence_check ()<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ILinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
IPreconditionedLinearOperatorInverse
VectorDebugWritingObjectCPU1 ILinearOperatorInverseCPU1 
Class <b>IPreconditionedLinearOperatorInverseCPU1</b>, default implementation of group <b>IPreconditionedLinearOperatorInverse</b><br>class has no constructor. <br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IPreconditionedLinearOperatorInverseCPU1.html">IPreconditionedLinearOperatorInverseCPU1</a> <br><table><tr><td colspan=2><h3>IPreconditionedLinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_preconditioner
void
void set_preconditioner (SmartPtr<ILinearIteratorCPU1> Preconditioner)
void set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)<br><br>Member function of class <b>IPreconditionedLinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_compute_fresh_defect_when_finished
void
void set_compute_fresh_defect_when_finished (bool )
void set_compute_fresh_defect_when_finished (bool )<br><br>Member function of class <b>IPreconditionedLinearOperatorInverseCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
IMatrixOperatorInverse
ILinearOperatorInverseCPU1 
Class <b>IMatrixOperatorInverseCPU1</b>, default implementation of group <b>IMatrixOperatorInverse</b><br>class has no constructor. <br>Inheritance: <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IMatrixOperatorInverseCPU1.html">IMatrixOperatorInverseCPU1</a> <br><table><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
;
class
IOperator

Class <b>IOperatorCPU1</b>, default implementation of group <b>IOperator</b><br>class has no constructor. <br><table></table>
;
class
IOperatorInverse

Class <b>IOperatorInverseCPU1</b>, default implementation of group <b>IOperatorInverse</b><br>class has no constructor. <br><table></table>
;
class
IConvergenceCheck

Class <b>IConvergenceCheckCPU1</b>, default implementation of group <b>IConvergenceCheck</b><br>class has no constructor. <br><table></table>
;
class
ConvCheck
IConvergenceCheckCPU1 
Class <b>ConvCheckCPU1</b>, default implementation of group <b>ConvCheck</b><br>class has constructor. <br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="ConvCheckCPU1.html">ConvCheckCPU1</a> <br><table><tr><td colspan=2><h3>ConvCheckCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvCheckCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (number Minimum Defect)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (number Relative Reduction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvCheckCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>previous_defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
ConvCheckCPU1

ConvCheckCPU1 ()
ConvCheckCPU1 ()<br>Constructor of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
constructor
ConvCheckCPU1

ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)
ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool Verbosity)<br>Constructor of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
constructor
ConvCheckCPU1

ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)
ConvCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction)<br>Constructor of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (number Minimum Defect)
void set_minimum_defect (number Minimum Defect)<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_reduction
void
void set_reduction (number Relative Reduction)
void set_reduction (number Relative Reduction)<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ConvCheckCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4/Algebra</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ConvCheckCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4/Algebra</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ConvCheckCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction<br>group: <b>/ug4/Algebra</b>
memberfunction
previous_defect
number
number previous_defect () const
number previous_defect ()<br><br>Member function of class <b>ConvCheckCPU1</b><br>group: <b>/ug4/Algebra</b>
;
class
Jacobi
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Class <b>JacobiCPU1</b>, default implementation of group <b>Jacobi</b><br>class has constructor. <br>Jacobi Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="JacobiCPU1.html">JacobiCPU1</a> <br><table><tr><td colspan=2><h3>JacobiCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>JacobiCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>JacobiCPU1 (number DampingFactor)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
JacobiCPU1

JacobiCPU1 ()
JacobiCPU1 ()<br>Constructor of class <b>JacobiCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
constructor
JacobiCPU1

JacobiCPU1 (number DampingFactor)
JacobiCPU1 (number DampingFactor)<br>Constructor of class <b>JacobiCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
GaussSeidel
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Class <b>GaussSeidelCPU1</b>, default implementation of group <b>GaussSeidel</b><br>class has constructor. <br>Gauss-Seidel Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="GaussSeidelCPU1.html">GaussSeidelCPU1</a> <br><table><tr><td colspan=2><h3>GaussSeidelCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GaussSeidelCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
GaussSeidelCPU1

GaussSeidelCPU1 ()
GaussSeidelCPU1 ()<br>Constructor of class <b>GaussSeidelCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
SymmetricGaussSeidel
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Class <b>SymmetricGaussSeidelCPU1</b>, default implementation of group <b>SymmetricGaussSeidel</b><br>class has constructor. <br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="SymmetricGaussSeidelCPU1.html">SymmetricGaussSeidelCPU1</a> <br><table><tr><td colspan=2><h3>SymmetricGaussSeidelCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymmetricGaussSeidelCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
SymmetricGaussSeidelCPU1

SymmetricGaussSeidelCPU1 ()
SymmetricGaussSeidelCPU1 ()<br>Constructor of class <b>SymmetricGaussSeidelCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
BackwardGaussSeidel
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Class <b>BackwardGaussSeidelCPU1</b>, default implementation of group <b>BackwardGaussSeidel</b><br>class has constructor. <br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="BackwardGaussSeidelCPU1.html">BackwardGaussSeidelCPU1</a> <br><table><tr><td colspan=2><h3>BackwardGaussSeidelCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BackwardGaussSeidelCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
BackwardGaussSeidelCPU1

BackwardGaussSeidelCPU1 ()
BackwardGaussSeidelCPU1 ()<br>Constructor of class <b>BackwardGaussSeidelCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
ILU
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Class <b>ILUCPU1</b>, default implementation of group <b>ILU</b><br>class has constructor. <br>Incomplete LU Decomposition<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="ILUCPU1.html">ILUCPU1</a> <br><table><tr><td colspan=2><h3>ILUCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ILUCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILUCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_beta (number beta)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
ILUCPU1

ILUCPU1 ()
ILUCPU1 ()<br>Constructor of class <b>ILUCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_beta
void
void set_beta (number beta)
void set_beta (number beta)<br><br>Member function of class <b>ILUCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
ILUT
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Class <b>ILUTCPU1</b>, default implementation of group <b>ILUT</b><br>class has constructor. <br>Incomplete LU Decomposition with threshold<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="ILUTCPU1.html">ILUTCPU1</a> <br><table><tr><td colspan=2><h3>ILUTCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ILUTCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ILUTCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_threshold (number threshold)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets threshold of incomplete LU factorisation<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
ILUTCPU1

ILUTCPU1 ()
ILUTCPU1 ()<br>Constructor of class <b>ILUTCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_threshold
void
void set_threshold (number threshold)
void set_threshold (number threshold)<br><br>Member function of class <b>ILUTCPU1</b><br>tooltip: sets threshold of incomplete LU factorisation<br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
LinearIteratorProduct
ILinearIteratorCPU1 
Class <b>LinearIteratorProductCPU1</b>, default implementation of group <b>LinearIteratorProduct</b><br>class has constructor. <br>Linear Iterator consisting of several LinearIterations<br>Inheritance: <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="LinearIteratorProductCPU1.html">LinearIteratorProductCPU1</a> <br><table><tr><td colspan=2><h3>LinearIteratorProductCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearIteratorProductCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LinearIteratorProductCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_iteration (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Add an iterator<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LinearIteratorProductCPU1

LinearIteratorProductCPU1 ()
LinearIteratorProductCPU1 ()<br>Constructor of class <b>LinearIteratorProductCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
add_iteration
void
void add_iteration (SmartPtr<ILinearIteratorCPU1> )
void add_iteration (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; )<br><br>Member function of class <b>LinearIteratorProductCPU1</b><br>returns Add an iterator<br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
Vanka
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Class <b>VankaCPU1</b>, default implementation of group <b>Vanka</b><br>class has constructor. <br>Vanka Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="VankaCPU1.html">VankaCPU1</a> <br><table><tr><td colspan=2><h3>VankaCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VankaCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VankaCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_relax (number relax)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
VankaCPU1

VankaCPU1 ()
VankaCPU1 ()<br>Constructor of class <b>VankaCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_relax
void
void set_relax (number relax)
void set_relax (number relax)<br><br>Member function of class <b>VankaCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
DiagVanka
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Class <b>DiagVankaCPU1</b>, default implementation of group <b>DiagVanka</b><br>class has constructor. <br>Diagonal Vanka Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="DiagVankaCPU1.html">DiagVankaCPU1</a> <br><table><tr><td colspan=2><h3>DiagVankaCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DiagVankaCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DiagVankaCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_relax (number relax)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
DiagVankaCPU1

DiagVankaCPU1 ()
DiagVankaCPU1 ()<br>Constructor of class <b>DiagVankaCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
memberfunction
set_relax
void
void set_relax (number relax)
void set_relax (number relax)<br><br>Member function of class <b>DiagVankaCPU1</b><br>group: <b>/ug4/Algebra/Preconditioner</b>
;
class
IDamping

Class <b>IDampingCPU1</b>, default implementation of group <b>IDamping</b><br>class has no constructor. <br><table></table>
;
class
MinimalResiduumDamping
IDampingCPU1 
Class <b>MinimalResiduumDampingCPU1</b>, default implementation of group <b>MinimalResiduumDamping</b><br>class has constructor. <br>Inheritance: <a href="IDampingCPU1.html">IDampingCPU1</a> <a href="MinimalResiduumDampingCPU1.html">MinimalResiduumDampingCPU1</a> <br><table><tr><td colspan=2><h3>MinimalResiduumDampingCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MinimalResiduumDampingCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
MinimalResiduumDampingCPU1

MinimalResiduumDampingCPU1 ()
MinimalResiduumDampingCPU1 ()<br>Constructor of class <b>MinimalResiduumDampingCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
MinimalEnergyDamping
IDampingCPU1 
Class <b>MinimalEnergyDampingCPU1</b>, default implementation of group <b>MinimalEnergyDamping</b><br>class has constructor. <br>Inheritance: <a href="IDampingCPU1.html">IDampingCPU1</a> <a href="MinimalEnergyDampingCPU1.html">MinimalEnergyDampingCPU1</a> <br><table><tr><td colspan=2><h3>MinimalEnergyDampingCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MinimalEnergyDampingCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
MinimalEnergyDampingCPU1

MinimalEnergyDampingCPU1 ()
MinimalEnergyDampingCPU1 ()<br>Constructor of class <b>MinimalEnergyDampingCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
LinearSolver
VectorDebugWritingObjectCPU1 ILinearOperatorInverseCPU1 IPreconditionedLinearOperatorInverseCPU1 
Class <b>LinearSolverCPU1</b>, default implementation of group <b>LinearSolver</b><br>class has constructor. <br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IPreconditionedLinearOperatorInverseCPU1.html">IPreconditionedLinearOperatorInverseCPU1</a> <a href="LinearSolverCPU1.html">LinearSolverCPU1</a> <br><table><tr><td colspan=2><h3>LinearSolverCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearSolverCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
LinearSolverCPU1

LinearSolverCPU1 ()
LinearSolverCPU1 ()<br>Constructor of class <b>LinearSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
CG
VectorDebugWritingObjectCPU1 ILinearOperatorInverseCPU1 IPreconditionedLinearOperatorInverseCPU1 
Class <b>CGCPU1</b>, default implementation of group <b>CG</b><br>class has constructor. <br>Conjugate Gradient<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IPreconditionedLinearOperatorInverseCPU1.html">IPreconditionedLinearOperatorInverseCPU1</a> <a href="CGCPU1.html">CGCPU1</a> <br><table><tr><td colspan=2><h3>CGCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CGCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
CGCPU1

CGCPU1 ()
CGCPU1 ()<br>Constructor of class <b>CGCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
BiCGStab
VectorDebugWritingObjectCPU1 ILinearOperatorInverseCPU1 IPreconditionedLinearOperatorInverseCPU1 
Class <b>BiCGStabCPU1</b>, default implementation of group <b>BiCGStab</b><br>class has constructor. <br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IPreconditionedLinearOperatorInverseCPU1.html">IPreconditionedLinearOperatorInverseCPU1</a> <a href="BiCGStabCPU1.html">BiCGStabCPU1</a> <br><table><tr><td colspan=2><h3>BiCGStabCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BiCGStabCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IPreconditionedLinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_compute_fresh_defect_when_finished (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
BiCGStabCPU1

BiCGStabCPU1 ()
BiCGStabCPU1 ()<br>Constructor of class <b>BiCGStabCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
LU
ILinearOperatorInverseCPU1 
Class <b>LUCPU1</b>, default implementation of group <b>LU</b><br>class has constructor. <br>LU-Decomposition exact solver<br>Inheritance: <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="LUCPU1.html">LUCPU1</a> <br><table><tr><td colspan=2><h3>LUCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LUCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr></table>
constructor
LUCPU1

LUCPU1 ()
LUCPU1 ()<br>Constructor of class <b>LUCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
LocalSchurComplement
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 IOperatorCPU1 ILinearOperatorCPU1 
Class <b>LocalSchurComplementCPU1</b>, default implementation of group <b>LocalSchurComplement</b><br>class has constructor. <br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="IOperatorCPU1.html">IOperatorCPU1</a> <a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a> <a href="LocalSchurComplementCPU1.html">LocalSchurComplementCPU1</a> <br><table><tr><td colspan=2><h3>LocalSchurComplementCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LocalSchurComplementCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LocalSchurComplementCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *local SC times Vector, const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Dirichlet Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix (SmartPtr&lt;<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a>&gt; Matrix)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
LocalSchurComplementCPU1

LocalSchurComplementCPU1 ()
LocalSchurComplementCPU1 ()<br>Constructor of class <b>LocalSchurComplementCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_matrix
void
void set_matrix (SmartPtr<MatrixOperatorCPU1> Matrix)
void set_matrix (SmartPtr&lt;<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a>&gt; Matrix)<br><br>Member function of class <b>LocalSchurComplementCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_dirichlet_solver
void
void set_dirichlet_solver (SmartPtr<ILinearOperatorInverseCPU1> Dirichlet Solver)
void set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Dirichlet Solver)<br><br>Member function of class <b>LocalSchurComplementCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>LocalSchurComplementCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
apply
void
void apply (VectorCPU1local SC times Vector, const VectorCPU1Vector)
void apply (<a href="VectorCPU1.html">VectorCPU1</a> *local SC times Vector, const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)<br><br>Member function of class <b>LocalSchurComplementCPU1</b><br>returns Success<br>group: <b>/ug4/Algebra/Solver</b>
;
class
FETI
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearOperatorInverseCPU1 IMatrixOperatorInverseCPU1 
Class <b>FETICPU1</b>, default implementation of group <b>FETI</b><br>class has constructor. <br>FETI Domain Decomposition Solver<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a> <a href="IMatrixOperatorInverseCPU1.html">IMatrixOperatorInverseCPU1</a> <a href="FETICPU1.html">FETICPU1</a> <br><table><tr><td colspan=2><h3>FETICPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FETICPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FETICPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic_of_inner_solver (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_coarse_problem_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Coarse Problem Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Dirichlet Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_domain_decomp_info (<a href="IDomainDecompositionInfo.html">IDomainDecompositionInfo</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_neumann_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Neumann Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_test_one_to_many_layouts (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>test_layouts (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorInverseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u, const <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u), f remains constant<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply_return_defect (<a href="VectorCPU1.html">VectorCPU1</a> *u, <a href="VectorCPU1.html">VectorCPU1</a> *f)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Solve A*u = f, such that u = A^{-1} f by iterating u := u + B(f - A*u),  f := f - A*u becomes new defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ILinearOperatorInverseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>convergence_check ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
FETICPU1

FETICPU1 ()
FETICPU1 ()<br>Constructor of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_neumann_solver
void
void set_neumann_solver (SmartPtr<ILinearOperatorInverseCPU1> Neumann Solver)
void set_neumann_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Neumann Solver)<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_dirichlet_solver
void
void set_dirichlet_solver (SmartPtr<ILinearOperatorInverseCPU1> Dirichlet Solver)
void set_dirichlet_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Dirichlet Solver)<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_coarse_problem_solver
void
void set_coarse_problem_solver (SmartPtr<ILinearOperatorInverseCPU1> Coarse Problem Solver)
void set_coarse_problem_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Coarse Problem Solver)<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_domain_decomp_info
void
void set_domain_decomp_info (IDomainDecompositionInfo)
void set_domain_decomp_info (<a href="IDomainDecompositionInfo.html">IDomainDecompositionInfo</a> *)<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
print_statistic_of_inner_solver
void
void print_statistic_of_inner_solver (bool )
void print_statistic_of_inner_solver (bool )<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
test_layouts
void
void test_layouts (bool )
void test_layouts (bool )<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_test_one_to_many_layouts
void
void set_test_one_to_many_layouts (bool )
void set_test_one_to_many_layouts (bool )<br><br>Member function of class <b>FETICPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
EigenSolver

Class <b>EigenSolverCPU1</b>, default implementation of group <b>EigenSolver</b><br>class has constructor. <br><table><tr><td colspan=2><h3>EigenSolverCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>EigenSolverCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>EigenSolverCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_vector (<a href="VectorCPU1.html">VectorCPU1</a> *vector)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>apply ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_linear_operator_A (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; LinearOperatorA)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_linear_operator_B (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *LinearOperatorB)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_iterations (integer precision)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_pinvit (integer iPINVIT)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: 1 = preconditioned inverse block iteration, 2 = preconditioned block gradient descent, 3 = LOBPCG<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_precision (number precision)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)</td></tr><tr><td><br></td></tr></table>
constructor
EigenSolverCPU1

EigenSolverCPU1 ()
EigenSolverCPU1 ()<br>Constructor of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
add_vector
void
void add_vector (VectorCPU1vector)
void add_vector (<a href="VectorCPU1.html">VectorCPU1</a> *vector)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_preconditioner
void
void set_preconditioner (SmartPtr<ILinearIteratorCPU1> Preconditioner)
void set_preconditioner (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Preconditioner)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_linear_operator_A
bool
bool set_linear_operator_A (SmartPtr<ILinearOperatorCPU1> LinearOperatorA)
bool set_linear_operator_A (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; LinearOperatorA)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_linear_operator_B
bool
bool set_linear_operator_B (MatrixOperatorCPU1LinearOperatorB)
bool set_linear_operator_B (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *LinearOperatorB)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_max_iterations
void
void set_max_iterations (integer precision)
void set_max_iterations (integer precision)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_precision
void
void set_precision (number precision)
void set_precision (number precision)<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
set_pinvit
void
void set_pinvit (integer iPINVIT)
void set_pinvit (integer iPINVIT)<br><br>Member function of class <b>EigenSolverCPU1</b><br>tooltip: 1 = preconditioned inverse block iteration, 2 = preconditioned block gradient descent, 3 = LOBPCG<br>group: <b>/ug4/Algebra/Solver</b>
memberfunction
apply
integer
integer apply ()
integer apply ()<br><br>Member function of class <b>EigenSolverCPU1</b><br>group: <b>/ug4/Algebra/Solver</b>
;
class
IConstraint

Class <b>IConstraintCPU1</b>, default implementation of group <b>IConstraint</b><br>class has no constructor. <br><table></table>
;
class
IAssemble

Class <b>IAssembleCPU1</b>, default implementation of group <b>IAssemble</b><br>class has no constructor. <br><table><tr><td colspan=2><h3>IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
assemble_jacobian
void
void assemble_jacobian (MatrixCPU1J(u), const VectorCPU1u)
void assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: assembles jacobian on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_defect
void
void assemble_defect (VectorCPU1d(u), const VectorCPU1u)
void assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: Assembles Defect at a given Solution u.<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_linear
void
void assemble_linear (MatrixCPU1A, VectorCPU1b)
void assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: Assembles Matrix and rhs on surface grid.<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_stiffness_matrix
void
void assemble_stiffness_matrix (MatrixCPU1A, const VectorCPU1u)
void assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: assembles stiffness matrix on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_mass_matrix
void
void assemble_mass_matrix (MatrixCPU1M, const VectorCPU1u)
void assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: assembles mass matrix on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_rhs
void
void assemble_rhs (VectorCPU1rhs, const VectorCPU1u)
void assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: assembles right-hand side on surface grid<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
assemble_rhs
void
void assemble_rhs (VectorCPU1rhs)
void assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)<br><br>Member function of class <b>IAssembleCPU1</b><br>tooltip: assembles right-hand side on surface grid for linear case<br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
adjust_solution
void
void adjust_solution (VectorCPU1)
void adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>Member function of class <b>IAssembleCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
IDomainDiscretization
IAssembleCPU1 
Class <b>IDomainDiscretizationCPU1</b>, default implementation of group <b>IDomainDiscretization</b><br>class has no constructor. <br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a> <br><table><tr><td colspan=2><h3>IDomainDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
assemble_jacobian
void
void assemble_jacobian (MatrixCPU1, const SmartPtr<SolutionTimeSeriesCPU1> , number )
void assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )<br><br>Member function of class <b>IDomainDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
ITimeDiscretization
IAssembleCPU1 
Class <b>ITimeDiscretizationCPU1</b>, default implementation of group <b>ITimeDiscretization</b><br>class has no constructor. <br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="ITimeDiscretizationCPU1.html">ITimeDiscretizationCPU1</a> <br><table><tr><td colspan=2><h3>ITimeDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ITimeDiscretizationCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
prepare_step
void
void prepare_step (SmartPtr<SolutionTimeSeriesCPU1> prepares the assembling of Defect/Jacobian for a time step, number )
void prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
prepare_step_elem
void
void prepare_step_elem (SmartPtr<SolutionTimeSeriesCPU1> , number )
void prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
finish_step_elem
void
void finish_step_elem (SmartPtr<SolutionTimeSeriesCPU1> , number )
void finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_stage
void
void set_stage (integer stage)
void set_stage (integer stage)<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
num_stages
integer
integer num_stages () const
integer num_stages ()<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>returns the number of stages<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
future_time
number
number future_time () const
number future_time ()<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>returns the future time point (i.e. the one that will be computed)<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
num_prev_steps
integer
integer num_prev_steps () const
integer num_prev_steps ()<br><br>Member function of class <b>ITimeDiscretizationCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
ThetaTimeStep
IAssembleCPU1 ITimeDiscretizationCPU1 
Class <b>ThetaTimeStepCPU1</b>, default implementation of group <b>ThetaTimeStep</b><br>class has constructor. <br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="ITimeDiscretizationCPU1.html">ITimeDiscretizationCPU1</a> <a href="ThetaTimeStepCPU1.html">ThetaTimeStepCPU1</a> <br><table><tr><td colspan=2><h3>ThetaTimeStepCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, number Theta)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, c_string Scheme)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ThetaTimeStepCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_scheme (c_string Scheme)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer Stage)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_theta (number Theta (1 = Impl; 0 = Expl))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ITimeDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ITimeDiscretizationCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
ThetaTimeStepCPU1

ThetaTimeStepCPU1 (SmartPtr<IDomainDiscretizationCPU1> Domain Discretization)
ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization)<br>Constructor of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
ThetaTimeStepCPU1

ThetaTimeStepCPU1 (SmartPtr<IDomainDiscretizationCPU1> Domain Discretization, number Theta)
ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, number Theta)<br>Constructor of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
ThetaTimeStepCPU1

ThetaTimeStepCPU1 (SmartPtr<IDomainDiscretizationCPU1> Domain Discretization, c_string Scheme)
ThetaTimeStepCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, c_string Scheme)<br>Constructor of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_theta
void
void set_theta (number Theta (1 = Impl; 0 = Expl))
void set_theta (number Theta (1 = Impl; 0 = Expl))<br><br>Member function of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_scheme
void
void set_scheme (c_string Scheme)
void set_scheme (c_string Scheme)<br><br>Member function of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_stage
void
void set_stage (integer Stage)
void set_stage (integer Stage)<br><br>Member function of class <b>ThetaTimeStepCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
BDF
IAssembleCPU1 ITimeDiscretizationCPU1 
Class <b>BDFCPU1</b>, default implementation of group <b>BDF</b><br>class has constructor. <br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="ITimeDiscretizationCPU1.html">ITimeDiscretizationCPU1</a> <a href="BDFCPU1.html">BDFCPU1</a> <br><table><tr><td colspan=2><h3>BDFCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BDFCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>BDFCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, integer Order)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>BDFCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_order (integer Order)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ITimeDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>finish_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; prepares the assembling of Defect/Jacobian for a time step, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>prepare_step_elem (SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_stage (integer stage)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited ITimeDiscretizationCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>future_time ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the future time point (i.e. the one that will be computed)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_prev_steps ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_stages ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the number of stages<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
BDFCPU1

BDFCPU1 (SmartPtr<IDomainDiscretizationCPU1> Domain Discretization)
BDFCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization)<br>Constructor of class <b>BDFCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
constructor
BDFCPU1

BDFCPU1 (SmartPtr<IDomainDiscretizationCPU1> Domain Discretization, integer Order)
BDFCPU1 (SmartPtr&lt;<a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a>&gt; Domain Discretization, integer Order)<br>Constructor of class <b>BDFCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
set_order
void
void set_order (integer Order)
void set_order (integer Order)<br><br>Member function of class <b>BDFCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
AssembledLinearOperator
MatrixCPU1 IOperatorCPU1 ILinearOperatorCPU1 MatrixOperatorCPU1 
Class <b>AssembledLinearOperatorCPU1</b>, default implementation of group <b>AssembledLinearOperator</b><br>class has constructor. <br>Inheritance: <a href="MatrixCPU1.html">MatrixCPU1</a> <a href="IOperatorCPU1.html">IOperatorCPU1</a> <a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a> <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> <a href="AssembledLinearOperatorCPU1.html">AssembledLinearOperatorCPU1</a> <br><table><tr><td colspan=2><h3>AssembledLinearOperatorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledLinearOperatorCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledLinearOperatorCPU1 (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Assembling Routine)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AssembledLinearOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_op_and_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dirichlet_values (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (const <a href="GridLevel.html">GridLevel</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixOperatorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixOperatorCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MatrixCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MatrixCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited MatrixCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr></table>
constructor
AssembledLinearOperatorCPU1

AssembledLinearOperatorCPU1 ()
AssembledLinearOperatorCPU1 ()<br>Constructor of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
constructor
AssembledLinearOperatorCPU1

AssembledLinearOperatorCPU1 (IAssembleCPU1Assembling Routine)
AssembledLinearOperatorCPU1 (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Assembling Routine)<br>Constructor of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU1)
void set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_level
void
void set_level (const GridLevel)
void set_level (const <a href="GridLevel.html">GridLevel</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
memberfunction
set_dirichlet_values
void
void set_dirichlet_values (VectorCPU1)
void set_dirichlet_values (<a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
memberfunction
init_op_and_rhs
void
void init_op_and_rhs (VectorCPU1)
void init_op_and_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>Member function of class <b>AssembledLinearOperatorCPU1</b><br>group: <b>/ug4/Discretization</b>
;
class
NewtonSolver
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 IOperatorInverseCPU1 
Class <b>NewtonSolverCPU1</b>, default implementation of group <b>NewtonSolver</b><br>class has constructor. <br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="IOperatorInverseCPU1.html">IOperatorInverseCPU1</a> <a href="NewtonSolverCPU1.html">NewtonSolverCPU1</a> <br><table><tr><td colspan=2><h3>NewtonSolverCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>NewtonSolverCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NewtonSolverCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>apply (<a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_average_convergence ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IOperatorCPU1.html">IOperatorCPU1</a>&gt; op)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>prepare (<a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; convCheck)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_line_search (SmartPtr&lt;<a href="ILineSearchCPU1.html">ILineSearchCPU1</a>&gt; lineSeach)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_linear_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; linSolver)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>NewtonSolverCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>average_linear_steps (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns average number of linsolver steps per linsolver call in newton step iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_linsolver_calls (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of linsolver calls in iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_linsolver_steps (integer iNewtonStep)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of linsolver steps in newton step iNewtonStep<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_newton_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of newton steps in history<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_average_convergence ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>total_average_linear_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total average number of linsolver steps per linsolver call<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>total_linsolver_calls ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total number of linsolver calls<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>total_linsolver_steps ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns total number of linsolver steps<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
NewtonSolverCPU1

NewtonSolverCPU1 ()
NewtonSolverCPU1 ()<br>Constructor of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_linear_solver
void
void set_linear_solver (SmartPtr<ILinearOperatorInverseCPU1> linSolver)
void set_linear_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; linSolver)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_convergence_check
void
void set_convergence_check (SmartPtr<IConvergenceCheckCPU1> convCheck)
void set_convergence_check (SmartPtr&lt;<a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a>&gt; convCheck)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_line_search
void
void set_line_search (SmartPtr<ILineSearchCPU1> lineSeach)
void set_line_search (SmartPtr&lt;<a href="ILineSearchCPU1.html">ILineSearchCPU1</a>&gt; lineSeach)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
init
bool
bool init (SmartPtr<IOperatorCPU1> op)
bool init (SmartPtr&lt;<a href="IOperatorCPU1.html">IOperatorCPU1</a>&gt; op)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
prepare
bool
bool prepare (VectorCPU1u)
bool prepare (<a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
apply
bool
bool apply (VectorCPU1u)
bool apply (<a href="VectorCPU1.html">VectorCPU1</a> *u)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns success<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
clear_average_convergence
void
void clear_average_convergence ()
void clear_average_convergence ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
print_average_convergence
void
void print_average_convergence () const
void print_average_convergence ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_newton_steps
integer
integer num_newton_steps () const
integer num_newton_steps ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns number of newton steps in history<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_linsolver_calls
integer
integer num_linsolver_calls (integer iNewtonStep) const
integer num_linsolver_calls (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns number of linsolver calls in iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
num_linsolver_steps
integer
integer num_linsolver_steps (integer iNewtonStep) const
integer num_linsolver_steps (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns number of linsolver steps in newton step iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
average_linear_steps
number
number average_linear_steps (integer iNewtonStep) const
number average_linear_steps (integer iNewtonStep)<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns average number of linsolver steps per linsolver call in newton step iNewtonStep<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_linsolver_calls
integer
integer total_linsolver_calls () const
integer total_linsolver_calls ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns total number of linsolver calls<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_linsolver_steps
integer
integer total_linsolver_steps () const
integer total_linsolver_steps ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns total number of linsolver steps<br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
total_average_linear_steps
number
number total_average_linear_steps () const
number total_average_linear_steps ()<br><br>Member function of class <b>NewtonSolverCPU1</b><br>returns total average number of linsolver steps per linsolver call<br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
AssembledOperator
IOperatorCPU1 
Class <b>AssembledOperatorCPU1</b>, default implementation of group <b>AssembledOperator</b><br>class has constructor. <br>Inheritance: <a href="IOperatorCPU1.html">IOperatorCPU1</a> <a href="AssembledOperatorCPU1.html">AssembledOperatorCPU1</a> <br><table><tr><td colspan=2><h3>AssembledOperatorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledOperatorCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AssembledOperatorCPU1 (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Assembling Routine)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AssembledOperatorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *ass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (const <a href="GridLevel.html">GridLevel</a> *gridLevel)</td></tr><tr><td><br></td></tr></table>
constructor
AssembledOperatorCPU1

AssembledOperatorCPU1 ()
AssembledOperatorCPU1 ()<br>Constructor of class <b>AssembledOperatorCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
constructor
AssembledOperatorCPU1

AssembledOperatorCPU1 (IAssembleCPU1Assembling Routine)
AssembledOperatorCPU1 (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Assembling Routine)<br>Constructor of class <b>AssembledOperatorCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU1ass)
void set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *ass)<br><br>Member function of class <b>AssembledOperatorCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_level
void
void set_level (const GridLevelgridLevel)
void set_level (const <a href="GridLevel.html">GridLevel</a> *gridLevel)<br><br>Member function of class <b>AssembledOperatorCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
init
void
void init ()
void init ()<br><br>Member function of class <b>AssembledOperatorCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
ILineSearch

Class <b>ILineSearchCPU1</b>, default implementation of group <b>ILineSearch</b><br>class has no constructor. <br><table></table>
;
class
StandardLineSearch
ILineSearchCPU1 
Class <b>StandardLineSearchCPU1</b>, default implementation of group <b>StandardLineSearch</b><br>class has constructor. <br>Inheritance: <a href="ILineSearchCPU1.html">ILineSearchCPU1</a> <a href="StandardLineSearchCPU1.html">StandardLineSearchCPU1</a> <br><table><tr><td colspan=2><h3>StandardLineSearchCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StandardLineSearchCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StandardLineSearchCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_accept_best (bool bAcceptBest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_lambda_start (number start)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_defect (number maxDef)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_offset (std_string strOffset)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduce_factor (number factor)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool verboseLevel)</td></tr><tr><td><br></td></tr></table>
constructor
StandardLineSearchCPU1

StandardLineSearchCPU1 ()
StandardLineSearchCPU1 ()<br>Constructor of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer steps)
void set_maximum_steps (integer steps)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_lambda_start
void
void set_lambda_start (number start)
void set_lambda_start (number start)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_reduce_factor
void
void set_reduce_factor (number factor)
void set_reduce_factor (number factor)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_accept_best
void
void set_accept_best (bool bAcceptBest)
void set_accept_best (bool bAcceptBest)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_maximum_defect
void
void set_maximum_defect (number maxDef)
void set_maximum_defect (number maxDef)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_verbose
void
void set_verbose (bool verboseLevel)
void set_verbose (bool verboseLevel)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
memberfunction
set_offset
void
void set_offset (std_string strOffset)
void set_offset (std_string strOffset)<br><br>Member function of class <b>StandardLineSearchCPU1</b><br>group: <b>/ug4/Discretization/Nonlinear</b>
;
class
SolutionTimeSeries

Class <b>SolutionTimeSeriesCPU1</b>, default implementation of group <b>SolutionTimeSeries</b><br>class has constructor. <br><table><tr><td colspan=2><h3>SolutionTimeSeriesCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SolutionTimeSeriesCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>SolutionTimeSeriesCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>latest ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns latest solution<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>oldest ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns oldest solution<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>push (SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; vec, number time)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: adds new time point, not discarding the oldest<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>push_discard_oldest (SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; vec, number time)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns oldest solution<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: adds new time point, oldest solution is discarded and returned<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>SolutionTimeSeriesCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns number of time steps handled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>solution (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the local vector for the i'th time point<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>time (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns point in time for solution<br/></td></tr><tr><td><br></td></tr></table>
constructor
SolutionTimeSeriesCPU1

SolutionTimeSeriesCPU1 ()
SolutionTimeSeriesCPU1 ()<br>Constructor of class <b>SolutionTimeSeriesCPU1</b><br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
push_discard_oldest
SmartPtr<VectorCPU1>
SmartPtr<VectorCPU1> push_discard_oldest (SmartPtr<VectorCPU1> vec, number time)
SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; push_discard_oldest (SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; vec, number time)<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns oldest solution<br>tooltip: adds new time point, oldest solution is discarded and returned<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
push
void
void push (SmartPtr<VectorCPU1> vec, number time)
void push (SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; vec, number time)<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>tooltip: adds new time point, not discarding the oldest<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
oldest
SmartPtr<VectorCPU1>
SmartPtr<VectorCPU1> oldest ()
SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; oldest ()<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns oldest solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
latest
SmartPtr<VectorCPU1>
SmartPtr<VectorCPU1> latest ()
SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; latest ()<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns latest solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
size
integer
integer size () const
integer size ()<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns number of time steps handled<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
solution
ConstSmartPtr<VectorCPU1>
const SmartPtr<VectorCPU1> solution (integer i) const
const SmartPtr&lt;<a href="VectorCPU1.html">VectorCPU1</a>&gt; solution (integer i)<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns the local vector for the i'th time point<br>group: <b>/ug4/Discretization/TimeDisc</b>
memberfunction
time
number
number time (integer i) const
number time (integer i)<br><br>Member function of class <b>SolutionTimeSeriesCPU1</b><br>returns point in time for solution<br>group: <b>/ug4/Discretization/TimeDisc</b>
;
class
CompositeConvCheck
IConvergenceCheckCPU1 
Class <b>CompositeConvCheck2dCPU1</b>, default implementation of group <b>CompositeConvCheck</b><br>class has constructor. <br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="CompositeConvCheck2dCPU1.html">CompositeConvCheck2dCPU1</a> <br><table><tr><td colspan=2><h3>CompositeConvCheck2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheck2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheck2dCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheck2dCPU1

CompositeConvCheck2dCPU1 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
CompositeConvCheck2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>/ug4</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>group: <b>/ug4</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>/ug4</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>/ug4</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheck2dCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>/ug4</b>
;
class
DomainDiscretization
IAssembleCPU1 IDomainDiscretizationCPU1 
Class <b>DomainDiscretization2dCPU1</b>, default implementation of group <b>DomainDiscretization</b><br>class has constructor. <br>Inheritance: <a href="IAssembleCPU1.html">IAssembleCPU1</a> <a href="IDomainDiscretizationCPU1.html">IDomainDiscretizationCPU1</a> <a href="DomainDiscretization2dCPU1.html">DomainDiscretization2dCPU1</a> <br><table><tr><td colspan=2><h3>DomainDiscretization2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DomainDiscretization2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DomainDiscretization2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a>&gt; Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a>&gt; Element Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="IDiscretizationItem2dCPU1.html">IDiscretizationItem2dCPU1</a>&gt; DiscItem)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>force_regular_grid (bool )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IDomainDiscretizationCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *, const SmartPtr&lt;<a href="SolutionTimeSeriesCPU1.html">SolutionTimeSeriesCPU1</a>&gt; , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IAssembleCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>adjust_solution (<a href="VectorCPU1.html">VectorCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_defect (<a href="VectorCPU1.html">VectorCPU1</a> *d(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Defect at a given Solution u.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_jacobian (<a href="MatrixCPU1.html">MatrixCPU1</a> *J(u), const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles jacobian on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_linear (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Assembles Matrix and rhs on surface grid.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_mass_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *M, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles mass matrix on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_rhs (<a href="VectorCPU1.html">VectorCPU1</a> *rhs)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles right-hand side on surface grid for linear case<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assemble_stiffness_matrix (<a href="MatrixCPU1.html">MatrixCPU1</a> *A, const <a href="VectorCPU1.html">VectorCPU1</a> *u)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: assembles stiffness matrix on surface grid<br/></td></tr><tr><td><br></td></tr></table>
constructor
DomainDiscretization2dCPU1

DomainDiscretization2dCPU1 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
DomainDiscretization2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>DomainDiscretization2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainConstraint2dCPU1> Post Process)
void add (SmartPtr&lt;<a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a>&gt; Post Process)<br><br>Member function of class <b>DomainDiscretization2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDomainElemDisc2d> Element Discretization)
void add (SmartPtr&lt;<a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a>&gt; Element Discretization)<br><br>Member function of class <b>DomainDiscretization2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<IDiscretizationItem2dCPU1> DiscItem)
void add (SmartPtr&lt;<a href="IDiscretizationItem2dCPU1.html">IDiscretizationItem2dCPU1</a>&gt; DiscItem)<br><br>Member function of class <b>DomainDiscretization2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
force_regular_grid
void
void force_regular_grid (bool )
void force_regular_grid (bool )<br><br>Member function of class <b>DomainDiscretization2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
IDiscretizationItem

Class <b>IDiscretizationItem2dCPU1</b>, default implementation of group <b>IDiscretizationItem</b><br>class has no constructor. <br><table></table>
;
class
ApproximationSpace
IApproximationSpace 
Class <b>ApproximationSpace2d</b>, default implementation of group <b>ApproximationSpace</b><br>class has constructor. <br>Inheritance: <a href="IApproximationSpace.html">IApproximationSpace</a> <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> <br><table><tr><td colspan=2><h3>ApproximationSpace2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ApproximationSpace2d (SmartPtr&lt;<a href="Domain2d.html">Domain2d</a>&gt; Domain)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ApproximationSpace2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="Domain2d.html">Domain2d</a>&gt; </td><td class="memItemRight" valign=bottom>domain ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ApproximationSpace2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="SurfaceView.html">SurfaceView</a>&gt; </td><td class="memItemRight" valign=bottom>surface_view ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IApproximationSpace Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type, integer Order, c_string Subsets)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type, integer Order)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_fct (c_string Name, c_string Type)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: Adds a function to the Function Pattern<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">help: currently no help available<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>defragment ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_surfaces ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_top_surface ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited IApproximationSpace Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>dim (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>c_string </td><td class="memItemRight" valign=bottom>name (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_fct ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>num_levels ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_layout_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_layout_statistic ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_local_dof_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_local_dof_statistic ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print_statistic ()</td></tr><tr><td><br></td></tr></table>
constructor
ApproximationSpace2d

ApproximationSpace2d (SmartPtr<Domain2d> Domain)
ApproximationSpace2d (SmartPtr&lt;<a href="Domain2d.html">Domain2d</a>&gt; Domain)<br>Constructor of class <b>ApproximationSpace2d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
domain
SmartPtr<Domain2d>
SmartPtr<Domain2d> domain ()
SmartPtr&lt;<a href="Domain2d.html">Domain2d</a>&gt; domain ()<br><br>Member function of class <b>ApproximationSpace2d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
surface_view
ConstSmartPtr<SurfaceView>
const SmartPtr<SurfaceView> surface_view () const
const SmartPtr&lt;<a href="SurfaceView.html">SurfaceView</a>&gt; surface_view ()<br><br>Member function of class <b>ApproximationSpace2d</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunction
VectorCPU1 
Class <b>GridFunction2dCPU1</b>, default implementation of group <b>GridFunction</b><br>class has constructor. <br>Inheritance: <a href="VectorCPU1.html">VectorCPU1</a> <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunction2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunction2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunction2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>assign (const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_transfers ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>clone ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VectorCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VectorCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (number Number)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set_random (number Number, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>size ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Size<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunction2dCPU1

GridFunction2dCPU1 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
GridFunction2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>GridFunction2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
assign
void
void assign (const VectorCPU1Vector)
void assign (const <a href="VectorCPU1.html">VectorCPU1</a> *Vector)<br><br>Member function of class <b>GridFunction2dCPU1</b><br>returns Success<br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clone
SmartPtr<GridFunction2dCPU1>
SmartPtr<GridFunction2dCPU1> clone ()
SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; clone ()<br><br>Member function of class <b>GridFunction2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
add_transfer
void
void add_transfer (SmartPtr<ILocalTransferAlgebraCPU1> )
void add_transfer (SmartPtr&lt;<a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a>&gt; )<br><br>Member function of class <b>GridFunction2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
remove_transfer
void
void remove_transfer (SmartPtr<ILocalTransfer> )
void remove_transfer (SmartPtr&lt;<a href="ILocalTransfer.html">ILocalTransfer</a>&gt; )<br><br>Member function of class <b>GridFunction2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
memberfunction
clear_transfers
void
void clear_transfers ()
void clear_transfers ()<br><br>Member function of class <b>GridFunction2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionNumberData
IUserData UserNumber2d 
Class <b>GridFunctionNumberData2dCPU1</b>, default implementation of group <b>GridFunctionNumberData</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="GridFunctionNumberData2dCPU1.html">GridFunctionNumberData2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionNumberData2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionNumberData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionNumberData2dCPU1

GridFunctionNumberData2dCPU1 (SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component)
GridFunctionNumberData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionNumberData2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionVectorData
IUserData UserVector2d 
Class <b>GridFunctionVectorData2dCPU1</b>, default implementation of group <b>GridFunctionVectorData</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="GridFunctionVectorData2dCPU1.html">GridFunctionVectorData2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorData2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Components)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorData2dCPU1

GridFunctionVectorData2dCPU1 (SmartPtr<GridFunction2dCPU1> GridFunction, c_string Components)
GridFunctionVectorData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Components)<br>Constructor of class <b>GridFunctionVectorData2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
GridFunctionGradientData
IUserData UserVector2d 
Class <b>GridFunctionGradientData2dCPU1</b>, default implementation of group <b>GridFunctionGradientData</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="GridFunctionGradientData2dCPU1.html">GridFunctionGradientData2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionGradientData2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionGradientData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionGradientData2dCPU1

GridFunctionGradientData2dCPU1 (SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component)
GridFunctionGradientData2dCPU1 (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)<br>Constructor of class <b>GridFunctionGradientData2dCPU1</b><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
;
class
UserNumber
IUserData 
Class <b>UserNumber2d</b>, default implementation of group <b>UserNumber</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <br><table><tr><td colspan=2><h3>UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
CondUserNumber
IUserData 
Class <b>CondUserNumber2d</b>, default implementation of group <b>CondUserNumber</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserNumber2d.html">CondUserNumber2d</a> <br><table></table>
;
class
DependentUserDataNumber
IUserData UserNumber2d 
Class <b>DependentUserDataNumber2d</b>, default implementation of group <b>DependentUserDataNumber</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <br><table><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerNumber
IUserData UserNumber2d DependentUserDataNumber2d 
Class <b>DataLinkerNumber2d</b>, default implementation of group <b>DataLinkerNumber</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <br><table><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
ScaleAddLinkerNumber
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Class <b>ScaleAddLinkerNumber2d</b>, default implementation of group <b>ScaleAddLinkerNumber</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="ScaleAddLinkerNumber2d.html">ScaleAddLinkerNumber2d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerNumber2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerNumber2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerNumber2d (const <a href="ScaleAddLinkerNumber2d.html">ScaleAddLinkerNumber2d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerNumber2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerNumber2d

ScaleAddLinkerNumber2d ()
ScaleAddLinkerNumber2d ()<br>Constructor of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerNumber2d

ScaleAddLinkerNumber2d (const ScaleAddLinkerNumber2d)
ScaleAddLinkerNumber2d (const <a href="ScaleAddLinkerNumber2d.html">ScaleAddLinkerNumber2d</a> *)<br>Constructor of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , SmartPtr<UserNumber2d> )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserNumber2d> )
void add (number , SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , number )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserVector
IUserData 
Class <b>UserVector2d</b>, default implementation of group <b>UserVector</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <br><table><tr><td colspan=2><h3>UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
CondUserVector
IUserData 
Class <b>CondUserVector2d</b>, default implementation of group <b>CondUserVector</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserVector2d.html">CondUserVector2d</a> <br><table></table>
;
class
DependentUserDataVector
IUserData UserVector2d 
Class <b>DependentUserDataVector2d</b>, default implementation of group <b>DependentUserDataVector</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="DependentUserDataVector2d.html">DependentUserDataVector2d</a> <br><table><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerVector
IUserData UserVector2d DependentUserDataVector2d 
Class <b>DataLinkerVector2d</b>, default implementation of group <b>DataLinkerVector</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="DependentUserDataVector2d.html">DependentUserDataVector2d</a> <a href="DataLinkerVector2d.html">DataLinkerVector2d</a> <br><table><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
ScaleAddLinkerVector
IUserData UserVector2d DependentUserDataVector2d DataLinkerVector2d 
Class <b>ScaleAddLinkerVector2d</b>, default implementation of group <b>ScaleAddLinkerVector</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="DependentUserDataVector2d.html">DependentUserDataVector2d</a> <a href="DataLinkerVector2d.html">DataLinkerVector2d</a> <a href="ScaleAddLinkerVector2d.html">ScaleAddLinkerVector2d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerVector2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerVector2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerVector2d (const <a href="ScaleAddLinkerVector2d.html">ScaleAddLinkerVector2d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerVector2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerVector2d

ScaleAddLinkerVector2d ()
ScaleAddLinkerVector2d ()<br>Constructor of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerVector2d

ScaleAddLinkerVector2d (const ScaleAddLinkerVector2d)
ScaleAddLinkerVector2d (const <a href="ScaleAddLinkerVector2d.html">ScaleAddLinkerVector2d</a> *)<br>Constructor of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , SmartPtr<UserVector2d> )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserVector2d> )
void add (number , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , number )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserMatrix
IUserData 
Class <b>UserMatrix2d</b>, default implementation of group <b>UserMatrix</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix2d.html">UserMatrix2d</a> <br><table><tr><td colspan=2><h3>UserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
CondUserMatrix
IUserData 
Class <b>CondUserMatrix2d</b>, default implementation of group <b>CondUserMatrix</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserMatrix2d.html">CondUserMatrix2d</a> <br><table></table>
;
class
DependentUserDataMatrix
IUserData UserMatrix2d 
Class <b>DependentUserDataMatrix2d</b>, default implementation of group <b>DependentUserDataMatrix</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix2d.html">UserMatrix2d</a> <a href="DependentUserDataMatrix2d.html">DependentUserDataMatrix2d</a> <br><table><tr><td colspan=2><h3> Inherited UserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerMatrix
IUserData UserMatrix2d DependentUserDataMatrix2d 
Class <b>DataLinkerMatrix2d</b>, default implementation of group <b>DataLinkerMatrix</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix2d.html">UserMatrix2d</a> <a href="DependentUserDataMatrix2d.html">DependentUserDataMatrix2d</a> <a href="DataLinkerMatrix2d.html">DataLinkerMatrix2d</a> <br><table><tr><td colspan=2><h3> Inherited UserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
ScaleAddLinkerMatrix
IUserData UserMatrix2d DependentUserDataMatrix2d DataLinkerMatrix2d 
Class <b>ScaleAddLinkerMatrix2d</b>, default implementation of group <b>ScaleAddLinkerMatrix</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix2d.html">UserMatrix2d</a> <a href="DependentUserDataMatrix2d.html">DependentUserDataMatrix2d</a> <a href="DataLinkerMatrix2d.html">DataLinkerMatrix2d</a> <a href="ScaleAddLinkerMatrix2d.html">ScaleAddLinkerMatrix2d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerMatrix2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerMatrix2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerMatrix2d (const <a href="ScaleAddLinkerMatrix2d.html">ScaleAddLinkerMatrix2d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerMatrix2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerMatrix2d

ScaleAddLinkerMatrix2d ()
ScaleAddLinkerMatrix2d ()<br>Constructor of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerMatrix2d

ScaleAddLinkerMatrix2d (const ScaleAddLinkerMatrix2d)
ScaleAddLinkerMatrix2d (const <a href="ScaleAddLinkerMatrix2d.html">ScaleAddLinkerMatrix2d</a> *)<br>Constructor of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , SmartPtr<UserMatrix2d> )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserMatrix2d> )
void add (number , SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , number )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
UserTensor4
IUserData 
Class <b>UserTensor42d</b>, default implementation of group <b>UserTensor4</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor42d.html">UserTensor42d</a> <br><table><tr><td colspan=2><h3>UserTensor42d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
memberfunction
get_dim
integer
integer get_dim () const
integer get_dim ()<br><br>Member function of class <b>UserTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
type
string
std_string type () const
std_string type ()<br><br>Member function of class <b>UserTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
CondUserTensor4
IUserData 
Class <b>CondUserTensor42d</b>, default implementation of group <b>CondUserTensor4</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="CondUserTensor42d.html">CondUserTensor42d</a> <br><table></table>
;
class
DependentUserDataTensor4
IUserData UserTensor42d 
Class <b>DependentUserDataTensor42d</b>, default implementation of group <b>DependentUserDataTensor4</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor42d.html">UserTensor42d</a> <a href="DependentUserDataTensor42d.html">DependentUserDataTensor42d</a> <br><table><tr><td colspan=2><h3> Inherited UserTensor42d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
DataLinkerTensor4
IUserData UserTensor42d DependentUserDataTensor42d 
Class <b>DataLinkerTensor42d</b>, default implementation of group <b>DataLinkerTensor4</b><br>class has no constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor42d.html">UserTensor42d</a> <a href="DependentUserDataTensor42d.html">DependentUserDataTensor42d</a> <a href="DataLinkerTensor42d.html">DataLinkerTensor42d</a> <br><table><tr><td colspan=2><h3> Inherited UserTensor42d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
;
class
ScaleAddLinkerTensor4
IUserData UserTensor42d DependentUserDataTensor42d DataLinkerTensor42d 
Class <b>ScaleAddLinkerTensor42d</b>, default implementation of group <b>ScaleAddLinkerTensor4</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserTensor42d.html">UserTensor42d</a> <a href="DependentUserDataTensor42d.html">DependentUserDataTensor42d</a> <a href="DataLinkerTensor42d.html">DataLinkerTensor42d</a> <a href="ScaleAddLinkerTensor42d.html">ScaleAddLinkerTensor42d</a> <br><table><tr><td colspan=2><h3>ScaleAddLinkerTensor42d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerTensor42d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ScaleAddLinkerTensor42d (const <a href="ScaleAddLinkerTensor42d.html">ScaleAddLinkerTensor42d</a> *)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ScaleAddLinkerTensor42d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserTensor42d.html">UserTensor42d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , SmartPtr&lt;<a href="UserTensor42d.html">UserTensor42d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserTensor42d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ScaleAddLinkerTensor42d

ScaleAddLinkerTensor42d ()
ScaleAddLinkerTensor42d ()<br>Constructor of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ScaleAddLinkerTensor42d

ScaleAddLinkerTensor42d (const ScaleAddLinkerTensor42d)
ScaleAddLinkerTensor42d (const <a href="ScaleAddLinkerTensor42d.html">ScaleAddLinkerTensor42d</a> *)<br>Constructor of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , SmartPtr<UserTensor42d> )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserTensor42d.html">UserTensor42d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , SmartPtr<UserTensor42d> )
void add (number , SmartPtr&lt;<a href="UserTensor42d.html">UserTensor42d</a>&gt; )<br><br>Member function of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> , number )
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , number )<br><br>Member function of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
add
void
void add (number , number )
void add (number , number )<br><br>Member function of class <b>ScaleAddLinkerTensor42d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserNumber
IUserData UserNumber2d 
Class <b>ConstUserNumber2d</b>, default implementation of group <b>ConstUserNumber</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="ConstUserNumber2d.html">ConstUserNumber2d</a> <br><table><tr><td colspan=2><h3>ConstUserNumber2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserNumber2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserNumber2d (number Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserNumber2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set (number Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserNumber2d

ConstUserNumber2d ()
ConstUserNumber2d ()<br>Constructor of class <b>ConstUserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserNumber2d

ConstUserNumber2d (number Value)
ConstUserNumber2d (number Value)<br>Constructor of class <b>ConstUserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set
void
void set (number Value)
void set (number Value)<br><br>Member function of class <b>ConstUserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserNumber2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserVector
IUserData UserVector2d 
Class <b>ConstUserVector2d</b>, default implementation of group <b>ConstUserVector</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="ConstUserVector2d.html">ConstUserVector2d</a> <br><table><tr><td colspan=2><h3>ConstUserVector2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserVector2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserVector2d (number Values)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserVector2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_all_entries (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_entry (integer , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserVector2d

ConstUserVector2d ()
ConstUserVector2d ()<br>Constructor of class <b>ConstUserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserVector2d

ConstUserVector2d (number Values)
ConstUserVector2d (number Values)<br>Constructor of class <b>ConstUserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_all_entries
void
void set_all_entries (number )
void set_all_entries (number )<br><br>Member function of class <b>ConstUserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_entry
void
void set_entry (integer , number )
void set_entry (integer , number )<br><br>Member function of class <b>ConstUserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserVector2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
ConstUserMatrix
IUserData UserMatrix2d 
Class <b>ConstUserMatrix2d</b>, default implementation of group <b>ConstUserMatrix</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserMatrix2d.html">UserMatrix2d</a> <a href="ConstUserMatrix2d.html">ConstUserMatrix2d</a> <br><table><tr><td colspan=2><h3>ConstUserMatrix2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserMatrix2d ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstUserMatrix2d (number Diagonal Value)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserMatrix2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_all_entries (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diag_tensor (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_entry (integer , integer , number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstUserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserMatrix2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstUserMatrix2d

ConstUserMatrix2d ()
ConstUserMatrix2d ()<br>Constructor of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
constructor
ConstUserMatrix2d

ConstUserMatrix2d (number Diagonal Value)
ConstUserMatrix2d (number Diagonal Value)<br>Constructor of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_diag_tensor
void
void set_diag_tensor (number )
void set_diag_tensor (number )<br><br>Member function of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_all_entries
void
void set_all_entries (number )
void set_all_entries (number )<br><br>Member function of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_entry
void
void set_entry (integer , integer , number )
void set_entry (integer , integer , number )<br><br>Member function of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
print
void
void print () const
void print ()<br><br>Member function of class <b>ConstUserMatrix2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
DarcyVelocityLinker
IUserData UserVector2d DependentUserDataVector2d DataLinkerVector2d 
Class <b>DarcyVelocityLinker2d</b>, default implementation of group <b>DarcyVelocityLinker</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserVector2d.html">UserVector2d</a> <a href="DependentUserDataVector2d.html">DependentUserDataVector2d</a> <a href="DataLinkerVector2d.html">DataLinkerVector2d</a> <a href="DarcyVelocityLinker2d.html">DarcyVelocityLinker2d</a> <br><table><tr><td colspan=2><h3>DarcyVelocityLinker2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DarcyVelocityLinker2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DarcyVelocityLinker2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_pressure_gradient (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserVector2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
DarcyVelocityLinker2d

DarcyVelocityLinker2d ()
DarcyVelocityLinker2d ()<br>Constructor of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber2d> )
void set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector2d> )
void set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_permeability
void
void set_permeability (number )
void set_permeability (number )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix2d> )
void set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_pressure_gradient
void
void set_pressure_gradient (SmartPtr<UserVector2d> )
void set_pressure_gradient (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_viscosity
void
void set_viscosity (number )
void set_viscosity (number )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber2d> )
void set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>DarcyVelocityLinker2d</b><br>group: <b>/ug4/Discretization/SpatialDisc/UserData</b>
;
class
IDomainConstraint
IConstraintCPU1 
Class <b>IDomainConstraint2dCPU1</b>, default implementation of group <b>IDomainConstraint</b><br>class has no constructor. <br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a> <br><table></table>
;
class
OneSideP1Constraints
IConstraintCPU1 IDomainConstraint2dCPU1 
Class <b>OneSideP1Constraints2dCPU1</b>, default implementation of group <b>OneSideP1Constraints</b><br>class has constructor. <br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a> <a href="OneSideP1Constraints2dCPU1.html">OneSideP1Constraints2dCPU1</a> <br><table><tr><td colspan=2><h3>OneSideP1Constraints2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>OneSideP1Constraints2dCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
OneSideP1Constraints2dCPU1

OneSideP1Constraints2dCPU1 ()
OneSideP1Constraints2dCPU1 ()<br>Constructor of class <b>OneSideP1Constraints2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
SymP1Constraints
IConstraintCPU1 IDomainConstraint2dCPU1 
Class <b>SymP1Constraints2dCPU1</b>, default implementation of group <b>SymP1Constraints</b><br>class has constructor. <br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a> <a href="SymP1Constraints2dCPU1.html">SymP1Constraints2dCPU1</a> <br><table><tr><td colspan=2><h3>SymP1Constraints2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>SymP1Constraints2dCPU1 ()</td></tr><tr><td><br></td></tr></table>
constructor
SymP1Constraints2dCPU1

SymP1Constraints2dCPU1 ()
SymP1Constraints2dCPU1 ()<br>Constructor of class <b>SymP1Constraints2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
DirichletBoundary
IConstraintCPU1 IDomainConstraint2dCPU1 
Class <b>DirichletBoundary2dCPU1</b>, default implementation of group <b>DirichletBoundary</b><br>class has constructor. <br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a> <a href="DirichletBoundary2dCPU1.html">DirichletBoundary2dCPU1</a> <br><table><tr><td colspan=2><h3>DirichletBoundary2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletBoundary2dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletBoundary2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Vector, c_string Functions, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (number ConstantValue, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add (c_string LuaCallback, c_string Function, c_string Subsets)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletBoundary2dCPU1

DirichletBoundary2dCPU1 ()
DirichletBoundary2dCPU1 ()<br>Constructor of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<CondUserNumber2d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="CondUserNumber2d.html">CondUserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserNumber2d> Value, c_string Function, c_string Subsets)
void add (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Value, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (SmartPtr<UserVector2d> Vector, c_string Functions, c_string Subsets)
void add (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Vector, c_string Functions, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (number ConstantValue, c_string Function, c_string Subsets)
void add (number ConstantValue, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
add
void
void add (c_string LuaCallback, c_string Function, c_string Subsets)
void add (c_string LuaCallback, c_string Function, c_string Subsets)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace2d> ApproximationSpace)
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
memberfunction
clear
void
void clear ()
void clear ()<br><br>Member function of class <b>DirichletBoundary2dCPU1</b><br>group: <b>/ug4/Discretization/SpatialDisc</b>
;
class
ITransferOperator

Class <b>ITransferOperatorCPU1</b>, default implementation of group <b>ITransferOperator</b><br>class has no constructor. <br><table></table>
;
class
ITransferPostProcess

Class <b>ITransferPostProcessCPU1</b>, default implementation of group <b>ITransferPostProcess</b><br>class has no constructor. <br><table></table>
;
class
StdTransfer
ITransferOperatorCPU1 
Class <b>StdTransfer2dCPU1</b>, default implementation of group <b>StdTransfer</b><br>class has constructor. <br>Inheritance: <a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a> <a href="StdTransfer2dCPU1.html">StdTransfer2dCPU1</a> <br><table><tr><td colspan=2><h3>StdTransfer2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer2dCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>StdTransfer2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>StdTransfer2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_constraint (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction_damping (number )</td></tr><tr><td><br></td></tr></table>
constructor
StdTransfer2dCPU1

StdTransfer2dCPU1 ()
StdTransfer2dCPU1 ()<br>Constructor of class <b>StdTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
StdTransfer2dCPU1

StdTransfer2dCPU1 (SmartPtr<ApproximationSpace2d> Approximation Space)
StdTransfer2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>StdTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction_damping
void
void set_restriction_damping (number )
void set_restriction_damping (number )<br><br>Member function of class <b>StdTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_constraint
void
void add_constraint (SmartPtr<IConstraintCPU1> )
void add_constraint (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; )<br><br>Member function of class <b>StdTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )<br><br>Member function of class <b>StdTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
InjectionTransfer
ITransferOperatorCPU1 
Class <b>InjectionTransfer2dCPU1</b>, default implementation of group <b>InjectionTransfer</b><br>class has constructor. <br>Inheritance: <a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a> <a href="InjectionTransfer2dCPU1.html">InjectionTransfer2dCPU1</a> <br><table><tr><td colspan=2><h3>InjectionTransfer2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer2dCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InjectionTransfer2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr></table>
constructor
InjectionTransfer2dCPU1

InjectionTransfer2dCPU1 ()
InjectionTransfer2dCPU1 ()<br>Constructor of class <b>InjectionTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
constructor
InjectionTransfer2dCPU1

InjectionTransfer2dCPU1 (SmartPtr<ApproximationSpace2d> Approximation Space)
InjectionTransfer2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>InjectionTransfer2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
AverageComponent
ITransferPostProcessCPU1 
Class <b>AverageComponent2dCPU1</b>, default implementation of group <b>AverageComponent</b><br>class has constructor. <br>Inheritance: <a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a> <a href="AverageComponent2dCPU1.html">AverageComponent2dCPU1</a> <br><table><tr><td colspan=2><h3>AverageComponent2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>AverageComponent2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space, c_string Components)</td></tr><tr><td><br></td></tr></table>
constructor
AverageComponent2dCPU1

AverageComponent2dCPU1 (SmartPtr<ApproximationSpace2d> Approximation Space, c_string Components)
AverageComponent2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space, c_string Components)<br>Constructor of class <b>AverageComponent2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
GeometricMultiGrid
ILinearIteratorCPU1 
Class <b>GeometricMultiGrid2dCPU1</b>, default implementation of group <b>GeometricMultiGrid</b><br>class has constructor. <br>Inheritance: <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="GeometricMultiGrid2dCPU1.html">GeometricMultiGrid2dCPU1</a> <br><table><tr><td colspan=2><h3>GeometricMultiGrid2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GeometricMultiGrid2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GeometricMultiGrid2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Prolongation Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Restriction Post Process)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_level (integer Base Level)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Base Solver)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer Cycle Type)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Discretization)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer Number PostSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer Number PreSmooth Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_base_solver (bool Specifies if base solver works in parallel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Projection)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Prolongation)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Restriction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Transfer)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
GeometricMultiGrid2dCPU1

GeometricMultiGrid2dCPU1 (SmartPtr<ApproximationSpace2d> Approximation Space)
GeometricMultiGrid2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; Approximation Space)<br>Constructor of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_discretization
void
void set_discretization (IAssembleCPU1Discretization)
void set_discretization (<a href="IAssembleCPU1.html">IAssembleCPU1</a> *Discretization)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_level
void
void set_base_level (integer Base Level)
void set_base_level (integer Base Level)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_parallel_base_solver
void
void set_parallel_base_solver (bool Specifies if base solver works in parallel)
void set_parallel_base_solver (bool Specifies if base solver works in parallel)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU1> Base Solver)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; Base Solver)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_smoother
void
void set_smoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU1> Smoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; Smoother)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer Cycle Type)
void set_cycle_type (integer Cycle Type)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer Number PreSmooth Steps)
void set_num_presmooth (integer Number PreSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer Number PostSmooth Steps)
void set_num_postsmooth (integer Number PostSmooth Steps)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_transfer
void
void set_transfer (SmartPtr<ITransferOperatorCPU1> Transfer)
void set_transfer (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Transfer)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_prolongation
void
void set_prolongation (SmartPtr<ITransferOperatorCPU1> Prolongation)
void set_prolongation (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Prolongation)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_restriction
void
void set_restriction (SmartPtr<ITransferOperatorCPU1> Restriction)
void set_restriction (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Restriction)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_projection
void
void set_projection (SmartPtr<ITransferOperatorCPU1> Projection)
void set_projection (SmartPtr&lt;<a href="ITransferOperatorCPU1.html">ITransferOperatorCPU1</a>&gt; Projection)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_prolongation_post_process
void
void add_prolongation_post_process (SmartPtr<ITransferPostProcessCPU1> Prolongation Post Process)
void add_prolongation_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Prolongation Post Process)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
add_restriction_post_process
void
void add_restriction_post_process (SmartPtr<ITransferPostProcessCPU1> Restriction Post Process)
void add_restriction_post_process (SmartPtr&lt;<a href="ITransferPostProcessCPU1.html">ITransferPostProcessCPU1</a>&gt; Restriction Post Process)<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
memberfunction
set_debug
void
void set_debug (SmartPtr<IDebugWriterCPU1> )
void set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; )<br><br>Member function of class <b>GeometricMultiGrid2dCPU1</b><br>group: <b>/ug4/Discretization/MultiGrid</b>
;
class
VTKOutput

Class <b>VTKOutput2d</b>, default implementation of group <b>VTKOutput</b><br>class has constructor. <br><table><tr><td colspan=2><h3>VTKOutput2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>VTKOutput2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>VTKOutput2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>clear_selection ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, integer , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, integer , number , bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_all (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_element (c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>select_nodal (c_string , c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_time_pvd (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
VTKOutput2d

VTKOutput2d ()
VTKOutput2d ()<br>Constructor of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
clear_selection
void
void clear_selection ()
void clear_selection ()<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_all
void
void select_all (bool )
void select_all (bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (c_string , c_string )
void select_nodal (c_string , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (SmartPtr<UserNumber2d> , c_string )
void select_nodal (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_nodal
void
void select_nodal (SmartPtr<UserVector2d> , c_string )
void select_nodal (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (c_string , c_string )
void select_element (c_string , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (SmartPtr<UserNumber2d> , c_string )
void select_element (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
select_element
void
void select_element (SmartPtr<UserVector2d> , c_string )
void select_element (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , c_string )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction2dCPU1)
void write_time_pvd (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction2dCPU2)
void write_time_pvd (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
write_time_pvd
void
void write_time_pvd (c_string , GridFunction2dCPU3)
void write_time_pvd (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU1, integer , number , bool )
void print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU1, integer , number )
void print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, integer , number )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU1, bool )
void print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU1)
void print (c_string , <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU2, integer , number , bool )
void print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU2, integer , number )
void print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, integer , number )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU2, bool )
void print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU2)
void print (c_string , <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU3, integer , number , bool )
void print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, integer , number , bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU3, integer , number )
void print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, integer , number )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU3, bool )
void print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, bool )<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
print
void
void print (c_string , GridFunction2dCPU3)
void print (c_string , <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *)<br><br>Member function of class <b>VTKOutput2d</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionDebugWriter
IVectorDebugWriterCPU1 IDebugWriterCPU1 
Class <b>GridFunctionDebugWriter2dCPU1</b>, default implementation of group <b>GridFunctionDebugWriter</b><br>class has constructor. <br>Inheritance: <a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a> <a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a> <a href="GridFunctionDebugWriter2dCPU1.html">GridFunctionDebugWriter2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionDebugWriter2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionDebugWriter2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionDebugWriter2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_dir (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_conn_viewer_output (bool cvOutput)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_print_consistent (bool printConsistent)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_vtk_output (bool vtkOutput)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionDebugWriter2dCPU1

GridFunctionDebugWriter2dCPU1 (SmartPtr<ApproximationSpace2d> )
GridFunctionDebugWriter2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br>Constructor of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
reset
void
void reset ()
void reset ()<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_vtk_output
void
void set_vtk_output (bool vtkOutput)
void set_vtk_output (bool vtkOutput)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_conn_viewer_output
void
void set_conn_viewer_output (bool cvOutput)
void set_conn_viewer_output (bool cvOutput)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_print_consistent
void
void set_print_consistent (bool printConsistent)
void set_print_consistent (bool printConsistent)<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_base_dir
void
void set_base_dir (c_string )
void set_base_dir (c_string )<br><br>Member function of class <b>GridFunctionDebugWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionPositionProvider
IPositionProvider2d 
Class <b>GridFunctionPositionProvider2dCPU1</b>, default implementation of group <b>GridFunctionPositionProvider</b><br>class has constructor. <br>Inheritance: <a href="IPositionProvider2d.html">IPositionProvider2d</a> <a href="GridFunctionPositionProvider2dCPU1.html">GridFunctionPositionProvider2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionPositionProvider2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionPositionProvider2dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionPositionProvider2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *gridFunction)</td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionPositionProvider2dCPU1

GridFunctionPositionProvider2dCPU1 ()
GridFunctionPositionProvider2dCPU1 ()<br>Constructor of class <b>GridFunctionPositionProvider2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction2dCPU1gridFunction)
void set_reference_grid_function (const <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *gridFunction)<br><br>Member function of class <b>GridFunctionPositionProvider2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriter
IVectorWriterCPU1 
Class <b>GridFunctionVectorWriter2dCPU1</b>, default implementation of group <b>GridFunctionVectorWriter</b><br>class has constructor. <br>Inheritance: <a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> <a href="GridFunctionVectorWriter2dCPU1.html">GridFunctionVectorWriter2dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriter2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriter2dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriter2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reference_grid_function (const <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *gridFunction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_user_data (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; userData)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU1.html">VectorCPU1</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriter2dCPU1

GridFunctionVectorWriter2dCPU1 ()
GridFunctionVectorWriter2dCPU1 ()<br>Constructor of class <b>GridFunctionVectorWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_reference_grid_function
void
void set_reference_grid_function (const GridFunction2dCPU1gridFunction)
void set_reference_grid_function (const <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *gridFunction)<br><br>Member function of class <b>GridFunctionVectorWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_user_data
void
void set_user_data (SmartPtr<UserNumber2d> userData)
void set_user_data (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; userData)<br><br>Member function of class <b>GridFunctionVectorWriter2dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
GridFunctionVectorWriterDirichlet0
IVectorWriterCPU1 
Class <b>GridFunctionVectorWriterDirichlet02dCPU1</b>, default implementation of group <b>GridFunctionVectorWriterDirichlet0</b><br>class has constructor. <br>Inheritance: <a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> <a href="GridFunctionVectorWriterDirichlet02dCPU1.html">GridFunctionVectorWriterDirichlet02dCPU1</a> <br><table><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet02dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>GridFunctionVectorWriterDirichlet02dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>GridFunctionVectorWriterDirichlet02dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; postProcess, <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *approxSpace)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_level (integer level)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited IVectorWriterCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>update (<a href="VectorCPU1.html">VectorCPU1</a> *v)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: updates the vector v<br/></td></tr><tr><td><br></td></tr></table>
constructor
GridFunctionVectorWriterDirichlet02dCPU1

GridFunctionVectorWriterDirichlet02dCPU1 ()
GridFunctionVectorWriterDirichlet02dCPU1 ()<br>Constructor of class <b>GridFunctionVectorWriterDirichlet02dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
init
void
void init (SmartPtr<IConstraintCPU1> postProcess, ApproximationSpace2dapproxSpace)
void init (SmartPtr&lt;<a href="IConstraintCPU1.html">IConstraintCPU1</a>&gt; postProcess, <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *approxSpace)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet02dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
memberfunction
set_level
void
void set_level (integer level)
void set_level (integer level)<br><br>Member function of class <b>GridFunctionVectorWriterDirichlet02dCPU1</b><br>group: <b>/ug4/Discretization/Output</b>
;
class
ILocalTransferAlgebra
ILocalTransfer 
Class <b>ILocalTransferAlgebraCPU1</b>, default implementation of group <b>ILocalTransferAlgebra</b><br>class has no constructor. <br>Inheritance: <a href="ILocalTransfer.html">ILocalTransfer</a> <a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a> <br><table></table>
;
class
P1LocalTransfer
ILocalTransfer ILocalTransferAlgebraCPU1 
Class <b>P1LocalTransferCPU1</b>, default implementation of group <b>P1LocalTransfer</b><br>class has constructor. <br>Inheritance: <a href="ILocalTransfer.html">ILocalTransfer</a> <a href="ILocalTransferAlgebraCPU1.html">ILocalTransferAlgebraCPU1</a> <a href="P1LocalTransferCPU1.html">P1LocalTransferCPU1</a> <br><table><tr><td colspan=2><h3>P1LocalTransferCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>P1LocalTransferCPU1 (integer fct)</td></tr><tr><td><br></td></tr></table>
constructor
P1LocalTransferCPU1

P1LocalTransferCPU1 (integer fct)
P1LocalTransferCPU1 (integer fct)<br>Constructor of class <b>P1LocalTransferCPU1</b>
;
class
RSAMGPreconditioner
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 AMGBaseCPU1 
Class <b>RSAMGPreconditionerCPU1</b>, default implementation of group <b>RSAMGPreconditioner</b><br>class has constructor. <br>Ruge-Stueben Algebraic Multigrid Preconditioner<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="AMGBaseCPU1.html">AMGBaseCPU1</a> <a href="RSAMGPreconditionerCPU1.html">RSAMGPreconditionerCPU1</a> <br><table><tr><td colspan=2><h3>RSAMGPreconditionerCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>RSAMGPreconditionerCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>RSAMGPreconditionerCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>disable_aggressive_coarsening ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: disables aggressive coarsening<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>enable_aggressive_coarsening_A (integer nrOfPaths)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: enables aggressive coarsening (A1 or A2) on the first level.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_epsilon_strong (number epsilon_str)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets epsilon_strong, a measure for strong connectivity<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation_truncation (number prolongation_tr)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the truncation of interpolation<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>RSAMGPreconditionerCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_epsilon_strong ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns epsilon_strong<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_prolongation_truncation ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns prolongation_tr<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>is_aggressive_coarsening ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>is_aggressive_coarsening_A (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>tostring ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited AMGBaseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check2 (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_fsmoothing ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y_cycle (integer , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; basesmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_checkLevel_post_iterations (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer gamma)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_fsmoothing (bool enable)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix_write_path (c_string matrixWritePath)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: set the path where connectionviewer matrices of the levels are written<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_fill_before_base (number fillrate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_levels (integer max_levels)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_nodes_for_base (integer maxNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_min_nodes_on_one_processor (integer minNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_nr_of_preiterations_at_check (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: nr of mg cycles performed before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer nu2)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer nu1)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_one_init (bool b)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; postsmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preiterations_mimum_defect_at_check (number d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: minimum defect for preiterations before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; presmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_interfaces ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited AMGBaseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_cycle_type ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>get_fsmoothing ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns f smoothing enabled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_grid_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns grid complexity c_G<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="AMGLevelInformationCPU1.html">AMGLevelInformationCPU1</a> *</td><td class="memItemRight" valign=bottom>get_level_information (integer L)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns information about the level L<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_max_fill_before_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_nodes_for_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_min_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns minNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_postsmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_presmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_operator_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns operator complexity c_A<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_preferred_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns preferredNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_coarse_solver_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent in the coarse solver setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_whole_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent on the whole setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_used_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns used nr of AMG levels<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
RSAMGPreconditionerCPU1

RSAMGPreconditionerCPU1 ()
RSAMGPreconditionerCPU1 ()<br>Constructor of class <b>RSAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_epsilon_strong
void
void set_epsilon_strong (number epsilon_str)
void set_epsilon_strong (number epsilon_str)<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>tooltip: sets epsilon_strong, a measure for strong connectivity<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_prolongation_truncation
void
void set_prolongation_truncation (number prolongation_tr)
void set_prolongation_truncation (number prolongation_tr)<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>tooltip: sets the truncation of interpolation<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
enable_aggressive_coarsening_A
void
void enable_aggressive_coarsening_A (integer nrOfPaths)
void enable_aggressive_coarsening_A (integer nrOfPaths)<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>tooltip: enables aggressive coarsening (A1 or A2) on the first level.<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
disable_aggressive_coarsening
void
void disable_aggressive_coarsening ()
void disable_aggressive_coarsening ()<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>tooltip: disables aggressive coarsening<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_parallel_coarsening
void
void set_parallel_coarsening (IParallelCoarsening)
void set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *)<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_epsilon_strong
number
number get_epsilon_strong () const
number get_epsilon_strong ()<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>returns epsilon_strong<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_prolongation_truncation
number
number get_prolongation_truncation () const
number get_prolongation_truncation ()<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>returns prolongation_tr<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
tostring
void
void tostring () const
void tostring ()<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
is_aggressive_coarsening
bool
bool is_aggressive_coarsening () const
bool is_aggressive_coarsening ()<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
is_aggressive_coarsening_A
bool
bool is_aggressive_coarsening_A (integer ) const
bool is_aggressive_coarsening_A (integer )<br><br>Member function of class <b>RSAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
FAMGPreconditioner
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 AMGBaseCPU1 
Class <b>FAMGPreconditionerCPU1</b>, default implementation of group <b>FAMGPreconditioner</b><br>class has constructor. <br>Filtering Algebraic Multigrid<br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="AMGBaseCPU1.html">AMGBaseCPU1</a> <a href="FAMGPreconditionerCPU1.html">FAMGPreconditionerCPU1</a> <br><table><tr><td colspan=2><h3>FAMGPreconditionerCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FAMGPreconditionerCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FAMGPreconditionerCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_testvector (<a href="VectorCPU1.html">VectorCPU1</a> *adds a testvector with weight, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns testVector#weight<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>add_testvector (<a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> *adds a testvector with weight by using the IVectorWriter interface, number )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns testVector#weight<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector (integer fromlevel, integer tolevel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector (integer fromlevel)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_testvector ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_strong_connection_external ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>reset_testvectors ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: we can restrict the number of parent nodes by looking at the entries of H(i,j) to prevent high fill in rates (e.g. 1e-3)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_aggressive_coarsening (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damping_for_smoother_in_interpolation_calculation (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_after_communciate_prolongation (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_aggressive_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_calculate_parent_pairs (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_coloring (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_communicate_prolongation (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_external_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_get_ratings (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_overlap (integer , integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_phase_3 (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_precalculate_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_recv_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_send_coarsening (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug_level_testvector_calc (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_delta (number delta)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: "Interpolation quality" F may not be worse than this (F < m_delta). e.g. 0.5<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns bExternalCoarsening<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_galerkin_truncation (number galerkin_tr)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets galerkin truncation, a parameter used to truncate the galerkin product. use with care! (like 1e-9)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *parallelCoarsening)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: e.g. GetColorCoarsening()<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prereduce_A_parameter (number prereduceA)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: by setting this != 0.0, we reduce the matrix A before using it to its strong connections. (e.g. 1e-3)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_prolongation_truncation (number prolongation_tr)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets prolongation_truncation, a parameter used for truncation of interpolation. use with care! (like 1e-5)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_read_coarsening ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns epsilon<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_from_matrix_rows ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; sets the smoother to smooth testvectors)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns smoother<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvector_smooths (integer number of smoothing steps to smooth testvectors)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns n<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_testvectors_LE (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_theta (number theta)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: with multiple parents paris, discard pairs with m_theta * F > min F. e.g. 0.9<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_use_precalculate (bool bUsePrecalculate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: experimental way of coarsening. beta.<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_coarsening ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_f_values (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns bWrite<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FAMGPreconditionerCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_H_reduce_interpolation_nodes_parameter ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns HreduceParameter<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_delta ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns delta<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_galerkin_truncation ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns galerkin_tr<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_prereduce_A_parameter ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns prereduceA<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_prolongation_truncation ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns prolongation_tr<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_theta ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns theta<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>tostring ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited AMGBaseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check2 (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_fsmoothing ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y_cycle (integer , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; basesmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_checkLevel_post_iterations (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer gamma)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_fsmoothing (bool enable)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix_write_path (c_string matrixWritePath)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: set the path where connectionviewer matrices of the levels are written<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_fill_before_base (number fillrate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_levels (integer max_levels)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_nodes_for_base (integer maxNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_min_nodes_on_one_processor (integer minNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_nr_of_preiterations_at_check (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: nr of mg cycles performed before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer nu2)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer nu1)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_one_init (bool b)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; postsmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preiterations_mimum_defect_at_check (number d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: minimum defect for preiterations before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; presmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_interfaces ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited AMGBaseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_cycle_type ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>get_fsmoothing ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns f smoothing enabled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_grid_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns grid complexity c_G<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="AMGLevelInformationCPU1.html">AMGLevelInformationCPU1</a> *</td><td class="memItemRight" valign=bottom>get_level_information (integer L)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns information about the level L<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_max_fill_before_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_nodes_for_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_min_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns minNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_postsmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_presmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_operator_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns operator complexity c_A<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_preferred_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns preferredNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_coarse_solver_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent in the coarse solver setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_whole_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent on the whole setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_used_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns used nr of AMG levels<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
constructor
FAMGPreconditionerCPU1

FAMGPreconditionerCPU1 ()
FAMGPreconditionerCPU1 ()<br>Constructor of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_aggressive_coarsening
void
void set_aggressive_coarsening (bool )
void set_aggressive_coarsening (bool )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_delta
void
void set_delta (number delta)
void set_delta (number delta)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: "Interpolation quality" F may not be worse than this (F < m_delta). e.g. 0.5<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_theta
void
void set_theta (number theta)
void set_theta (number theta)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: with multiple parents paris, discard pairs with m_theta * F > min F. e.g. 0.9<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_damping_for_smoother_in_interpolation_calculation
void
void set_damping_for_smoother_in_interpolation_calculation (number )
void set_damping_for_smoother_in_interpolation_calculation (number )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
add_testvector
void
void add_testvector (VectorCPU1adds a testvector with weight, number )
void add_testvector (<a href="VectorCPU1.html">VectorCPU1</a> *adds a testvector with weight, number )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns testVector#weight<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
add_testvector
void
void add_testvector (IVectorWriterCPU1adds a testvector with weight by using the IVectorWriter interface, number )
void add_testvector (<a href="IVectorWriterCPU1.html">IVectorWriterCPU1</a> *adds a testvector with weight by using the IVectorWriter interface, number )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns testVector#weight<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_testvectors
void
void set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)
void set_write_testvectors (bool if true, write testvectors to path specified in set_matrix_write_path)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns bWrite<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_smoother
void
void set_testvector_smoother (SmartPtr<ILinearIteratorCPU1> sets the smoother to smooth testvectors)
void set_testvector_smoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; sets the smoother to smooth testvectors)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns smoother<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_smooths
void
void set_testvector_smooths (integer number of smoothing steps to smooth testvectors)
void set_testvector_smooths (integer number of smoothing steps to smooth testvectors)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns n<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvector_from_matrix_rows
void
void set_testvector_from_matrix_rows ()
void set_testvector_from_matrix_rows ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_testvectors_LE
void
void set_testvectors_LE (number )
void set_testvectors_LE (number )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
reset_testvectors
void
void reset_testvectors ()
void reset_testvectors ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_prolongation_truncation
void
void set_prolongation_truncation (number prolongation_tr)
void set_prolongation_truncation (number prolongation_tr)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: sets prolongation_truncation, a parameter used for truncation of interpolation. use with care! (like 1e-5)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_galerkin_truncation
void
void set_galerkin_truncation (number galerkin_tr)
void set_galerkin_truncation (number galerkin_tr)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: sets galerkin truncation, a parameter used to truncate the galerkin product. use with care! (like 1e-9)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_H_reduce_interpolation_nodes_parameter
void
void set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)
void set_H_reduce_interpolation_nodes_parameter (number HreduceParameter)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: we can restrict the number of parent nodes by looking at the entries of H(i,j) to prevent high fill in rates (e.g. 1e-3)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_prereduce_A_parameter
void
void set_prereduce_A_parameter (number prereduceA)
void set_prereduce_A_parameter (number prereduceA)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: by setting this != 0.0, we reduce the matrix A before using it to its strong connections. (e.g. 1e-3)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_external_coarsening
void
void set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)
void set_external_coarsening (bool You need to set_parallel_coarsening in parallel.)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns bExternalCoarsening<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_strong_connection_external
void
void set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))
void set_strong_connection_external (number set strong_connection value for coarsening (like set_epsilon_strong in RSAMG))<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns epsilon<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_strong_connection_external
number
number get_strong_connection_external ()
number get_strong_connection_external ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_coarsening
void
void set_write_coarsening ()
void set_write_coarsening ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_read_coarsening
void
void set_read_coarsening ()
void set_read_coarsening ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_parallel_coarsening
void
void set_parallel_coarsening (IParallelCoarseningparallelCoarsening)
void set_parallel_coarsening (<a href="IParallelCoarsening.html">IParallelCoarsening</a> *parallelCoarsening)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: e.g. GetColorCoarsening()<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_use_precalculate
void
void set_use_precalculate (bool bUsePrecalculate)
void set_use_precalculate (bool bUsePrecalculate)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>tooltip: experimental way of coarsening. beta.<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_overlap
void
void set_debug_level_overlap (integer , integer )
void set_debug_level_overlap (integer , integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_testvector_calc
void
void set_debug_level_testvector_calc (integer )
void set_debug_level_testvector_calc (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_phase_3
void
void set_debug_level_phase_3 (integer )
void set_debug_level_phase_3 (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_calculate_parent_pairs
void
void set_debug_level_calculate_parent_pairs (integer )
void set_debug_level_calculate_parent_pairs (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_recv_coarsening
void
void set_debug_level_recv_coarsening (integer )
void set_debug_level_recv_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_coloring
void
void set_debug_level_coloring (integer )
void set_debug_level_coloring (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_get_ratings
void
void set_debug_level_get_ratings (integer )
void set_debug_level_get_ratings (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_precalculate_coarsening
void
void set_debug_level_precalculate_coarsening (integer )
void set_debug_level_precalculate_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_aggressive_coarsening
void
void set_debug_level_aggressive_coarsening (integer )
void set_debug_level_aggressive_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_send_coarsening
void
void set_debug_level_send_coarsening (integer )
void set_debug_level_send_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_communicate_prolongation
void
void set_debug_level_communicate_prolongation (integer )
void set_debug_level_communicate_prolongation (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_after_communciate_prolongation
void
void set_debug_level_after_communciate_prolongation (integer )
void set_debug_level_after_communciate_prolongation (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_debug_level_external_coarsening
void
void set_debug_level_external_coarsening (integer )
void set_debug_level_external_coarsening (integer )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_write_f_values
void
void set_write_f_values (bool )
void set_write_f_values (bool )<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector ()
bool check_testvector ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector (integer fromlevel)
bool check_testvector (integer fromlevel)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_testvector
bool
bool check_testvector (integer fromlevel, integer tolevel)
bool check_testvector (integer fromlevel, integer tolevel)<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
tostring
void
void tostring () const
void tostring ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_delta
number
number get_delta () const
number get_delta ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns delta<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_theta
number
number get_theta () const
number get_theta ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns theta<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_prolongation_truncation
number
number get_prolongation_truncation () const
number get_prolongation_truncation ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns prolongation_tr<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_galerkin_truncation
number
number get_galerkin_truncation () const
number get_galerkin_truncation ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns galerkin_tr<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_H_reduce_interpolation_nodes_parameter
number
number get_H_reduce_interpolation_nodes_parameter () const
number get_H_reduce_interpolation_nodes_parameter ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns HreduceParameter<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_prereduce_A_parameter
number
number get_prereduce_A_parameter () const
number get_prereduce_A_parameter ()<br><br>Member function of class <b>FAMGPreconditionerCPU1</b><br>returns prereduceA<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
AMGLevelInformation

Class <b>AMGLevelInformationCPU1</b>, default implementation of group <b>AMGLevelInformation</b><br>class has no constructor. <br><table><tr><td colspan=2><h3>AMGLevelInformationCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_creation_time_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns creation time of this level (in ms)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_fill_in ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros / (nr of nodes)^2<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, sum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz_max ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, maximum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nnz_min ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of non-zeros, minimum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_interface_elements ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of interface elements (including multiplicites)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, sum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes_max ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, maximum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_nr_of_nodes_min ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr of nodes of this level, minimum over all processors<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>is_valid ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if this is a valid level information<br/></td></tr><tr><td><br></td></tr></table>
memberfunction
get_creation_time_ms
number
number get_creation_time_ms () const
number get_creation_time_ms ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns creation time of this level (in ms)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes
integer
integer get_nr_of_nodes () const
integer get_nr_of_nodes ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of nodes of this level, sum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes_min
integer
integer get_nr_of_nodes_min () const
integer get_nr_of_nodes_min ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of nodes of this level, minimum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_nodes_max
integer
integer get_nr_of_nodes_max () const
integer get_nr_of_nodes_max ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of nodes of this level, maximum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz
integer
integer get_nnz () const
integer get_nnz ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of non-zeros, sum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz_min
integer
integer get_nnz_min () const
integer get_nnz_min ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of non-zeros, minimum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nnz_max
integer
integer get_nnz_max () const
integer get_nnz_max ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of non-zeros, maximum over all processors<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_fill_in
number
number get_fill_in () const
number get_fill_in ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of non-zeros / (nr of nodes)^2<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
is_valid
bool
bool is_valid () const
bool is_valid ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns true if this is a valid level information<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_nr_of_interface_elements
integer
integer get_nr_of_interface_elements () const
integer get_nr_of_interface_elements ()<br><br>Member function of class <b>AMGLevelInformationCPU1</b><br>returns nr of interface elements (including multiplicites)<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
AMGBase
VectorDebugWritingObjectCPU1 DebugWritingObjectCPU1 ILinearIteratorCPU1 IPreconditionerCPU1 
Class <b>AMGBaseCPU1</b>, default implementation of group <b>AMGBase</b><br>class has no constructor. <br>Inheritance: <a href="VectorDebugWritingObjectCPU1.html">VectorDebugWritingObjectCPU1</a> <a href="DebugWritingObjectCPU1.html">DebugWritingObjectCPU1</a> <a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a> <a href="IPreconditionerCPU1.html">IPreconditionerCPU1</a> <a href="AMGBaseCPU1.html">AMGBaseCPU1</a> <br><table><tr><td colspan=2><h3>AMGBaseCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check2 (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: performs a check of convergence on all levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>check_fsmoothing ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y_cycle (integer , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; basesmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_checkLevel_post_iterations (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_cycle_type (integer gamma)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_fsmoothing (bool enable)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_matrix_write_path (c_string matrixWritePath)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: set the path where connectionviewer matrices of the levels are written<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_fill_before_base (number fillrate)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_levels (integer max_levels)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_max_nodes_for_base (integer maxNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets the maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_min_nodes_on_one_processor (integer minNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_nr_of_preiterations_at_check (integer i)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: nr of mg cycles performed before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_postsmooth (integer nu2)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_num_presmooth (integer nu1)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: sets nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_one_init (bool b)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: needed for connectionviewer output<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; postsmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_preiterations_mimum_defect_at_check (number d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: minimum defect for preiterations before checking<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; presmoother)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_interfaces ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>AMGBaseCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_cycle_type ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns cycle type in multigrid cycle (gamma)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>get_fsmoothing ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns f smoothing enabled<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_grid_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns grid complexity c_G<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const <a href="AMGLevelInformationCPU1.html">AMGLevelInformationCPU1</a> *</td><td class="memItemRight" valign=bottom>get_level_information (integer L)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns information about the level L<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_max_fill_before_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal fill rate before base solver is used<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns max nr of AMG levels<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_max_nodes_for_base ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns maximal nr of nodes for base solver<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_min_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns minNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if the node number on one processor falls below this, agglomerate<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_postsmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of postsmoothing steps (nu2)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_num_presmooth ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns nr. of presmoothing steps (nu1)<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_operator_complexity ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns operator complexity c_A<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_preferred_nodes_on_one_processor ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns preferredNrOfNodes<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_coarse_solver_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent in the coarse solver setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>get_timing_whole_setup_ms ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the time spent on the whole setup in ms<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_used_levels ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns used nr of AMG levels<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited ILinearIteratorCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_damp (SmartPtr&lt;<a href="IDampingCPU1.html">IDampingCPU1</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited DebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited DebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IDebugWriterCPU1.html">IDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Inherited VectorDebugWritingObjectCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_debug (SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; d)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns sets a debug writer<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited VectorDebugWritingObjectCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>const SmartPtr&lt;<a href="IVectorDebugWriterCPU1.html">IVectorDebugWriterCPU1</a>&gt; </td><td class="memItemRight" valign=bottom>vector_debug_writer ()</td></tr><tr><td><br></td></tr></table>
memberfunction
set_num_presmooth
void
void set_num_presmooth (integer nu1)
void set_num_presmooth (integer nu1)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets nr. of presmoothing steps (nu1)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_num_postsmooth
void
void set_num_postsmooth (integer nu2)
void set_num_postsmooth (integer nu2)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets nr. of postsmoothing steps (nu2)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_cycle_type
void
void set_cycle_type (integer gamma)
void set_cycle_type (integer gamma)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets cycle type in multigrid cycle (gamma)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_levels
void
void set_max_levels (integer max_levels)
void set_max_levels (integer max_levels)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets max nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_nodes_for_base
void
void set_max_nodes_for_base (integer maxNrOfNodes)
void set_max_nodes_for_base (integer maxNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets the maximal nr of nodes for base solver<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_min_nodes_on_one_processor
void
void set_min_nodes_on_one_processor (integer minNrOfNodes)
void set_min_nodes_on_one_processor (integer minNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: if the node number on one processor falls below this, agglomerate<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_preferred_nodes_on_one_processor
void
void set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)
void set_preferred_nodes_on_one_processor (integer preferredNrOfNodes)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_max_fill_before_base
void
void set_max_fill_before_base (number fillrate)
void set_max_fill_before_base (number fillrate)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: sets maximal fill rate before base solver is used<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_presmoother
void
void set_presmoother (SmartPtr<ILinearIteratorCPU1> presmoother)
void set_presmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; presmoother)<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_postsmoother
void
void set_postsmoother (SmartPtr<ILinearIteratorCPU1> postsmoother)
void set_postsmoother (SmartPtr&lt;<a href="ILinearIteratorCPU1.html">ILinearIteratorCPU1</a>&gt; postsmoother)<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_base_solver
void
void set_base_solver (SmartPtr<ILinearOperatorInverseCPU1> basesmoother)
void set_base_solver (SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; basesmoother)<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check
bool
bool check (const VectorCPU1x, const VectorCPU1b)
bool check (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: performs a check of convergence on all levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check2
bool
bool check2 (const VectorCPU1x, const VectorCPU1b)
bool check2 (const <a href="VectorCPU1.html">VectorCPU1</a> *x, const <a href="VectorCPU1.html">VectorCPU1</a> *b)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: performs a check of convergence on all levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
check_fsmoothing
bool
bool check_fsmoothing ()
bool check_fsmoothing ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_nr_of_preiterations_at_check
void
void set_nr_of_preiterations_at_check (integer i)
void set_nr_of_preiterations_at_check (integer i)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: nr of mg cycles performed before checking<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_preiterations_mimum_defect_at_check
void
void set_preiterations_mimum_defect_at_check (number d)
void set_preiterations_mimum_defect_at_check (number d)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: minimum defect for preiterations before checking<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_matrix_write_path
void
void set_matrix_write_path (c_string matrixWritePath)
void set_matrix_write_path (c_string matrixWritePath)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: set the path where connectionviewer matrices of the levels are written<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_fsmoothing
void
void set_fsmoothing (bool enable)
void set_fsmoothing (bool enable)<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_one_init
void
void set_one_init (bool b)
void set_one_init (bool b)<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_position_provider
void
void set_position_provider (IPositionProvider2dprov)
void set_position_provider (<a href="IPositionProvider2d.html">IPositionProvider2d</a> *prov)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: needed for connectionviewer output<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_position_provider
void
void set_position_provider (IPositionProvider3dprov)
void set_position_provider (<a href="IPositionProvider3d.html">IPositionProvider3d</a> *prov)<br><br>Member function of class <b>AMGBaseCPU1</b><br>tooltip: needed for connectionviewer output<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
write_interfaces
void
void write_interfaces ()
void write_interfaces ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_checkLevel_post_iterations
void
void set_checkLevel_post_iterations (integer )
void set_checkLevel_post_iterations (integer )<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
set_Y_cycle
void
void set_Y_cycle (integer , number , number )
void set_Y_cycle (integer , number , number )<br><br>Member function of class <b>AMGBaseCPU1</b><br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_num_presmooth
integer
integer get_num_presmooth () const
integer get_num_presmooth ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns nr. of presmoothing steps (nu1)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_num_postsmooth
integer
integer get_num_postsmooth () const
integer get_num_postsmooth ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns nr. of postsmoothing steps (nu2)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_cycle_type
integer
integer get_cycle_type () const
integer get_cycle_type ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns cycle type in multigrid cycle (gamma)<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_levels
integer
integer get_max_levels () const
integer get_max_levels ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns max nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_used_levels
integer
integer get_used_levels () const
integer get_used_levels ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns used nr of AMG levels<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_nodes_for_base
integer
integer get_max_nodes_for_base () const
integer get_max_nodes_for_base ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns maximal nr of nodes for base solver<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_min_nodes_on_one_processor
integer
integer get_min_nodes_on_one_processor () const
integer get_min_nodes_on_one_processor ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns minNrOfNodes<br>tooltip: if the node number on one processor falls below this, agglomerate<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_preferred_nodes_on_one_processor
integer
integer get_preferred_nodes_on_one_processor () const
integer get_preferred_nodes_on_one_processor ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns preferredNrOfNodes<br>tooltip: if we need to agglomerate, ensure all nodes have more than this number of unknowns<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_max_fill_before_base
number
number get_max_fill_before_base () const
number get_max_fill_before_base ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns maximal fill rate before base solver is used<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_operator_complexity
number
number get_operator_complexity () const
number get_operator_complexity ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns operator complexity c_A<br>tooltip: c_A = total nnz of all matrices divided by nnz of matrix A<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_grid_complexity
number
number get_grid_complexity () const
number get_grid_complexity ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns grid complexity c_G<br>tooltip: c_G = total number of nodes of all levels divided by number of nodes on level 0<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_timing_whole_setup_ms
number
number get_timing_whole_setup_ms () const
number get_timing_whole_setup_ms ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns the time spent on the whole setup in ms<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_timing_coarse_solver_setup_ms
number
number get_timing_coarse_solver_setup_ms () const
number get_timing_coarse_solver_setup_ms ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns the time spent in the coarse solver setup in ms<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_level_information
const AMGLevelInformationCPU1*
const AMGLevelInformationCPU1get_level_information (integer L) const
const <a href="AMGLevelInformationCPU1.html">AMGLevelInformationCPU1</a> *get_level_information (integer L)<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns information about the level L<br>group: <b>ug4//Algebra/Preconditioner</b>
memberfunction
get_fsmoothing
bool
bool get_fsmoothing () const
bool get_fsmoothing ()<br><br>Member function of class <b>AMGBaseCPU1</b><br>returns f smoothing enabled<br>group: <b>ug4//Algebra/Preconditioner</b>
;
class
CompositeConvCheckBiogas
IConvergenceCheckCPU1 
Class <b>CompositeConvCheckBiogas2dCPU1</b>, default implementation of group <b>CompositeConvCheckBiogas</b><br>class has constructor. <br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="CompositeConvCheckBiogas2dCPU1.html">CompositeConvCheckBiogas2dCPU1</a> <br><table><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>CompositeConvCheckBiogas2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_functions (c_string functions to be evaluated individually as comma-separated list)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>timeMeasurement (bool )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: whether to perform a time measurement or not<br/></td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>CompositeConvCheckBiogas2dCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction (integer function index)</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction for a function<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
CompositeConvCheckBiogas2dCPU1

CompositeConvCheckBiogas2dCPU1 (SmartPtr<ApproximationSpace2d> ApproximationSpace)
CompositeConvCheckBiogas2dCPU1 (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; ApproximationSpace)<br>Constructor of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_functions
void
void set_functions (c_string functions to be evaluated individually as comma-separated list)
void set_functions (c_string functions to be evaluated individually as comma-separated list)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
timeMeasurement
void
void timeMeasurement (bool )
void timeMeasurement (bool )<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>tooltip: whether to perform a time measurement or not<br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)
void set_minimum_defect (c_string minimum defect for defined functions (comma-separated list), number minimum defect for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)
void set_reduction (c_string defect reduction for defined functions (comma-separated list), number defect reduction for rest)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect (integer function index) const
number defect (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction (integer function index) const
number reduction (integer function index)<br><br>Member function of class <b>CompositeConvCheckBiogas2dCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction for a function<br>group: <b>ug4//Biogas</b>
;
class
MentenKinetik
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Class <b>MentenKinetik2d</b>, default implementation of group <b>MentenKinetik</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="MentenKinetik2d.html">MentenKinetik2d</a> <br><table><tr><td colspan=2><h3>MentenKinetik2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MentenKinetik2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MentenKinetik2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_l (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_l (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_I (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_I (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_Y (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k_s (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k_s (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
MentenKinetik2d

MentenKinetik2d ()
MentenKinetik2d ()<br>Constructor of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_l
void
void set_C_l (number )
void set_C_l (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_l
void
void set_C_l (SmartPtr<UserNumber2d> )
void set_C_l (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (number )
void set_C_d (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (SmartPtr<UserNumber2d> )
void set_C_d (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (number )
void set_k (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (SmartPtr<UserNumber2d> )
void set_k (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_I
void
void set_I (number )
void set_I (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_I
void
void set_I (SmartPtr<UserNumber2d> )
void set_I (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_Y
void
void set_Y (number )
void set_Y (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_Y
void
void set_Y (SmartPtr<UserNumber2d> )
void set_Y (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k_s
void
void set_k_s (number )
void set_k_s (number )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k_s
void
void set_k_s (SmartPtr<UserNumber2d> )
void set_k_s (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MentenKinetik2d</b><br>group: <b>ug4//Biogas</b>
;
class
DecayKinetik
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Class <b>DecayKinetik2d</b>, default implementation of group <b>DecayKinetik</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="DecayKinetik2d.html">DecayKinetik2d</a> <br><table><tr><td colspan=2><h3>DecayKinetik2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DecayKinetik2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DecayKinetik2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_f (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_f (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_k (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
DecayKinetik2d

DecayKinetik2d ()
DecayKinetik2d ()<br>Constructor of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C
void
void set_C (number )
void set_C (number )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C
void
void set_C (SmartPtr<UserNumber2d> )
void set_C (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_f
void
void set_f (number )
void set_f (number )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_f
void
void set_f (SmartPtr<UserNumber2d> )
void set_f (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (number )
void set_k (number )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_k
void
void set_k (SmartPtr<UserNumber2d> )
void set_k (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>DecayKinetik2d</b><br>group: <b>ug4//Biogas</b>
;
class
InhibitionPTP
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Class <b>InhibitionPTP2d</b>, default implementation of group <b>InhibitionPTP</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="InhibitionPTP2d.html">InhibitionPTP2d</a> <br><table><tr><td colspan=2><h3>InhibitionPTP2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>InhibitionPTP2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>InhibitionPTP2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_C_d (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_MO_max (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_MO_max (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
InhibitionPTP2d

InhibitionPTP2d ()
InhibitionPTP2d ()<br>Constructor of class <b>InhibitionPTP2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_MO_max
void
void set_MO_max (number )
void set_MO_max (number )<br><br>Member function of class <b>InhibitionPTP2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_MO_max
void
void set_MO_max (SmartPtr<UserNumber2d> )
void set_MO_max (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>InhibitionPTP2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (number )
void set_C_d (number )<br><br>Member function of class <b>InhibitionPTP2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_C_d
void
void set_C_d (SmartPtr<UserNumber2d> )
void set_C_d (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>InhibitionPTP2d</b><br>group: <b>ug4//Biogas</b>
;
class
Concliquid2P
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Class <b>Concliquid2P2d</b>, default implementation of group <b>Concliquid2P</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="Concliquid2P2d.html">Concliquid2P2d</a> <br><table><tr><td colspan=2><h3>Concliquid2P2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Concliquid2P2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Concliquid2P2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Concliquid2P2d

Concliquid2P2d ()
Concliquid2P2d ()<br>Constructor of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber2d> )
void set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber2d> )
void set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (number )
void set_omega (number )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (SmartPtr<UserNumber2d> )
void set_omega (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concliquid2P2d</b><br>group: <b>ug4//Biogas</b>
;
class
Timel
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Class <b>Timel2d</b>, default implementation of group <b>Timel</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="Timel2d.html">Timel2d</a> <br><table><tr><td colspan=2><h3>Timel2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Timel2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Timel2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Timel2d

Timel2d ()
Timel2d ()<br>Constructor of class <b>Timel2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Timel2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber2d> )
void set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Timel2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Timel2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber2d> )
void set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Timel2d</b><br>group: <b>ug4//Biogas</b>
;
class
Times
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Class <b>Times2d</b>, default implementation of group <b>Times</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="Times2d.html">Times2d</a> <br><table><tr><td colspan=2><h3>Times2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Times2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Times2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Times2d

Times2d ()
Times2d ()<br>Constructor of class <b>Times2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Times2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber2d> )
void set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Times2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Times2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber2d> )
void set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Times2d</b><br>group: <b>ug4//Biogas</b>
;
class
Concsolid2P
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Class <b>Concsolid2P2d</b>, default implementation of group <b>Concsolid2P</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="Concsolid2P2d.html">Concsolid2P2d</a> <br><table><tr><td colspan=2><h3>Concsolid2P2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Concsolid2P2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Concsolid2P2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Concsolid2P2d

Concsolid2P2d ()
Concsolid2P2d ()<br>Constructor of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (number )
void set_phi (number )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_phi
void
void set_phi (SmartPtr<UserNumber2d> )
void set_phi (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (number )
void set_rho (number )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho
void
void set_rho (SmartPtr<UserNumber2d> )
void set_rho (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (number )
void set_omega (number )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega
void
void set_omega (SmartPtr<UserNumber2d> )
void set_omega (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Concsolid2P2d</b><br>group: <b>ug4//Biogas</b>
;
class
Rho
IUserData UserNumber2d DependentUserDataNumber2d DataLinkerNumber2d 
Class <b>Rho2d</b>, default implementation of group <b>Rho</b><br>class has constructor. <br>Inheritance: <a href="IUserData.html">IUserData</a> <a href="UserNumber2d.html">UserNumber2d</a> <a href="DependentUserDataNumber2d.html">DependentUserDataNumber2d</a> <a href="DataLinkerNumber2d.html">DataLinkerNumber2d</a> <a href="Rho2d.html">Rho2d</a> <br><table><tr><td colspan=2><h3>Rho2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>Rho2d ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>Rho2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega_1 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_omega_1 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_1 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_1 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_2 (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rho_2 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3> Inherited UserNumber2d Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>get_dim ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>std_string </td><td class="memItemRight" valign=bottom>type ()</td></tr><tr><td><br></td></tr></table>
constructor
Rho2d

Rho2d ()
Rho2d ()<br>Constructor of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_1
void
void set_rho_1 (number )
void set_rho_1 (number )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_1
void
void set_rho_1 (SmartPtr<UserNumber2d> )
void set_rho_1 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_2
void
void set_rho_2 (number )
void set_rho_2 (number )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_rho_2
void
void set_rho_2 (SmartPtr<UserNumber2d> )
void set_rho_2 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega_1
void
void set_omega_1 (number )
void set_omega_1 (number )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_omega_1
void
void set_omega_1 (SmartPtr<UserNumber2d> )
void set_omega_1 (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>Rho2d</b><br>group: <b>ug4//Biogas</b>
;
class
ComponentWiseConvergenceCheck
IConvergenceCheckCPU1 
Class <b>ComponentWiseConvergenceCheckCPU1</b>, default implementation of group <b>ComponentWiseConvergenceCheck</b><br>class has constructor. <br>Inheritance: <a href="IConvergenceCheckCPU1.html">IConvergenceCheckCPU1</a> <a href="ComponentWiseConvergenceCheckCPU1.html">ComponentWiseConvergenceCheckCPU1</a> <br><table><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ComponentWiseConvergenceCheckCPU1 ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ComponentWiseConvergenceCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>iteration_ended ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_function_defects (c_string Special  Defects for the functions to be treated different)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_function_numbers (c_string Numbers of the functions with different convergence rates)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_maximum_steps (integer Maximum Steps)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_minimum_defect (number Minimum Defect)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_number_systems (number Number of Equations)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reduction (number Relative Reduction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_verbose (bool Verbosity)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ComponentWiseConvergenceCheckCPU1 Const Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>defect ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns defect<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current defect<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>previous_defect ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>number </td><td class="memItemRight" valign=bottom>reduction ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns reduction<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current relative reduction<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>integer </td><td class="memItemRight" valign=bottom>step ()</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns step<br/></td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">tooltip: returns the current number of steps<br/></td></tr><tr><td><br></td></tr></table>
constructor
ComponentWiseConvergenceCheckCPU1

ComponentWiseConvergenceCheckCPU1 ()
ComponentWiseConvergenceCheckCPU1 ()<br>Constructor of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
constructor
ComponentWiseConvergenceCheckCPU1

ComponentWiseConvergenceCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )
ComponentWiseConvergenceCheckCPU1 (integer Maximum Steps, number Minimum Defect, number Relative Reduction, bool VerbosityNumber of EquationsNumbers of the functions with different convergence ratesSpecial  defects for the functions to be treated different, integer , c_string , c_string )<br>Constructor of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_maximum_steps
void
void set_maximum_steps (integer Maximum Steps)
void set_maximum_steps (integer Maximum Steps)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_minimum_defect
void
void set_minimum_defect (number Minimum Defect)
void set_minimum_defect (number Minimum Defect)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_reduction
void
void set_reduction (number Relative Reduction)
void set_reduction (number Relative Reduction)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_verbose
void
void set_verbose (bool Verbosity)
void set_verbose (bool Verbosity)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_number_systems
void
void set_number_systems (number Number of Equations)
void set_number_systems (number Number of Equations)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_function_numbers
void
void set_function_numbers (c_string Numbers of the functions with different convergence rates)
void set_function_numbers (c_string Numbers of the functions with different convergence rates)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
set_function_defects
void
void set_function_defects (c_string Special  Defects for the functions to be treated different)
void set_function_defects (c_string Special  Defects for the functions to be treated different)<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
iteration_ended
bool
bool iteration_ended ()
bool iteration_ended ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
memberfunction
defect
number
number defect () const
number defect ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>returns defect<br>tooltip: returns the current defect<br>group: <b>ug4//Biogas</b>
memberfunction
step
integer
integer step () const
integer step ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>returns step<br>tooltip: returns the current number of steps<br>group: <b>ug4//Biogas</b>
memberfunction
reduction
number
number reduction () const
number reduction ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>returns reduction<br>tooltip: returns the current relative reduction<br>group: <b>ug4//Biogas</b>
memberfunction
previous_defect
number
number previous_defect () const
number previous_defect ()<br><br>Member function of class <b>ComponentWiseConvergenceCheckCPU1</b><br>group: <b>ug4//Biogas</b>
;
class
FV1InnerBoundaryCalciumER
IElemDisc IDomainElemDisc2d FV1InnerBoundary2d 
Class <b>FV1InnerBoundaryCalciumER2d</b>, default implementation of group <b>FV1InnerBoundaryCalciumER</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="FV1InnerBoundary2d.html">FV1InnerBoundary2d</a> <a href="FV1InnerBoundaryCalciumER2d.html">FV1InnerBoundaryCalciumER2d</a> <br><table><tr><td colspan=2><h3>FV1InnerBoundaryCalciumER2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FV1InnerBoundaryCalciumER2d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr></table>
constructor
FV1InnerBoundaryCalciumER2d

FV1InnerBoundaryCalciumER2d (c_string Function(s), c_string Subset(s))
FV1InnerBoundaryCalciumER2d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>FV1InnerBoundaryCalciumER2d</b><br>group: <b>ug4//CalciumDynamics</b>
;
class
ConstantEquation
IElemDisc IDomainElemDisc2d 
Class <b>ConstantEquation2d</b>, default implementation of group <b>ConstantEquation</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="ConstantEquation2d.html">ConstantEquation2d</a> <br><table><tr><td colspan=2><h3>ConstantEquation2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConstantEquation2d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConstantEquation2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>gradient ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (number Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (c_string Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (number Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (c_string Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, Vel_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (c_string Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; </td><td class="memItemRight" valign=bottom>value ()</td></tr><tr><td><br></td></tr></table>
constructor
ConstantEquation2d

ConstantEquation2d (c_string Function(s), c_string Subset(s))
ConstantEquation2d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (SmartPtr<UserVector2d> Velocity Field)
void set_velocity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Velocity Field)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x)
void set_velocity (number Vel_x)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, number )
void set_velocity (number Vel_x, Vel_y, number )<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (c_string Velocity Field)
void set_velocity (c_string Velocity Field)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (SmartPtr<UserNumber2d> Source)
void set_source (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Source)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (number Source)
void set_source (number Source)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (c_string Source)
void set_source (c_string Source)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (SmartPtr<UserNumber2d> Mass)
void set_mass (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (number Mass)
void set_mass (number Mass)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (c_string Mass)
void set_mass (c_string Mass)<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
value
SmartPtr<UserNumber2d>
SmartPtr<UserNumber2d> value ()
SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; value ()<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
gradient
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> gradient ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; gradient ()<br><br>Member function of class <b>ConstantEquation2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
;
class
ConvectionDiffusion
IElemDisc IDomainElemDisc2d 
Class <b>ConvectionDiffusion2d</b>, default implementation of group <b>ConvectionDiffusion</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="ConvectionDiffusion2d.html">ConvectionDiffusion2d</a> <br><table><tr><td colspan=2><h3>ConvectionDiffusion2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ConvectionDiffusion2d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ConvectionDiffusion2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>gradient ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (c_string Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (number Diagonal Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Diffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_disc_scheme (c_string Disc Scheme)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (c_string Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (number Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (c_string Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (number Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_scale (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass Scale)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order_scv (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order_scvf (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (c_string Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction (number Reaction)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (c_string Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (number Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_reaction_rate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Reaction Rate)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (number Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_source (c_string Source)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (c_string Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, Vel_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x, Vel_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (number Vel_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_velocity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Velocity Field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; </td><td class="memItemRight" valign=bottom>value ()</td></tr><tr><td><br></td></tr></table>
constructor
ConvectionDiffusion2d

ConvectionDiffusion2d (c_string Function(s), c_string Subset(s))
ConvectionDiffusion2d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_disc_scheme
void
void set_disc_scheme (c_string Disc Scheme)
void set_disc_scheme (c_string Disc Scheme)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order
void
void set_quad_order (integer )
void set_quad_order (integer )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order_scvf
void
void set_quad_order_scvf (integer )
void set_quad_order_scvf (integer )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_quad_order_scv
void
void set_quad_order_scv (integer )
void set_quad_order_scv (integer )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (SmartPtr<UserMatrix2d> Diffusion)
void set_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Diffusion)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (number Diagonal Diffusion)
void set_diffusion (number Diagonal Diffusion)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_diffusion
void
void set_diffusion (c_string Diffusion)
void set_diffusion (c_string Diffusion)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (SmartPtr<UserVector2d> Velocity Field)
void set_velocity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Velocity Field)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x)
void set_velocity (number Vel_x)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, number )
void set_velocity (number Vel_x, Vel_y, number )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )
void set_velocity (number Vel_x, Vel_y, Vel_z, number , number )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_velocity
void
void set_velocity (c_string Velocity Field)
void set_velocity (c_string Velocity Field)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (SmartPtr<UserNumber2d> Reaction Rate)
void set_reaction_rate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (number Reaction Rate)
void set_reaction_rate (number Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction_rate
void
void set_reaction_rate (c_string Reaction Rate)
void set_reaction_rate (c_string Reaction Rate)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (SmartPtr<UserNumber2d> Reaction)
void set_reaction (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Reaction)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (number Reaction)
void set_reaction (number Reaction)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_reaction
void
void set_reaction (c_string Reaction)
void set_reaction (c_string Reaction)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (SmartPtr<UserNumber2d> Source)
void set_source (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Source)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (number Source)
void set_source (number Source)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_source
void
void set_source (c_string Source)
void set_source (c_string Source)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (SmartPtr<UserNumber2d> Mass Scale)
void set_mass_scale (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (number Mass Scale)
void set_mass_scale (number Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass_scale
void
void set_mass_scale (c_string Mass Scale)
void set_mass_scale (c_string Mass Scale)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (SmartPtr<UserNumber2d> Mass)
void set_mass (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Mass)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (number Mass)
void set_mass (number Mass)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_mass
void
void set_mass (c_string Mass)
void set_mass (c_string Mass)<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes2d> )
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; )<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
value
SmartPtr<UserNumber2d>
SmartPtr<UserNumber2d> value ()
SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; value ()<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
memberfunction
gradient
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> gradient ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; gradient ()<br><br>Member function of class <b>ConvectionDiffusion2d</b><br>group: <b>ug4//SpatialDisc/ElemDisc</b>
;
class
DensityDrivenFlow
IElemDisc IDomainElemDisc2d 
Class <b>DensityDrivenFlow2d</b>, default implementation of group <b>DensityDrivenFlow</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="DensityDrivenFlow2d.html">DensityDrivenFlow2d</a> <br><table><tr><td colspan=2><h3>DensityDrivenFlow2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DensityDrivenFlow2d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DensityDrivenFlow2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; </td><td class="memItemRight" valign=bottom>brine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>darcy_velocity ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>pressure_grad ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_flow (bool Boussinesq Flow)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_transport (bool Boussinesq Transport)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_consistent_gravity (bool Consistent Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Density)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, g_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (c_string Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (number MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (c_string MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (c_string Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (c_string Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (number Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (c_string Viscosity)</td></tr><tr><td><br></td></tr></table>
constructor
DensityDrivenFlow2d

DensityDrivenFlow2d (c_string Function(s), c_string Subset(s))
DensityDrivenFlow2d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_consistent_gravity
void
void set_consistent_gravity (bool Consistent Gravity)
void set_consistent_gravity (bool Consistent Gravity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_transport
void
void set_boussinesq_transport (bool Boussinesq Transport)
void set_boussinesq_transport (bool Boussinesq Transport)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_flow
void
void set_boussinesq_flow (bool Boussinesq Flow)
void set_boussinesq_flow (bool Boussinesq Flow)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes2d> Upwind (no, part, full))
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (SmartPtr<UserNumber2d> Porosity)
void set_porosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Porosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (number Porosity)
void set_porosity (number Porosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (c_string Porosity)
void set_porosity (c_string Porosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector2d> Gravity)
void set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Gravity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x)
void set_gravity (number g_x)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, number )
void set_gravity (number g_x, g_y, number )<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, g_z, number , number )
void set_gravity (number g_x, g_y, g_z, number , number )<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (c_string Gravity)
void set_gravity (c_string Gravity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (SmartPtr<UserMatrix2d> MolecularDiffusion)
void set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (number MolecularDiffusion)
void set_molecular_diffusion (number MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (c_string MolecularDiffusion)
void set_molecular_diffusion (c_string MolecularDiffusion)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix2d> Permeability)
void set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Permeability)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (number Permeability)
void set_permeability (number Permeability)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (c_string Permeability)
void set_permeability (c_string Permeability)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber2d> Viscosity)
void set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Viscosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (number Viscosity)
void set_viscosity (number Viscosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (c_string Viscosity)
void set_viscosity (c_string Viscosity)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber2d> Density)
void set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Density)<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
darcy_velocity
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> darcy_velocity ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; darcy_velocity ()<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
brine
SmartPtr<UserNumber2d>
SmartPtr<UserNumber2d> brine ()
SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; brine ()<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
pressure_grad
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> pressure_grad ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; pressure_grad ()<br><br>Member function of class <b>DensityDrivenFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
;
class
ThermohalineFlow
IElemDisc IDomainElemDisc2d 
Class <b>ThermohalineFlow2d</b>, default implementation of group <b>ThermohalineFlow</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="ThermohalineFlow2d.html">ThermohalineFlow2d</a> <br><table><tr><td colspan=2><h3>ThermohalineFlow2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>ThermohalineFlow2d (c_string Function(s), c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>ThermohalineFlow2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; </td><td class="memItemRight" valign=bottom>brine ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>darcy_velocity ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; </td><td class="memItemRight" valign=bottom>pressure_grad ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_density (number BoussinesqDensity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_flow (bool BoussinesqFlow)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boussinesq_transport (bool BoussinesqTransport)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_consistent_gravity (bool ConsistentGravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Density)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (number g_x, g_y, g_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_gravity (c_string Gravity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_heat_capacity_fluid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_heat_capacity_solid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_mass_density_solid (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (number MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_molecular_diffusion (c_string MolecularDiffusion)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (c_string Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (number Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Permeability)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (c_string Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (number Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_porosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Porosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (c_string ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (number ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_thermal_conductivity (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; ThermalConductivity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_upwind_energy (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (number Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_viscosity (c_string Viscosity)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; </td><td class="memItemRight" valign=bottom>temperature ()</td></tr><tr><td><br></td></tr></table>
constructor
ThermohalineFlow2d

ThermohalineFlow2d (c_string Function(s), c_string Subset(s))
ThermohalineFlow2d (c_string Function(s), c_string Subset(s))<br>Constructor of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_consistent_gravity
void
void set_consistent_gravity (bool ConsistentGravity)
void set_consistent_gravity (bool ConsistentGravity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_transport
void
void set_boussinesq_transport (bool BoussinesqTransport)
void set_boussinesq_transport (bool BoussinesqTransport)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_flow
void
void set_boussinesq_flow (bool BoussinesqFlow)
void set_boussinesq_flow (bool BoussinesqFlow)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_boussinesq_density
void
void set_boussinesq_density (number BoussinesqDensity)
void set_boussinesq_density (number BoussinesqDensity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind
void
void set_upwind (SmartPtr<IConvectionShapes2d> Upwind (no, part, full))
void set_upwind (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_upwind_energy
void
void set_upwind_energy (SmartPtr<IConvectionShapes2d> Upwind (no, part, full))
void set_upwind_energy (SmartPtr&lt;<a href="IConvectionShapes2d.html">IConvectionShapes2d</a>&gt; Upwind (no, part, full))<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (SmartPtr<UserNumber2d> Porosity)
void set_porosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Porosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (number Porosity)
void set_porosity (number Porosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_porosity
void
void set_porosity (c_string Porosity)
void set_porosity (c_string Porosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (SmartPtr<UserVector2d> Gravity)
void set_gravity (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Gravity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x)
void set_gravity (number g_x)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, number )
void set_gravity (number g_x, g_y, number )<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (number g_x, g_y, g_z, number , number )
void set_gravity (number g_x, g_y, g_z, number , number )<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_gravity
void
void set_gravity (c_string Gravity)
void set_gravity (c_string Gravity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (SmartPtr<UserMatrix2d> MolecularDiffusion)
void set_molecular_diffusion (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (number MolecularDiffusion)
void set_molecular_diffusion (number MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_molecular_diffusion
void
void set_molecular_diffusion (c_string MolecularDiffusion)
void set_molecular_diffusion (c_string MolecularDiffusion)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (SmartPtr<UserMatrix2d> ThermalConductivity)
void set_thermal_conductivity (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (number ThermalConductivity)
void set_thermal_conductivity (number ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_thermal_conductivity
void
void set_thermal_conductivity (c_string ThermalConductivity)
void set_thermal_conductivity (c_string ThermalConductivity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (SmartPtr<UserMatrix2d> Permeability)
void set_permeability (SmartPtr&lt;<a href="UserMatrix2d.html">UserMatrix2d</a>&gt; Permeability)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (number Permeability)
void set_permeability (number Permeability)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_permeability
void
void set_permeability (c_string Permeability)
void set_permeability (c_string Permeability)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (SmartPtr<UserNumber2d> Viscosity)
void set_viscosity (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Viscosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (number Viscosity)
void set_viscosity (number Viscosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_viscosity
void
void set_viscosity (c_string Viscosity)
void set_viscosity (c_string Viscosity)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_density
void
void set_density (SmartPtr<UserNumber2d> Density)
void set_density (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Density)<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_heat_capacity_fluid
void
void set_heat_capacity_fluid (number )
void set_heat_capacity_fluid (number )<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_heat_capacity_solid
void
void set_heat_capacity_solid (number )
void set_heat_capacity_solid (number )<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
set_mass_density_solid
void
void set_mass_density_solid (number )
void set_mass_density_solid (number )<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
darcy_velocity
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> darcy_velocity ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; darcy_velocity ()<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
pressure_grad
SmartPtr<UserVector2d>
SmartPtr<UserVector2d> pressure_grad ()
SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; pressure_grad ()<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
temperature
SmartPtr<UserNumber2d>
SmartPtr<UserNumber2d> temperature ()
SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; temperature ()<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
memberfunction
brine
SmartPtr<UserNumber2d>
SmartPtr<UserNumber2d> brine ()
SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; brine ()<br><br>Member function of class <b>ThermohalineFlow2d</b><br>group: <b>ug4//SpatialDisc/d3f</b>
;
class
LinearElastoPlasticity
IElemDisc IDomainElemDisc2d 
Class <b>LinearElastoPlasticity2d</b>, default implementation of group <b>LinearElastoPlasticity</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="LinearElastoPlasticity2d.html">LinearElastoPlasticity2d</a> <br><table><tr><td colspan=2><h3>LinearElastoPlasticity2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LinearElastoPlasticity2d (c_string Function, c_string Subsets)</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LinearElastoPlasticity2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>close_gnuplot_file ()</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>init_state_variables (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hardening_behavior (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hooke_elasticity_tensor (number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_quad_order (integer )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Force field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F_x, F_y, number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (number F_x, F_y, F_z, number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_volume_forces (c_string Force field)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>stress_eigenvalues_at (number , number , number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>use_approx_tangent (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>use_elastoplast_mat_behavior (bool )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>write_data (number )</td></tr><tr><td><br></td></tr></table>
constructor
LinearElastoPlasticity2d

LinearElastoPlasticity2d (c_string Function, c_string Subsets)
LinearElastoPlasticity2d (c_string Function, c_string Subsets)<br>Constructor of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_hooke_elasticity_tensor
void
void set_hooke_elasticity_tensor (number , number )
void set_hooke_elasticity_tensor (number , number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_quad_order
void
void set_quad_order (integer )
void set_quad_order (integer )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (SmartPtr<UserVector2d> Force field)
void set_volume_forces (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Force field)<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F)
void set_volume_forces (number F)<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F_x, F_y, number )
void set_volume_forces (number F_x, F_y, number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (number F_x, F_y, F_z, number , number )
void set_volume_forces (number F_x, F_y, F_z, number , number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_volume_forces
void
void set_volume_forces (c_string Force field)
void set_volume_forces (c_string Force field)<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
use_elastoplast_mat_behavior
void
void use_elastoplast_mat_behavior (bool )
void use_elastoplast_mat_behavior (bool )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
set_hardening_behavior
void
void set_hardening_behavior (integer )
void set_hardening_behavior (integer )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
use_approx_tangent
void
void use_approx_tangent (number )
void use_approx_tangent (number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
init_state_variables
void
void init_state_variables (integer )
void init_state_variables (integer )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
stress_eigenvalues_at
void
void stress_eigenvalues_at (number , number , number )
void stress_eigenvalues_at (number , number , number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
write_data
void
void write_data (number )
void write_data (number )<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
memberfunction
close_gnuplot_file
void
void close_gnuplot_file ()
void close_gnuplot_file ()<br><br>Member function of class <b>LinearElastoPlasticity2d</b><br>group: <b>ug4//SpatialDisc/LinearElastoPlasticity</b>
;
class
LagrangeDifferenceBoundary
IConstraintCPU1 IDomainConstraint2dCPU1 
Class <b>LagrangeDifferenceBoundary2dCPU1</b>, default implementation of group <b>LagrangeDifferenceBoundary</b><br>class has constructor. <br>Inheritance: <a href="IConstraintCPU1.html">IConstraintCPU1</a> <a href="IDomainConstraint2dCPU1.html">IDomainConstraint2dCPU1</a> <a href="LagrangeDifferenceBoundary2dCPU1.html">LagrangeDifferenceBoundary2dCPU1</a> <br><table><tr><td colspan=2><h3>LagrangeDifferenceBoundary2dCPU1 Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>LagrangeDifferenceBoundary2dCPU1 ()</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>LagrangeDifferenceBoundary2dCPU1 Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>bool </td><td class="memItemRight" valign=bottom>set (c_string Value, c_string Function, c_string Subsets, c_string )</td></tr><tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns Success<br/></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
LagrangeDifferenceBoundary2dCPU1

LagrangeDifferenceBoundary2dCPU1 ()
LagrangeDifferenceBoundary2dCPU1 ()<br>Constructor of class <b>LagrangeDifferenceBoundary2dCPU1</b><br>group: <b>ug4/Neuron//Discretization/2d</b>
memberfunction
set
bool
bool set (c_string Value, c_string Function, c_string Subsets, c_string )
bool set (c_string Value, c_string Function, c_string Subsets, c_string )<br><br>Member function of class <b>LagrangeDifferenceBoundary2dCPU1</b><br>returns Success<br>group: <b>ug4/Neuron//Discretization/2d</b>
memberfunction
set_approximation_space
void
void set_approximation_space (SmartPtr<ApproximationSpace2d> )
void set_approximation_space (SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br><br>Member function of class <b>LagrangeDifferenceBoundary2dCPU1</b><br>group: <b>ug4/Neuron//Discretization/2d</b>
;
class
FV1TimeNeumannBoundary
IElemDisc IDomainElemDisc2d 
Class <b>FV1TimeNeumannBoundary2d</b>, default implementation of group <b>FV1TimeNeumannBoundary</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="FV1TimeNeumannBoundary2d.html">FV1TimeNeumannBoundary2d</a> <br><table><tr><td colspan=2><h3>FV1TimeNeumannBoundary2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>FV1TimeNeumannBoundary2d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>FV1TimeNeumannBoundary2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_activemembrane (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dendrite (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_ifInjection (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_myelin (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_psc (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_sign (number )</td></tr><tr><td><br></td></tr></table>
constructor
FV1TimeNeumannBoundary2d

FV1TimeNeumannBoundary2d (c_string Functions, c_string Subset(s))
FV1TimeNeumannBoundary2d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_sign
void
void set_sign (number )
void set_sign (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber2d> )
void set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_myelin
void
void set_myelin (number )
void set_myelin (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_activemembrane
void
void set_activemembrane (number )
void set_activemembrane (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_dendrite
void
void set_dendrite (number )
void set_dendrite (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_psc
void
void set_psc (number )
void set_psc (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_ifInjection
void
void set_ifInjection (number )
void set_ifInjection (number )<br><br>Member function of class <b>FV1TimeNeumannBoundary2d</b><br>group: <b>ug4/Neuron/</b>
;
class
transmembrane_current
IElemDisc IDomainElemDisc2d 
Class <b>transmembrane_current2d</b>, default implementation of group <b>transmembrane_current</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="transmembrane_current2d.html">transmembrane_current2d</a> <br><table><tr><td colspan=2><h3>transmembrane_current2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>transmembrane_current2d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>transmembrane_current2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_activemembrane (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_dendrite (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_capacitive_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_injection_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_leakage_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_postsynaptic_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_potassium_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_sodium_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_measure_transmembrane_net_current (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_myelin (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_psc (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_sign (number )</td></tr><tr><td><br></td></tr></table>
constructor
transmembrane_current2d

transmembrane_current2d (c_string Functions, c_string Subset(s))
transmembrane_current2d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_sign
void
void set_sign (number )
void set_sign (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber2d> )
void set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_myelin
void
void set_myelin (number )
void set_myelin (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_activemembrane
void
void set_activemembrane (number )
void set_activemembrane (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_dendrite
void
void set_dendrite (number )
void set_dendrite (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_psc
void
void set_psc (number )
void set_psc (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_sodium_current
void
void set_measure_sodium_current (number )
void set_measure_sodium_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_potassium_current
void
void set_measure_potassium_current (number )
void set_measure_potassium_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_leakage_current
void
void set_measure_leakage_current (number )
void set_measure_leakage_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_capacitive_current
void
void set_measure_capacitive_current (number )
void set_measure_capacitive_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_transmembrane_net_current
void
void set_measure_transmembrane_net_current (number )
void set_measure_transmembrane_net_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_injection_current
void
void set_measure_injection_current (number )
void set_measure_injection_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_measure_postsynaptic_current
void
void set_measure_postsynaptic_current (number )
void set_measure_postsynaptic_current (number )<br><br>Member function of class <b>transmembrane_current2d</b><br>group: <b>ug4/Neuron/</b>
;
class
MembranePotentialDiscretization
IElemDisc IDomainElemDisc2d 
Class <b>MembranePotentialDiscretization2d</b>, default implementation of group <b>MembranePotentialDiscretization</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="MembranePotentialDiscretization2d.html">MembranePotentialDiscretization2d</a> <br><table><tr><td colspan=2><h3>MembranePotentialDiscretization2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MembranePotentialDiscretization2d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MembranePotentialDiscretization2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_hhDynamics (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
MembranePotentialDiscretization2d

MembranePotentialDiscretization2d (c_string Functions, c_string Subset(s))
MembranePotentialDiscretization2d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>MembranePotentialDiscretization2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>MembranePotentialDiscretization2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_hhDynamics
void
void set_hhDynamics (IFunctionNumber)
void set_hhDynamics (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>MembranePotentialDiscretization2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (IFunctionNumber)
void set_injection (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>MembranePotentialDiscretization2d</b><br>group: <b>ug4/Neuron/</b>
;
class
MembraneNeumannBoundaryElemDisc
IElemDisc IDomainElemDisc2d 
Class <b>MembraneNeumannBoundaryElemDisc2d</b>, default implementation of group <b>MembraneNeumannBoundaryElemDisc</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="MembraneNeumannBoundaryElemDisc2d.html">MembraneNeumannBoundaryElemDisc2d</a> <br><table><tr><td colspan=2><h3>MembraneNeumannBoundaryElemDisc2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>MembraneNeumannBoundaryElemDisc2d (c_string Functions, c_string Subset(s), number )</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>MembraneNeumannBoundaryElemDisc2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_boundary (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_capacity (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_diffusion (number )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )</td></tr><tr><td><br></td></tr></table>
constructor
MembraneNeumannBoundaryElemDisc2d

MembraneNeumannBoundaryElemDisc2d (c_string Functions, c_string Subset(s), number )
MembraneNeumannBoundaryElemDisc2d (c_string Functions, c_string Subset(s), number )<br>Constructor of class <b>MembraneNeumannBoundaryElemDisc2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_capacity
void
void set_capacity (number )
void set_capacity (number )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_injection
void
void set_injection (SmartPtr<UserNumber2d> )
void set_injection (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_boundary
void
void set_boundary (c_string )
void set_boundary (c_string )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_diffusion
void
void set_diffusion (number )
void set_diffusion (number )<br><br>Member function of class <b>MembraneNeumannBoundaryElemDisc2d</b><br>group: <b>ug4/Neuron/</b>
;
class
odes
IElemDisc IDomainElemDisc2d 
Class <b>odes2d</b>, default implementation of group <b>odes</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="odes2d.html">odes2d</a> <br><table><tr><td colspan=2><h3>odes2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>odes2d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>odes2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_D1rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_D2rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_name (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
odes2d

odes2d (c_string Functions, c_string Subset(s))
odes2d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>odes2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_rhs
void
void set_rhs (IFunctionNumber)
void set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_D1rhs
void
void set_D1rhs (IFunctionNumber)
void set_D1rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_D2rhs
void
void set_D2rhs (IFunctionNumber)
void set_D2rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>odes2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_name
void
void set_name (c_string )
void set_name (c_string )<br><br>Member function of class <b>odes2d</b><br>group: <b>ug4/Neuron/</b>
;
class
DirichletTimeDependent
IElemDisc IDomainElemDisc2d 
Class <b>DirichletTimeDependent2d</b>, default implementation of group <b>DirichletTimeDependent</b><br>class has constructor. <br>Inheritance: <a href="IElemDisc.html">IElemDisc</a> <a href="IDomainElemDisc2d.html">IDomainElemDisc2d</a> <a href="DirichletTimeDependent2d.html">DirichletTimeDependent2d</a> <br><table><tr><td colspan=2><h3>DirichletTimeDependent2d Constructors</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top></td><td class="memItemRight" valign=bottom>DirichletTimeDependent2d (c_string Functions, c_string Subset(s))</td></tr><tr><td><br></td></tr><tr><td colspan=2><h3>DirichletTimeDependent2d Member Functions</h3></td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_name (c_string )</td></tr><tr><td class="memItemLeft" nowrap align=right valign=top>void </td><td class="memItemRight" valign=bottom>set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)</td></tr><tr><td><br></td></tr></table>
constructor
DirichletTimeDependent2d

DirichletTimeDependent2d (c_string Functions, c_string Subset(s))
DirichletTimeDependent2d (c_string Functions, c_string Subset(s))<br>Constructor of class <b>DirichletTimeDependent2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_rhs
void
void set_rhs (IFunctionNumber)
void set_rhs (<a href="IFunctionNumber.html">IFunctionNumber</a> *)<br><br>Member function of class <b>DirichletTimeDependent2d</b><br>group: <b>ug4/Neuron/</b>
memberfunction
set_name
void
void set_name (c_string )
void set_name (c_string )<br><br>Member function of class <b>DirichletTimeDependent2d</b><br>group: <b>ug4/Neuron/</b>
;
function
MakeVec
SmartPtr<Vec1d>
SmartPtr<Vec1d> MakeVec (number )
SmartPtr&lt;<a href="Vec1d.html">Vec1d</a>&gt; MakeVec (number )<br><br>group: <b>/ug4/Util/VecMath</b>
function
MakeVec
SmartPtr<Vec2d>
SmartPtr<Vec2d> MakeVec (number , number )
SmartPtr&lt;<a href="Vec2d.html">Vec2d</a>&gt; MakeVec (number , number )<br><br>group: <b>/ug4/Util/VecMath</b>
function
MakeVec
SmartPtr<Vec3d>
SmartPtr<Vec3d> MakeVec (number , number , number )
SmartPtr&lt;<a href="Vec3d.html">Vec3d</a>&gt; MakeVec (number , number , number )<br><br>group: <b>/ug4/Util/VecMath</b>
function
MakeVec
SmartPtr<Vec4d>
SmartPtr<Vec4d> MakeVec (number , number , number , number )
SmartPtr&lt;<a href="Vec4d.html">Vec4d</a>&gt; MakeVec (number , number , number , number )<br><br>group: <b>/ug4/Util/VecMath</b>
function
ug_get_app_path
string
std_string ug_get_app_path ()
std_string ug_get_app_path ()<br><br>returns pathName<br>tooltip: Returns the application path<br>group: <b>/ug4/Util</b>
function
ug_get_data_path
string
std_string ug_get_data_path ()
std_string ug_get_data_path ()<br><br>returns pathName<br>tooltip: Returns the data path<br>group: <b>/ug4/Util</b>
function
ug_get_script_path
string
std_string ug_get_script_path ()
std_string ug_get_script_path ()<br><br>returns pathName<br>tooltip: Returns the script path<br>group: <b>/ug4/Util</b>
function
ug_get_current_path
string
std_string ug_get_current_path ()
std_string ug_get_current_path ()<br><br>returns pathName<br>tooltip: Returns the current path<br>group: <b>/ug4/Util</b>
function
ExecuteSystemCommand
integer
integer ExecuteSystemCommand (c_string command)
integer ExecuteSystemCommand (c_string command)<br><br>returns success<br>tooltip: Executes a command in the system shell<br>group: <b>/ug4/Util</b>
function
srand
void
void srand (integer The pseudo-random number generator is initialized using the argument passed as seed.)
void srand (integer The pseudo-random number generator is initialized using the argument passed as seed.)<br><br>returns seed<br>group: <b>/ug4/Util</b>
function
ug_file_exists
bool
bool ug_file_exists (c_string )
bool ug_file_exists (c_string )<br><br>returns exists<br>tooltip: Returns true if a path exists, false if not.<br>group: <b>/ug4/Util</b>
function
exit
void
void exit ()
void exit ()<br><br>tooltip: Immediatly terminates the application.<br>group: <b>/ug4/Util</b>
function
quit
void
void quit ()
void quit ()<br><br>tooltip: Immediatly terminates the application.<br>group: <b>/ug4/Util</b>
function
CreateFractal
bool
bool CreateFractal (Grid, HangingNodeRefiner_Grid, number , integer )
bool CreateFractal (<a href="Grid.html">Grid</a> *, <a href="HangingNodeRefiner_Grid.html">HangingNodeRefiner_Grid</a> *, number , integer )<br><br>group: <b>/ug4/Grid</b>
function
PrintAttachmentInfo
void
void PrintAttachmentInfo (Grid)
void PrintAttachmentInfo (<a href="Grid.html">Grid</a> *)<br><br>group: <b>/ug4/Grid</b>
function
LoadGrid
bool
bool LoadGrid (Grid, ISubsetHandler, c_string )
bool LoadGrid (<a href="Grid.html">Grid</a> *, <a href="ISubsetHandler.html">ISubsetHandler</a> *, c_string )<br><br>group: <b>/ug4/Grid</b>
function
LoadGrid
bool
bool LoadGrid (Grid, c_string )
bool LoadGrid (<a href="Grid.html">Grid</a> *, c_string )<br><br>group: <b>/ug4/Grid</b>
function
SaveGrid
bool
bool SaveGrid (Grid, const ISubsetHandler, c_string )
bool SaveGrid (<a href="Grid.html">Grid</a> *, const <a href="ISubsetHandler.html">ISubsetHandler</a> *, c_string )<br><br>group: <b>/ug4/Grid</b>
function
SaveGrid
bool
bool SaveGrid (Grid, ISubsetHandler, c_string )
bool SaveGrid (<a href="Grid.html">Grid</a> *, <a href="ISubsetHandler.html">ISubsetHandler</a> *, c_string )<br><br>group: <b>/ug4/Grid</b>
function
SaveGrid
bool
bool SaveGrid (Grid, c_string )
bool SaveGrid (<a href="Grid.html">Grid</a> *, c_string )<br><br>group: <b>/ug4/Grid</b>
function
LoadGridObject
bool
bool LoadGridObject (GridObject, c_string )
bool LoadGridObject (<a href="GridObject.html">GridObject</a> *, c_string )<br><br>group: <b>/ug4/Grid</b>
function
SaveGridObject
bool
bool SaveGridObject (GridObject, c_string )
bool SaveGridObject (<a href="GridObject.html">GridObject</a> *, c_string )<br><br>group: <b>/ug4/Grid</b>
function
SaveGridHierarchy
bool
bool SaveGridHierarchy (MultiGrid, c_string )
bool SaveGridHierarchy (<a href="MultiGrid.html">MultiGrid</a> *, c_string )<br><br>group: <b>/ug4/Grid</b>
function
SaveGridHierarchyTransformed
bool
bool SaveGridHierarchyTransformed (MultiGrid, ISubsetHandler, c_string , number )
bool SaveGridHierarchyTransformed (<a href="MultiGrid.html">MultiGrid</a> *, <a href="ISubsetHandler.html">ISubsetHandler</a> *, c_string , number )<br><br>group: <b>/ug4/Grid</b>
function
SaveGridHierarchyTransformed
bool
bool SaveGridHierarchyTransformed (MultiGrid, c_string , number )
bool SaveGridHierarchyTransformed (<a href="MultiGrid.html">MultiGrid</a> *, c_string , number )<br><br>group: <b>/ug4/Grid</b>
function
CreateGridObject
GridObject*
GridObjectCreateGridObject (c_string )
<a href="GridObject.html">GridObject</a> *CreateGridObject (c_string )<br><br>group: <b>/ug4/Grid</b>
function
PrintGridElementNumbers
void
void PrintGridElementNumbers (MultiGrid)
void PrintGridElementNumbers (<a href="MultiGrid.html">MultiGrid</a> *)<br><br>group: <b>/ug4/Grid</b>
function
PrintGridElementNumbers
void
void PrintGridElementNumbers (Grid)
void PrintGridElementNumbers (<a href="Grid.html">Grid</a> *)<br><br>group: <b>/ug4/Grid</b>
function
TestSubdivision
void
void TestSubdivision (c_string , c_string , integer )
void TestSubdivision (c_string , c_string , integer )<br><br>group: <b>/ug4/Grid</b>
function
TestHangingNodeRefiner_MultiGrid
bool
bool TestHangingNodeRefiner_MultiGrid (c_string , c_string , integer , number )
bool TestHangingNodeRefiner_MultiGrid (c_string , c_string , integer , number )<br><br>group: <b>/ug4/Grid</b>
function
CreateHierarchy
bool
bool CreateHierarchy (MultiGrid, integer )
bool CreateHierarchy (<a href="MultiGrid.html">MultiGrid</a> *, integer )<br><br>group: <b>/ug4/Grid</b>
function
CreateSmoothHierarchy
bool
bool CreateSmoothHierarchy (MultiGrid, integer )
bool CreateSmoothHierarchy (<a href="MultiGrid.html">MultiGrid</a> *, integer )<br><br>group: <b>/ug4/Grid</b>
function
CreateSemiSmoothHierarchy
bool
bool CreateSemiSmoothHierarchy (MultiGrid, integer )
bool CreateSemiSmoothHierarchy (<a href="MultiGrid.html">MultiGrid</a> *, integer )<br><br>group: <b>/ug4/Grid</b>
function
TestGridRedistribution
void
void TestGridRedistribution (c_string )
void TestGridRedistribution (c_string )<br><br>group: <b>/ug4/Grid</b>
function
AdjustSubsetsForSimulation
void
void AdjustSubsetsForSimulation (SubsetHandler, bool )
void AdjustSubsetsForSimulation (<a href="SubsetHandler.html">SubsetHandler</a> *, bool )<br><br>group: <b>/ug4/Grid</b>
function
AdjustSubsetsForSimulation
void
void AdjustSubsetsForSimulation (MGSubsetHandler, bool )
void AdjustSubsetsForSimulation (<a href="MGSubsetHandler.html">MGSubsetHandler</a> *, bool )<br><br>group: <b>/ug4/Grid</b>
function
AssignSubsetsByElementType
void
void AssignSubsetsByElementType (ISubsetHandler)
void AssignSubsetsByElementType (<a href="ISubsetHandler.html">ISubsetHandler</a> *)<br><br>group: <b></b>
function
AssignSubsetColors
void
void AssignSubsetColors (ISubsetHandler)
void AssignSubsetColors (<a href="ISubsetHandler.html">ISubsetHandler</a> *)<br><br>group: <b></b>
function
ExpandLayers2d
bool
bool ExpandLayers2d (Grid, SubsetHandler, const FractureInfoVec, bool , bool )
bool ExpandLayers2d (<a href="Grid.html">Grid</a> *, <a href="SubsetHandler.html">SubsetHandler</a> *, const <a href="FractureInfoVec.html">FractureInfoVec</a> *, bool , bool )<br><br>group: <b>/ug4/Grid</b>
function
ExpandLayers3d
bool
bool ExpandLayers3d (Grid, SubsetHandler, const FractureInfoVec, bool , bool )
bool ExpandLayers3d (<a href="Grid.html">Grid</a> *, <a href="SubsetHandler.html">SubsetHandler</a> *, const <a href="FractureInfoVec.html">FractureInfoVec</a> *, bool , bool )<br><br>group: <b>/ug4/Grid</b>
function
CheckHangingNodeConsistency
bool
bool CheckHangingNodeConsistency (MultiGrid)
bool CheckHangingNodeConsistency (<a href="MultiGrid.html">MultiGrid</a> *)<br><br>group: <b>/ug4/Grid</b>
function
PclDebugBarrierEnabled
bool
bool PclDebugBarrierEnabled ()
bool PclDebugBarrierEnabled ()<br><br>returns Enabled<br>tooltip: Returns the whether debug barriers are enabled.<br>group: <b>/ug4/pcl</b>
function
GetNumProcesses
integer
integer GetNumProcesses ()
integer GetNumProcesses ()<br><br>returns NumProcs<br>tooltip: Returns the number of active processes.<br>group: <b>/ug4/pcl</b>
function
GetProcessRank
integer
integer GetProcessRank ()
integer GetProcessRank ()<br><br>returns ProcRank<br>tooltip: Returns the rank of the current process.<br>group: <b>/ug4/pcl</b>
function
SynchronizeProcesses
void
void SynchronizeProcesses ()
void SynchronizeProcesses ()<br><br>tooltip: Waits until all active processes reached this point.<br>group: <b>/ug4/pcl</b>
function
AllProcsTrue
bool
bool AllProcsTrue (bool boolean)
bool AllProcsTrue (bool boolean)<br><br>returns boolean<br>tooltip: Returns true if all processes call the method with true.<br>group: <b>/ug4/pcl</b>
function
ParallelMin
number
number ParallelMin (number t)
number ParallelMin (number t)<br><br>returns tmax<br>tooltip: returns the maximum of t over all processes. note: you have to assure that all processes call this function.<br>group: <b>/ug4/pcl</b>
function
ParallelMax
number
number ParallelMax (number t)
number ParallelMax (number t)<br><br>returns tmin<br>tooltip: returns the minimum of t over all processes. note: you have to assure that all processes call this function.<br>group: <b>/ug4/pcl</b>
function
ParallelSum
number
number ParallelSum (number t)
number ParallelSum (number t)<br><br>returns tsum<br>tooltip: returns the sum of t over all processes. note: you have to assure that all processes call this function.<br>group: <b>/ug4/pcl</b>
function
LoadDomain
void
void LoadDomain (Domain1dDomain, c_string Filename)
void LoadDomain (<a href="Domain1d.html">Domain1d</a> *Domain, c_string Filename)<br><br>tooltip: Loads a domain<br>group: <b>/ug4/Domain</b>
function
LoadDomain
void
void LoadDomain (Domain2dDomain, c_string Filename)
void LoadDomain (<a href="Domain2d.html">Domain2d</a> *Domain, c_string Filename)<br><br>tooltip: Loads a domain<br>group: <b>/ug4/Domain</b>
function
LoadDomain
void
void LoadDomain (Domain3dDomain, c_string Filename)
void LoadDomain (<a href="Domain3d.html">Domain3d</a> *Domain, c_string Filename)<br><br>tooltip: Loads a domain<br>group: <b>/ug4/Domain</b>
function
LoadAndRefineDomain
void
void LoadAndRefineDomain (Domain1dDomain, c_string Filename, integer NumRefines)
void LoadAndRefineDomain (<a href="Domain1d.html">Domain1d</a> *Domain, c_string Filename, integer NumRefines)<br><br>tooltip: Loads a domain and performs global refinement<br>group: <b>/ug4/Domain</b>
function
LoadAndRefineDomain
void
void LoadAndRefineDomain (Domain2dDomain, c_string Filename, integer NumRefines)
void LoadAndRefineDomain (<a href="Domain2d.html">Domain2d</a> *Domain, c_string Filename, integer NumRefines)<br><br>tooltip: Loads a domain and performs global refinement<br>group: <b>/ug4/Domain</b>
function
LoadAndRefineDomain
void
void LoadAndRefineDomain (Domain3dDomain, c_string Filename, integer NumRefines)
void LoadAndRefineDomain (<a href="Domain3d.html">Domain3d</a> *Domain, c_string Filename, integer NumRefines)<br><br>tooltip: Loads a domain and performs global refinement<br>group: <b>/ug4/Domain</b>
function
SaveDomain
void
void SaveDomain (Domain1dDomain, c_string Filename)
void SaveDomain (<a href="Domain1d.html">Domain1d</a> *Domain, c_string Filename)<br><br>tooltip: Saves a domain<br>group: <b>/ug4/Domain</b>
function
SaveDomain
void
void SaveDomain (Domain2dDomain, c_string Filename)
void SaveDomain (<a href="Domain2d.html">Domain2d</a> *Domain, c_string Filename)<br><br>tooltip: Saves a domain<br>group: <b>/ug4/Domain</b>
function
SaveDomain
void
void SaveDomain (Domain3dDomain, c_string Filename)
void SaveDomain (<a href="Domain3d.html">Domain3d</a> *Domain, c_string Filename)<br><br>tooltip: Saves a domain<br>group: <b>/ug4/Domain</b>
function
SavePartitionMap
bool
bool SavePartitionMap (PartitionMapPartitionMap, Domain1dDomain, c_string Filename)
bool SavePartitionMap (<a href="PartitionMap.html">PartitionMap</a> *PartitionMap, <a href="Domain1d.html">Domain1d</a> *Domain, c_string Filename)<br><br>returns Success<br>tooltip: Saves a partition map<br>group: <b>/ug4/Domain</b>
function
SavePartitionMap
bool
bool SavePartitionMap (PartitionMapPartitionMap, Domain2dDomain, c_string Filename)
bool SavePartitionMap (<a href="PartitionMap.html">PartitionMap</a> *PartitionMap, <a href="Domain2d.html">Domain2d</a> *Domain, c_string Filename)<br><br>returns Success<br>tooltip: Saves a partition map<br>group: <b>/ug4/Domain</b>
function
SavePartitionMap
bool
bool SavePartitionMap (PartitionMapPartitionMap, Domain3dDomain, c_string Filename)
bool SavePartitionMap (<a href="PartitionMap.html">PartitionMap</a> *PartitionMap, <a href="Domain3d.html">Domain3d</a> *Domain, c_string Filename)<br><br>returns Success<br>tooltip: Saves a partition map<br>group: <b>/ug4/Domain</b>
function
DistributeDomain
bool
bool DistributeDomain (Domain1d)
bool DistributeDomain (<a href="Domain1d.html">Domain1d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
DistributeDomain
bool
bool DistributeDomain (Domain1d, PartitionMap)
bool DistributeDomain (<a href="Domain1d.html">Domain1d</a> *, <a href="PartitionMap.html">PartitionMap</a> *)<br><br>group: <b>/ug4/Domain</b>
function
DistributeDomain
bool
bool DistributeDomain (Domain2d)
bool DistributeDomain (<a href="Domain2d.html">Domain2d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
DistributeDomain
bool
bool DistributeDomain (Domain2d, PartitionMap)
bool DistributeDomain (<a href="Domain2d.html">Domain2d</a> *, <a href="PartitionMap.html">PartitionMap</a> *)<br><br>group: <b>/ug4/Domain</b>
function
DistributeDomain
bool
bool DistributeDomain (Domain3d)
bool DistributeDomain (<a href="Domain3d.html">Domain3d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
DistributeDomain
bool
bool DistributeDomain (Domain3d, PartitionMap)
bool DistributeDomain (<a href="Domain3d.html">Domain3d</a> *, <a href="PartitionMap.html">PartitionMap</a> *)<br><br>group: <b>/ug4/Domain</b>
function
DistributeDomain1d
bool
bool DistributeDomain1d (Domain1d)
bool DistributeDomain1d (<a href="Domain1d.html">Domain1d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_Bisection
bool
bool PartitionDomain_Bisection (Domain1d, PartitionMap, integer )
bool PartitionDomain_Bisection (<a href="Domain1d.html">Domain1d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer )<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_Bisection
bool
bool PartitionDomain_Bisection (Domain2d, PartitionMap, integer )
bool PartitionDomain_Bisection (<a href="Domain2d.html">Domain2d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer )<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_Bisection
bool
bool PartitionDomain_Bisection (Domain3d, PartitionMap, integer )
bool PartitionDomain_Bisection (<a href="Domain3d.html">Domain3d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer )<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_MetisKWay
bool
bool PartitionDomain_MetisKWay (Domain1d, PartitionMap, integer , integer , integer , integer )
bool PartitionDomain_MetisKWay (<a href="Domain1d.html">Domain1d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer , integer , integer , integer )<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_MetisKWay
bool
bool PartitionDomain_MetisKWay (Domain2d, PartitionMap, integer , integer , integer , integer )
bool PartitionDomain_MetisKWay (<a href="Domain2d.html">Domain2d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer , integer , integer , integer )<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_MetisKWay
bool
bool PartitionDomain_MetisKWay (Domain3d, PartitionMap, integer , integer , integer , integer )
bool PartitionDomain_MetisKWay (<a href="Domain3d.html">Domain3d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer , integer , integer , integer )<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_LevelBased
bool
bool PartitionDomain_LevelBased (Domain1d, PartitionMap, integer , integer )
bool PartitionDomain_LevelBased (<a href="Domain1d.html">Domain1d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer , integer )<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_LevelBased
bool
bool PartitionDomain_LevelBased (Domain2d, PartitionMap, integer , integer )
bool PartitionDomain_LevelBased (<a href="Domain2d.html">Domain2d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer , integer )<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_LevelBased
bool
bool PartitionDomain_LevelBased (Domain3d, PartitionMap, integer , integer )
bool PartitionDomain_LevelBased (<a href="Domain3d.html">Domain3d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer , integer )<br><br>group: <b>/ug4/Domain</b>
function
RedistributeDomain
bool
bool RedistributeDomain (Domain1d, PartitionMap, bool )
bool RedistributeDomain (<a href="Domain1d.html">Domain1d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, bool )<br><br>group: <b>/ug4/Domain</b>
function
RedistributeDomain
bool
bool RedistributeDomain (Domain2d, PartitionMap, bool )
bool RedistributeDomain (<a href="Domain2d.html">Domain2d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, bool )<br><br>group: <b>/ug4/Domain</b>
function
RedistributeDomain
bool
bool RedistributeDomain (Domain3d, PartitionMap, bool )
bool RedistributeDomain (<a href="Domain3d.html">Domain3d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, bool )<br><br>group: <b>/ug4/Domain</b>
function
ScaleDomain
void
void ScaleDomain (Domain1d, number , number , number )
void ScaleDomain (<a href="Domain1d.html">Domain1d</a> *, number , number , number )<br><br>group: <b>/ug4/Domain</b>
function
ScaleDomain
void
void ScaleDomain (Domain2d, number , number , number )
void ScaleDomain (<a href="Domain2d.html">Domain2d</a> *, number , number , number )<br><br>group: <b>/ug4/Domain</b>
function
ScaleDomain
void
void ScaleDomain (Domain3d, number , number , number )
void ScaleDomain (<a href="Domain3d.html">Domain3d</a> *, number , number , number )<br><br>group: <b>/ug4/Domain</b>
function
ScaleDomain
void
void ScaleDomain (Domain1d, ISelector, const Vec3d, const Vec3d)
void ScaleDomain (<a href="Domain1d.html">Domain1d</a> *, <a href="ISelector.html">ISelector</a> *, const <a href="Vec3d.html">Vec3d</a> *, const <a href="Vec3d.html">Vec3d</a> *)<br><br>group: <b>/ug4/Transform</b>
function
ScaleDomain
void
void ScaleDomain (Domain2d, ISelector, const Vec3d, const Vec3d)
void ScaleDomain (<a href="Domain2d.html">Domain2d</a> *, <a href="ISelector.html">ISelector</a> *, const <a href="Vec3d.html">Vec3d</a> *, const <a href="Vec3d.html">Vec3d</a> *)<br><br>group: <b>/ug4/Transform</b>
function
ScaleDomain
void
void ScaleDomain (Domain3d, ISelector, const Vec3d, const Vec3d)
void ScaleDomain (<a href="Domain3d.html">Domain3d</a> *, <a href="ISelector.html">ISelector</a> *, const <a href="Vec3d.html">Vec3d</a> *, const <a href="Vec3d.html">Vec3d</a> *)<br><br>group: <b>/ug4/Transform</b>
function
TranslateDomain
void
void TranslateDomain (Domain1d, number , number , number )
void TranslateDomain (<a href="Domain1d.html">Domain1d</a> *, number , number , number )<br><br>group: <b>/ug4/Domain</b>
function
TranslateDomain
void
void TranslateDomain (Domain2d, number , number , number )
void TranslateDomain (<a href="Domain2d.html">Domain2d</a> *, number , number , number )<br><br>group: <b>/ug4/Domain</b>
function
TranslateDomain
void
void TranslateDomain (Domain3d, number , number , number )
void TranslateDomain (<a href="Domain3d.html">Domain3d</a> *, number , number , number )<br><br>group: <b>/ug4/Domain</b>
function
TranslateDomain
void
void TranslateDomain (Domain1d, ISelector, const Vec3d)
void TranslateDomain (<a href="Domain1d.html">Domain1d</a> *, <a href="ISelector.html">ISelector</a> *, const <a href="Vec3d.html">Vec3d</a> *)<br><br>group: <b>/ug4/Transform</b>
function
TranslateDomain
void
void TranslateDomain (Domain2d, ISelector, const Vec3d)
void TranslateDomain (<a href="Domain2d.html">Domain2d</a> *, <a href="ISelector.html">ISelector</a> *, const <a href="Vec3d.html">Vec3d</a> *)<br><br>group: <b>/ug4/Transform</b>
function
TranslateDomain
void
void TranslateDomain (Domain3d, ISelector, const Vec3d)
void TranslateDomain (<a href="Domain3d.html">Domain3d</a> *, <a href="ISelector.html">ISelector</a> *, const <a href="Vec3d.html">Vec3d</a> *)<br><br>group: <b>/ug4/Transform</b>
function
CalculateSurfaceArea
number
number CalculateSurfaceArea (Domain1d, ISubsetHandler, integer , integer )
number CalculateSurfaceArea (<a href="Domain1d.html">Domain1d</a> *, <a href="ISubsetHandler.html">ISubsetHandler</a> *, integer , integer )<br><br>group: <b>/ug4/Domain</b>
function
CalculateSurfaceArea
number
number CalculateSurfaceArea (Domain2d, ISubsetHandler, integer , integer )
number CalculateSurfaceArea (<a href="Domain2d.html">Domain2d</a> *, <a href="ISubsetHandler.html">ISubsetHandler</a> *, integer , integer )<br><br>group: <b>/ug4/Domain</b>
function
CalculateSurfaceArea
number
number CalculateSurfaceArea (Domain3d, ISubsetHandler, integer , integer )
number CalculateSurfaceArea (<a href="Domain3d.html">Domain3d</a> *, <a href="ISubsetHandler.html">ISubsetHandler</a> *, integer , integer )<br><br>group: <b>/ug4/Domain</b>
function
TestDomainInterfaces
bool
bool TestDomainInterfaces (Domain1d)
bool TestDomainInterfaces (<a href="Domain1d.html">Domain1d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
TestDomainInterfaces
bool
bool TestDomainInterfaces (Domain2d)
bool TestDomainInterfaces (<a href="Domain2d.html">Domain2d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
TestDomainInterfaces
bool
bool TestDomainInterfaces (Domain3d)
bool TestDomainInterfaces (<a href="Domain3d.html">Domain3d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
MinimizeMemoryFootprint
void
void MinimizeMemoryFootprint (Domain1d)
void MinimizeMemoryFootprint (<a href="Domain1d.html">Domain1d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
MinimizeMemoryFootprint
void
void MinimizeMemoryFootprint (Domain2d)
void MinimizeMemoryFootprint (<a href="Domain2d.html">Domain2d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
MinimizeMemoryFootprint
void
void MinimizeMemoryFootprint (Domain3d)
void MinimizeMemoryFootprint (<a href="Domain3d.html">Domain3d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
DistributeDomain2d
bool
bool DistributeDomain2d (Domain2d)
bool DistributeDomain2d (<a href="Domain2d.html">Domain2d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
DistributeDomain3d
bool
bool DistributeDomain3d (Domain3d)
bool DistributeDomain3d (<a href="Domain3d.html">Domain3d</a> *)<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_RegularGrid
bool
bool PartitionDomain_RegularGrid (Domain2d, PartitionMap, integer , integer , bool )
bool PartitionDomain_RegularGrid (<a href="Domain2d.html">Domain2d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer , integer , bool )<br><br>group: <b>/ug4/Domain</b>
function
PartitionDomain_RegularGrid
bool
bool PartitionDomain_RegularGrid (Domain3d, PartitionMap, integer , integer , bool )
bool PartitionDomain_RegularGrid (<a href="Domain3d.html">Domain3d</a> *, <a href="PartitionMap.html">PartitionMap</a> *, integer , integer , bool )<br><br>group: <b>/ug4/Domain</b>
function
MarkForRefinement_All
void
void MarkForRefinement_All (SmartPtr<IRefiner> )
void MarkForRefinement_All (SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; )<br><br>group: <b>/ug4/Refinement</b>
function
GlobalDomainRefiner
SmartPtr<IRefiner>
SmartPtr<IRefiner> GlobalDomainRefiner (Domain1d)
SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; GlobalDomainRefiner (<a href="Domain1d.html">Domain1d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
GlobalDomainRefiner
SmartPtr<IRefiner>
SmartPtr<IRefiner> GlobalDomainRefiner (Domain2d)
SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; GlobalDomainRefiner (<a href="Domain2d.html">Domain2d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
GlobalDomainRefiner
SmartPtr<IRefiner>
SmartPtr<IRefiner> GlobalDomainRefiner (Domain3d)
SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; GlobalDomainRefiner (<a href="Domain3d.html">Domain3d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
HangingNodeDomainRefiner
SmartPtr<IRefiner>
SmartPtr<IRefiner> HangingNodeDomainRefiner (Domain1d)
SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; HangingNodeDomainRefiner (<a href="Domain1d.html">Domain1d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
HangingNodeDomainRefiner
SmartPtr<IRefiner>
SmartPtr<IRefiner> HangingNodeDomainRefiner (Domain2d)
SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; HangingNodeDomainRefiner (<a href="Domain2d.html">Domain2d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
HangingNodeDomainRefiner
SmartPtr<IRefiner>
SmartPtr<IRefiner> HangingNodeDomainRefiner (Domain3d)
SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; HangingNodeDomainRefiner (<a href="Domain3d.html">Domain3d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
GlobalFracturedDomainRefiner
SmartPtr<GlobalFracturedMediumRefiner>
SmartPtr<GlobalFracturedMediumRefiner> GlobalFracturedDomainRefiner (Domain1d)
SmartPtr&lt;<a href="GlobalFracturedMediumRefiner.html">GlobalFracturedMediumRefiner</a>&gt; GlobalFracturedDomainRefiner (<a href="Domain1d.html">Domain1d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
GlobalFracturedDomainRefiner
SmartPtr<GlobalFracturedMediumRefiner>
SmartPtr<GlobalFracturedMediumRefiner> GlobalFracturedDomainRefiner (Domain2d)
SmartPtr&lt;<a href="GlobalFracturedMediumRefiner.html">GlobalFracturedMediumRefiner</a>&gt; GlobalFracturedDomainRefiner (<a href="Domain2d.html">Domain2d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
GlobalFracturedDomainRefiner
SmartPtr<GlobalFracturedMediumRefiner>
SmartPtr<GlobalFracturedMediumRefiner> GlobalFracturedDomainRefiner (Domain3d)
SmartPtr&lt;<a href="GlobalFracturedMediumRefiner.html">GlobalFracturedMediumRefiner</a>&gt; GlobalFracturedDomainRefiner (<a href="Domain3d.html">Domain3d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
AdaptiveRegularDomainRefiner
SmartPtr<IRefiner>
SmartPtr<IRefiner> AdaptiveRegularDomainRefiner (Domain1d)
SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; AdaptiveRegularDomainRefiner (<a href="Domain1d.html">Domain1d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
AdaptiveRegularDomainRefiner
SmartPtr<IRefiner>
SmartPtr<IRefiner> AdaptiveRegularDomainRefiner (Domain2d)
SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; AdaptiveRegularDomainRefiner (<a href="Domain2d.html">Domain2d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
AdaptiveRegularDomainRefiner
SmartPtr<IRefiner>
SmartPtr<IRefiner> AdaptiveRegularDomainRefiner (Domain3d)
SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; AdaptiveRegularDomainRefiner (<a href="Domain3d.html">Domain3d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_VerticesInSphere
void
void MarkForRefinement_VerticesInSphere (Domain1d, SmartPtr<IRefiner> , const Vec1d, number )
void MarkForRefinement_VerticesInSphere (<a href="Domain1d.html">Domain1d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec1d.html">Vec1d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_VerticesInSphere
void
void MarkForRefinement_VerticesInSphere (Domain2d, SmartPtr<IRefiner> , const Vec2d, number )
void MarkForRefinement_VerticesInSphere (<a href="Domain2d.html">Domain2d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec2d.html">Vec2d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_VerticesInSphere
void
void MarkForRefinement_VerticesInSphere (Domain3d, SmartPtr<IRefiner> , const Vec3d, number )
void MarkForRefinement_VerticesInSphere (<a href="Domain3d.html">Domain3d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec3d.html">Vec3d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_EdgesInSphere
void
void MarkForRefinement_EdgesInSphere (Domain1d, SmartPtr<IRefiner> , const Vec1d, number )
void MarkForRefinement_EdgesInSphere (<a href="Domain1d.html">Domain1d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec1d.html">Vec1d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_EdgesInSphere
void
void MarkForRefinement_EdgesInSphere (Domain2d, SmartPtr<IRefiner> , const Vec2d, number )
void MarkForRefinement_EdgesInSphere (<a href="Domain2d.html">Domain2d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec2d.html">Vec2d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_EdgesInSphere
void
void MarkForRefinement_EdgesInSphere (Domain3d, SmartPtr<IRefiner> , const Vec3d, number )
void MarkForRefinement_EdgesInSphere (<a href="Domain3d.html">Domain3d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec3d.html">Vec3d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_FacesInSphere
void
void MarkForRefinement_FacesInSphere (Domain1d, SmartPtr<IRefiner> , const Vec1d, number )
void MarkForRefinement_FacesInSphere (<a href="Domain1d.html">Domain1d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec1d.html">Vec1d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_FacesInSphere
void
void MarkForRefinement_FacesInSphere (Domain2d, SmartPtr<IRefiner> , const Vec2d, number )
void MarkForRefinement_FacesInSphere (<a href="Domain2d.html">Domain2d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec2d.html">Vec2d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_FacesInSphere
void
void MarkForRefinement_FacesInSphere (Domain3d, SmartPtr<IRefiner> , const Vec3d, number )
void MarkForRefinement_FacesInSphere (<a href="Domain3d.html">Domain3d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec3d.html">Vec3d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_VolumesInSphere
void
void MarkForRefinement_VolumesInSphere (Domain1d, SmartPtr<IRefiner> , const Vec1d, number )
void MarkForRefinement_VolumesInSphere (<a href="Domain1d.html">Domain1d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec1d.html">Vec1d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_VolumesInSphere
void
void MarkForRefinement_VolumesInSphere (Domain2d, SmartPtr<IRefiner> , const Vec2d, number )
void MarkForRefinement_VolumesInSphere (<a href="Domain2d.html">Domain2d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec2d.html">Vec2d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_VolumesInSphere
void
void MarkForRefinement_VolumesInSphere (Domain3d, SmartPtr<IRefiner> , const Vec3d, number )
void MarkForRefinement_VolumesInSphere (<a href="Domain3d.html">Domain3d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec3d.html">Vec3d</a> *, number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_VerticesInCube
void
void MarkForRefinement_VerticesInCube (Domain1d, SmartPtr<IRefiner> , const Vec1d, const Vec1d)
void MarkForRefinement_VerticesInCube (<a href="Domain1d.html">Domain1d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec1d.html">Vec1d</a> *, const <a href="Vec1d.html">Vec1d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_VerticesInCube
void
void MarkForRefinement_VerticesInCube (Domain2d, SmartPtr<IRefiner> , const Vec2d, const Vec2d)
void MarkForRefinement_VerticesInCube (<a href="Domain2d.html">Domain2d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec2d.html">Vec2d</a> *, const <a href="Vec2d.html">Vec2d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_VerticesInCube
void
void MarkForRefinement_VerticesInCube (Domain3d, SmartPtr<IRefiner> , const Vec3d, const Vec3d)
void MarkForRefinement_VerticesInCube (<a href="Domain3d.html">Domain3d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , const <a href="Vec3d.html">Vec3d</a> *, const <a href="Vec3d.html">Vec3d</a> *)<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_AnisotropicElements
void
void MarkForRefinement_AnisotropicElements (Domain1d, SmartPtr<IRefiner> , number )
void MarkForRefinement_AnisotropicElements (<a href="Domain1d.html">Domain1d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_AnisotropicElements
void
void MarkForRefinement_AnisotropicElements (Domain2d, SmartPtr<IRefiner> , number )
void MarkForRefinement_AnisotropicElements (<a href="Domain2d.html">Domain2d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , number )<br><br>group: <b>/ug4/Refinement</b>
function
MarkForRefinement_AnisotropicElements
void
void MarkForRefinement_AnisotropicElements (Domain3d, SmartPtr<IRefiner> , number )
void MarkForRefinement_AnisotropicElements (<a href="Domain3d.html">Domain3d</a> *, SmartPtr&lt;<a href="IRefiner.html">IRefiner</a>&gt; , number )<br><br>group: <b>/ug4/Refinement</b>
function
SelectDomainElements
void
void SelectDomainElements (ISelector, bool , bool , bool , bool , bool )
void SelectDomainElements (<a href="ISelector.html">ISelector</a> *, bool , bool , bool , bool , bool )<br><br>group: <b>/ug4/Selection</b>
function
SelectAssociatedElements
void
void SelectAssociatedElements (ISelector, bool , bool , bool , bool )
void SelectAssociatedElements (<a href="ISelector.html">ISelector</a> *, bool , bool , bool , bool )<br><br>group: <b>/ug4/Selection</b>
function
SelectDomainSubset
void
void SelectDomainSubset (ISelector, Domain1d, integer , bool , bool , bool , bool , bool )
void SelectDomainSubset (<a href="ISelector.html">ISelector</a> *, <a href="Domain1d.html">Domain1d</a> *, integer , bool , bool , bool , bool , bool )<br><br>group: <b>/ug4/Selection</b>
function
SelectDomainSubset
void
void SelectDomainSubset (ISelector, Domain2d, integer , bool , bool , bool , bool , bool )
void SelectDomainSubset (<a href="ISelector.html">ISelector</a> *, <a href="Domain2d.html">Domain2d</a> *, integer , bool , bool , bool , bool , bool )<br><br>group: <b>/ug4/Selection</b>
function
SelectDomainSubset
void
void SelectDomainSubset (ISelector, Domain3d, integer , bool , bool , bool , bool , bool )
void SelectDomainSubset (<a href="ISelector.html">ISelector</a> *, <a href="Domain3d.html">Domain3d</a> *, integer , bool , bool , bool , bool , bool )<br><br>group: <b>/ug4/Selection</b>
function
GetProfileNode
const UGProfileNode*
const UGProfileNodeGetProfileNode (c_string )
const <a href="UGProfileNode.html">UGProfileNode</a> *GetProfileNode (c_string )<br><br>group: <b>/ug4/Util/Profiler</b>
function
GetProfilerAvailable
bool
bool GetProfilerAvailable ()
bool GetProfilerAvailable ()<br><br>returns true if profiler available<br>group: <b>/ug4/Util/Profiler</b>
function
SetOutputProfileStats
void
void SetOutputProfileStats (bool bOutput)
void SetOutputProfileStats (bool bOutput)<br><br>tooltip: if set to true and profiler available, profile stats are printed at the end of the program. true is default<br>group: <b>/ug4/Util/Profiler</b>
function
GetLogAssistant
LogAssistant*
LogAssistantGetLogAssistant ()
<a href="LogAssistant.html">LogAssistant</a> *GetLogAssistant ()<br><br>returns the log assistant<br>group: <b>/ug4/Util/Log</b>
function
GetClockS
number
number GetClockS ()
number GetClockS ()<br><br>group: <b>/ug4/Util/Log</b>
function
PrintLUA
void
void PrintLUA ()
void PrintLUA ()<br><br>group: <b>/ug4/Util/Log</b>
function
DefinedUG_DEBUG
bool
bool DefinedUG_DEBUG ()
bool DefinedUG_DEBUG ()<br><br>group: <b>/ug4/Util/Internal</b>
function
IsDefinedUG_DEBUG
bool
bool IsDefinedUG_DEBUG ()
bool IsDefinedUG_DEBUG ()<br><br>group: <b>/ug4/Util/Internal</b>
function
DefinedUG_ENABLE_DEBUG_LOGS
bool
bool DefinedUG_ENABLE_DEBUG_LOGS ()
bool DefinedUG_ENABLE_DEBUG_LOGS ()<br><br>group: <b>/ug4/Util/Internal</b>
function
IsDefinedUG_ENABLE_DEBUG_LOGS
bool
bool IsDefinedUG_ENABLE_DEBUG_LOGS ()
bool IsDefinedUG_ENABLE_DEBUG_LOGS ()<br><br>group: <b>/ug4/Util/Internal</b>
function
PrintBuildConfiguration
void
void PrintBuildConfiguration ()
void PrintBuildConfiguration ()<br><br>group: <b>/ug4/Util/Internal</b>
function
PrintBuildConfigurationExtended
void
void PrintBuildConfigurationExtended ()
void PrintBuildConfigurationExtended ()<br><br>group: <b>/ug4/Util/Internal</b>
function
GetSVNRevision
string
std_string GetSVNRevision ()
std_string GetSVNRevision ()<br><br>group: <b>/ug4/Util/Internal</b>
function
GetCompileDate
string
std_string GetCompileDate ()
std_string GetCompileDate ()<br><br>group: <b>/ug4/Util/Internal</b>
function
GetBuildHostname
string
std_string GetBuildHostname ()
std_string GetBuildHostname ()<br><br>group: <b>/ug4/Util/Internal</b>
function
LevenshteinDistance
integer
integer LevenshteinDistance (std_string , std_string )
integer LevenshteinDistance (std_string , std_string )<br><br>group: <b>/ug4/Util/Internal</b>
function
VecScaleAssign
void
void VecScaleAssign (VectorCPU1, number , const VectorCPU1)
void VecScaleAssign (<a href="VectorCPU1.html">VectorCPU1</a> *, number , const <a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>group: <b>/ug4/Algebra</b>
function
VecScaleAssign
void
void VecScaleAssign (VectorCPU2, number , const VectorCPU2)
void VecScaleAssign (<a href="VectorCPU2.html">VectorCPU2</a> *, number , const <a href="VectorCPU2.html">VectorCPU2</a> *)<br><br>group: <b>/ug4/Algebra</b>
function
VecScaleAssign
void
void VecScaleAssign (VectorCPU3, number , const VectorCPU3)
void VecScaleAssign (<a href="VectorCPU3.html">VectorCPU3</a> *, number , const <a href="VectorCPU3.html">VectorCPU3</a> *)<br><br>group: <b>/ug4/Algebra</b>
function
VecAssign
void
void VecAssign (VectorCPU1, const VectorCPU1)
void VecAssign (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>group: <b>/ug4/Algebra</b>
function
VecAssign
void
void VecAssign (VectorCPU2, const VectorCPU2)
void VecAssign (<a href="VectorCPU2.html">VectorCPU2</a> *, const <a href="VectorCPU2.html">VectorCPU2</a> *)<br><br>group: <b>/ug4/Algebra</b>
function
VecAssign
void
void VecAssign (VectorCPU3, const VectorCPU3)
void VecAssign (<a href="VectorCPU3.html">VectorCPU3</a> *, const <a href="VectorCPU3.html">VectorCPU3</a> *)<br><br>group: <b>/ug4/Algebra</b>
function
VecScaleAdd2
void
void VecScaleAdd2 (VectorCPU1dest, number alpha1, const VectorCPU1vec1, number alpha2, const VectorCPU1vec2)
void VecScaleAdd2 (<a href="VectorCPU1.html">VectorCPU1</a> *dest, number alpha1, const <a href="VectorCPU1.html">VectorCPU1</a> *vec1, number alpha2, const <a href="VectorCPU1.html">VectorCPU1</a> *vec2)<br><br>returns alpha1*vec1 + alpha2*vec2<br>group: <b>/ug4/Algebra</b>
function
VecScaleAdd2
void
void VecScaleAdd2 (VectorCPU2dest, number alpha1, const VectorCPU2vec1, number alpha2, const VectorCPU2vec2)
void VecScaleAdd2 (<a href="VectorCPU2.html">VectorCPU2</a> *dest, number alpha1, const <a href="VectorCPU2.html">VectorCPU2</a> *vec1, number alpha2, const <a href="VectorCPU2.html">VectorCPU2</a> *vec2)<br><br>returns alpha1*vec1 + alpha2*vec2<br>group: <b>/ug4/Algebra</b>
function
VecScaleAdd2
void
void VecScaleAdd2 (VectorCPU3dest, number alpha1, const VectorCPU3vec1, number alpha2, const VectorCPU3vec2)
void VecScaleAdd2 (<a href="VectorCPU3.html">VectorCPU3</a> *dest, number alpha1, const <a href="VectorCPU3.html">VectorCPU3</a> *vec1, number alpha2, const <a href="VectorCPU3.html">VectorCPU3</a> *vec2)<br><br>returns alpha1*vec1 + alpha2*vec2<br>group: <b>/ug4/Algebra</b>
function
VecScaleAdd3
void
void VecScaleAdd3 (VectorCPU1dest, number alpha1, const VectorCPU1vec1, number alpha2, const VectorCPU1vec2, number alpha3, const VectorCPU1vec3)
void VecScaleAdd3 (<a href="VectorCPU1.html">VectorCPU1</a> *dest, number alpha1, const <a href="VectorCPU1.html">VectorCPU1</a> *vec1, number alpha2, const <a href="VectorCPU1.html">VectorCPU1</a> *vec2, number alpha3, const <a href="VectorCPU1.html">VectorCPU1</a> *vec3)<br><br>returns alpha1*vec1 + alpha2*vec2 + alpha3*vec3<br>group: <b>/ug4/Algebra</b>
function
VecScaleAdd3
void
void VecScaleAdd3 (VectorCPU2dest, number alpha1, const VectorCPU2vec1, number alpha2, const VectorCPU2vec2, number alpha3, const VectorCPU2vec3)
void VecScaleAdd3 (<a href="VectorCPU2.html">VectorCPU2</a> *dest, number alpha1, const <a href="VectorCPU2.html">VectorCPU2</a> *vec1, number alpha2, const <a href="VectorCPU2.html">VectorCPU2</a> *vec2, number alpha3, const <a href="VectorCPU2.html">VectorCPU2</a> *vec3)<br><br>returns alpha1*vec1 + alpha2*vec2 + alpha3*vec3<br>group: <b>/ug4/Algebra</b>
function
VecScaleAdd3
void
void VecScaleAdd3 (VectorCPU3dest, number alpha1, const VectorCPU3vec1, number alpha2, const VectorCPU3vec2, number alpha3, const VectorCPU3vec3)
void VecScaleAdd3 (<a href="VectorCPU3.html">VectorCPU3</a> *dest, number alpha1, const <a href="VectorCPU3.html">VectorCPU3</a> *vec1, number alpha2, const <a href="VectorCPU3.html">VectorCPU3</a> *vec2, number alpha3, const <a href="VectorCPU3.html">VectorCPU3</a> *vec3)<br><br>returns alpha1*vec1 + alpha2*vec2 + alpha3*vec3<br>group: <b>/ug4/Algebra</b>
function
ApplyLinearSolver
bool
bool ApplyLinearSolver (SmartPtr<ILinearOperatorCPU1> , VectorCPU1, VectorCPU1, SmartPtr<ILinearOperatorInverseCPU1> )
bool ApplyLinearSolver (SmartPtr&lt;<a href="ILinearOperatorCPU1.html">ILinearOperatorCPU1</a>&gt; , <a href="VectorCPU1.html">VectorCPU1</a> *, <a href="VectorCPU1.html">VectorCPU1</a> *, SmartPtr&lt;<a href="ILinearOperatorInverseCPU1.html">ILinearOperatorInverseCPU1</a>&gt; )<br><br>group: <b>/ug4/Algebra</b>
function
ApplyLinearSolver
bool
bool ApplyLinearSolver (SmartPtr<ILinearOperatorCPU2> , VectorCPU2, VectorCPU2, SmartPtr<ILinearOperatorInverseCPU2> )
bool ApplyLinearSolver (SmartPtr&lt;<a href="ILinearOperatorCPU2.html">ILinearOperatorCPU2</a>&gt; , <a href="VectorCPU2.html">VectorCPU2</a> *, <a href="VectorCPU2.html">VectorCPU2</a> *, SmartPtr&lt;<a href="ILinearOperatorInverseCPU2.html">ILinearOperatorInverseCPU2</a>&gt; )<br><br>group: <b>/ug4/Algebra</b>
function
ApplyLinearSolver
bool
bool ApplyLinearSolver (SmartPtr<ILinearOperatorCPU3> , VectorCPU3, VectorCPU3, SmartPtr<ILinearOperatorInverseCPU3> )
bool ApplyLinearSolver (SmartPtr&lt;<a href="ILinearOperatorCPU3.html">ILinearOperatorCPU3</a>&gt; , <a href="VectorCPU3.html">VectorCPU3</a> *, <a href="VectorCPU3.html">VectorCPU3</a> *, SmartPtr&lt;<a href="ILinearOperatorInverseCPU3.html">ILinearOperatorInverseCPU3</a>&gt; )<br><br>group: <b>/ug4/Algebra</b>
function
AssembleLinearOperatorRhsAndSolution
void
void AssembleLinearOperatorRhsAndSolution (AssembledLinearOperatorCPU1, VectorCPU1, VectorCPU1)
void AssembleLinearOperatorRhsAndSolution (<a href="AssembledLinearOperatorCPU1.html">AssembledLinearOperatorCPU1</a> *, <a href="VectorCPU1.html">VectorCPU1</a> *, <a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
AssembleLinearOperatorRhsAndSolution
void
void AssembleLinearOperatorRhsAndSolution (AssembledLinearOperatorCPU2, VectorCPU2, VectorCPU2)
void AssembleLinearOperatorRhsAndSolution (<a href="AssembledLinearOperatorCPU2.html">AssembledLinearOperatorCPU2</a> *, <a href="VectorCPU2.html">VectorCPU2</a> *, <a href="VectorCPU2.html">VectorCPU2</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
AssembleLinearOperatorRhsAndSolution
void
void AssembleLinearOperatorRhsAndSolution (AssembledLinearOperatorCPU3, VectorCPU3, VectorCPU3)
void AssembleLinearOperatorRhsAndSolution (<a href="AssembledLinearOperatorCPU3.html">AssembledLinearOperatorCPU3</a> *, <a href="VectorCPU3.html">VectorCPU3</a> *, <a href="VectorCPU3.html">VectorCPU3</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
MatIdentity
void
void MatIdentity (MatrixOperatorCPU1opOut)
void MatIdentity (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *opOut)<br><br>tooltip: sets matrix to identity<br>group: <b>/ug4/Algebra/Operation</b>
function
MatIdentity
void
void MatIdentity (MatrixOperatorCPU2opOut)
void MatIdentity (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *opOut)<br><br>tooltip: sets matrix to identity<br>group: <b>/ug4/Algebra/Operation</b>
function
MatIdentity
void
void MatIdentity (MatrixOperatorCPU3opOut)
void MatIdentity (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *opOut)<br><br>tooltip: sets matrix to identity<br>group: <b>/ug4/Algebra/Operation</b>
function
MatAdd
void
void MatAdd (MatrixOperatorCPU1res, number alpha1, MatrixOperatorCPU1A1, number alpha2, MatrixOperatorCPU1A2)
void MatAdd (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *res, number alpha1, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *A1, number alpha2, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *A2)<br><br>tooltip: calculates res = alpha1*A1 + alpha2*A2<br>group: <b>/ug4/Algebra/Operation</b>
function
MatAdd
void
void MatAdd (MatrixOperatorCPU2res, number alpha1, MatrixOperatorCPU2A1, number alpha2, MatrixOperatorCPU2A2)
void MatAdd (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *res, number alpha1, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *A1, number alpha2, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *A2)<br><br>tooltip: calculates res = alpha1*A1 + alpha2*A2<br>group: <b>/ug4/Algebra/Operation</b>
function
MatAdd
void
void MatAdd (MatrixOperatorCPU3res, number alpha1, MatrixOperatorCPU3A1, number alpha2, MatrixOperatorCPU3A2)
void MatAdd (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *res, number alpha1, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *A1, number alpha2, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *A2)<br><br>tooltip: calculates res = alpha1*A1 + alpha2*A2<br>group: <b>/ug4/Algebra/Operation</b>
function
MatScale
void
void MatScale (MatrixOperatorCPU1mat, number alpha)
void MatScale (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *mat, number alpha)<br><br>tooltip: calculates mat = mat*alpha<br>group: <b>/ug4/Algebra/Operation</b>
function
MatScale
void
void MatScale (MatrixOperatorCPU2mat, number alpha)
void MatScale (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *mat, number alpha)<br><br>tooltip: calculates mat = mat*alpha<br>group: <b>/ug4/Algebra/Operation</b>
function
MatScale
void
void MatScale (MatrixOperatorCPU3mat, number alpha)
void MatScale (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *mat, number alpha)<br><br>tooltip: calculates mat = mat*alpha<br>group: <b>/ug4/Algebra/Operation</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, c_string Subsets)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, c_string Subsets)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, c_string Subsets)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, c_string Subsets)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, c_string Subsets)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, c_string Subsets)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, c_string Subsets)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component)
void Interpolate (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, c_string Subsets)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, c_string Subsets)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, c_string Subsets)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, c_string Subsets)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, c_string Subsets)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, c_string Subsets)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, c_string Subsets)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, c_string Subsets)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, c_string Subsets)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component)
void Interpolate (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, c_string Subsets)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, c_string Subsets)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, c_string Subsets)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, c_string Subsets)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, c_string Subsets)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, c_string Subsets)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, c_string Subsets)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, c_string Subsets)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, number Time)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, c_string Subsets)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component)
void Interpolate (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, number Time)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, c_string Subsets)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (number ConstantValue, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component)
void Interpolate (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, c_string Subsets, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, number Time)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, c_string Subsets)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Interpolate
void
void Interpolate (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component)
void Interpolate (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
OrderCuthillMcKee
void
void OrderCuthillMcKee (ApproximationSpace1d, bool )
void OrderCuthillMcKee (<a href="ApproximationSpace1d.html">ApproximationSpace1d</a> *, bool )<br><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
function
OrderCuthillMcKee
void
void OrderCuthillMcKee (ApproximationSpace2d, bool )
void OrderCuthillMcKee (<a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *, bool )<br><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
function
OrderCuthillMcKee
void
void OrderCuthillMcKee (ApproximationSpace3d, bool )
void OrderCuthillMcKee (<a href="ApproximationSpace3d.html">ApproximationSpace3d</a> *, bool )<br><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
function
OrderLex
void
void OrderLex (ApproximationSpace1d, c_string )
void OrderLex (<a href="ApproximationSpace1d.html">ApproximationSpace1d</a> *, c_string )<br><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
function
OrderLex
void
void OrderLex (ApproximationSpace2d, c_string )
void OrderLex (<a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *, c_string )<br><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
function
OrderLex
void
void OrderLex (ApproximationSpace3d, c_string )
void OrderLex (<a href="ApproximationSpace3d.html">ApproximationSpace3d</a> *, c_string )<br><br>group: <b>/ug4/Discretization/ApproximationSpace</b>
function
SaveDomainToVTK
void
void SaveDomainToVTK (c_string , Domain1d)
void SaveDomainToVTK (c_string , <a href="Domain1d.html">Domain1d</a> *)<br><br>group: <b></b>
function
SaveDomainToVTK
void
void SaveDomainToVTK (c_string , Domain2d)
void SaveDomainToVTK (c_string , <a href="Domain2d.html">Domain2d</a> *)<br><br>group: <b></b>
function
SaveDomainToVTK
void
void SaveDomainToVTK (c_string , Domain3d)
void SaveDomainToVTK (c_string , <a href="Domain3d.html">Domain3d</a> *)<br><br>group: <b></b>
function
WriteGridFunctionToVTK
void
void WriteGridFunctionToVTK (GridFunction1dCPU1GridFunction, c_string Filename)
void WriteGridFunctionToVTK (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *GridFunction, c_string Filename)<br><br>tooltip: Saves GridFunction to *.vtk file<br>group: <b>/ug4/Discretization/Output</b>
function
WriteGridFunctionToVTK
void
void WriteGridFunctionToVTK (GridFunction1dCPU2GridFunction, c_string Filename)
void WriteGridFunctionToVTK (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *GridFunction, c_string Filename)<br><br>tooltip: Saves GridFunction to *.vtk file<br>group: <b>/ug4/Discretization/Output</b>
function
WriteGridFunctionToVTK
void
void WriteGridFunctionToVTK (GridFunction1dCPU3GridFunction, c_string Filename)
void WriteGridFunctionToVTK (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *GridFunction, c_string Filename)<br><br>tooltip: Saves GridFunction to *.vtk file<br>group: <b>/ug4/Discretization/Output</b>
function
WriteGridFunctionToVTK
void
void WriteGridFunctionToVTK (GridFunction2dCPU1GridFunction, c_string Filename)
void WriteGridFunctionToVTK (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *GridFunction, c_string Filename)<br><br>tooltip: Saves GridFunction to *.vtk file<br>group: <b>/ug4/Discretization/Output</b>
function
WriteGridFunctionToVTK
void
void WriteGridFunctionToVTK (GridFunction2dCPU2GridFunction, c_string Filename)
void WriteGridFunctionToVTK (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *GridFunction, c_string Filename)<br><br>tooltip: Saves GridFunction to *.vtk file<br>group: <b>/ug4/Discretization/Output</b>
function
WriteGridFunctionToVTK
void
void WriteGridFunctionToVTK (GridFunction2dCPU3GridFunction, c_string Filename)
void WriteGridFunctionToVTK (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *GridFunction, c_string Filename)<br><br>tooltip: Saves GridFunction to *.vtk file<br>group: <b>/ug4/Discretization/Output</b>
function
WriteGridFunctionToVTK
void
void WriteGridFunctionToVTK (GridFunction3dCPU1GridFunction, c_string Filename)
void WriteGridFunctionToVTK (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *GridFunction, c_string Filename)<br><br>tooltip: Saves GridFunction to *.vtk file<br>group: <b>/ug4/Discretization/Output</b>
function
WriteGridFunctionToVTK
void
void WriteGridFunctionToVTK (GridFunction3dCPU2GridFunction, c_string Filename)
void WriteGridFunctionToVTK (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *GridFunction, c_string Filename)<br><br>tooltip: Saves GridFunction to *.vtk file<br>group: <b>/ug4/Discretization/Output</b>
function
WriteGridFunctionToVTK
void
void WriteGridFunctionToVTK (GridFunction3dCPU3GridFunction, c_string Filename)
void WriteGridFunctionToVTK (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *GridFunction, c_string Filename)<br><br>tooltip: Saves GridFunction to *.vtk file<br>group: <b>/ug4/Discretization/Output</b>
function
SaveMatrixForConnectionViewer
void
void SaveMatrixForConnectionViewer (GridFunction1dCPU1, MatrixOperatorCPU1, c_string )
void SaveMatrixForConnectionViewer (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveMatrixForConnectionViewer
void
void SaveMatrixForConnectionViewer (GridFunction1dCPU2, MatrixOperatorCPU2, c_string )
void SaveMatrixForConnectionViewer (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveMatrixForConnectionViewer
void
void SaveMatrixForConnectionViewer (GridFunction1dCPU3, MatrixOperatorCPU3, c_string )
void SaveMatrixForConnectionViewer (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveMatrixForConnectionViewer
void
void SaveMatrixForConnectionViewer (GridFunction2dCPU1, MatrixOperatorCPU1, c_string )
void SaveMatrixForConnectionViewer (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveMatrixForConnectionViewer
void
void SaveMatrixForConnectionViewer (GridFunction2dCPU2, MatrixOperatorCPU2, c_string )
void SaveMatrixForConnectionViewer (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveMatrixForConnectionViewer
void
void SaveMatrixForConnectionViewer (GridFunction2dCPU3, MatrixOperatorCPU3, c_string )
void SaveMatrixForConnectionViewer (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveMatrixForConnectionViewer
void
void SaveMatrixForConnectionViewer (GridFunction3dCPU1, MatrixOperatorCPU1, c_string )
void SaveMatrixForConnectionViewer (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveMatrixForConnectionViewer
void
void SaveMatrixForConnectionViewer (GridFunction3dCPU2, MatrixOperatorCPU2, c_string )
void SaveMatrixForConnectionViewer (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveMatrixForConnectionViewer
void
void SaveMatrixForConnectionViewer (GridFunction3dCPU3, MatrixOperatorCPU3, c_string )
void SaveMatrixForConnectionViewer (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction1dCPU1, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction1dCPU1, MatrixOperatorCPU1, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction1dCPU1, GridFunction1dCPU1, MatrixOperatorCPU1, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction1dCPU2, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction1dCPU2, MatrixOperatorCPU2, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction1dCPU2, GridFunction1dCPU2, MatrixOperatorCPU2, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction1dCPU3, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction1dCPU3, MatrixOperatorCPU3, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction1dCPU3, GridFunction1dCPU3, MatrixOperatorCPU3, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction2dCPU1, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction2dCPU1, MatrixOperatorCPU1, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction2dCPU1, GridFunction2dCPU1, MatrixOperatorCPU1, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction2dCPU2, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction2dCPU2, MatrixOperatorCPU2, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction2dCPU2, GridFunction2dCPU2, MatrixOperatorCPU2, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction2dCPU3, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction2dCPU3, MatrixOperatorCPU3, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction2dCPU3, GridFunction2dCPU3, MatrixOperatorCPU3, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction3dCPU1, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction3dCPU1, MatrixOperatorCPU1, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction3dCPU1, GridFunction3dCPU1, MatrixOperatorCPU1, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, <a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction3dCPU2, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction3dCPU2, MatrixOperatorCPU2, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction3dCPU2, GridFunction3dCPU2, MatrixOperatorCPU2, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, <a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction3dCPU3, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction3dCPU3, MatrixOperatorCPU3, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorForConnectionViewer
void
void SaveVectorForConnectionViewer (GridFunction3dCPU3, GridFunction3dCPU3, MatrixOperatorCPU3, c_string )
void SaveVectorForConnectionViewer (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, <a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorCSV
void
void SaveVectorCSV (GridFunction1dCPU1, c_string )
void SaveVectorCSV (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorCSV
void
void SaveVectorCSV (GridFunction1dCPU2, c_string )
void SaveVectorCSV (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorCSV
void
void SaveVectorCSV (GridFunction1dCPU3, c_string )
void SaveVectorCSV (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorCSV
void
void SaveVectorCSV (GridFunction2dCPU1, c_string )
void SaveVectorCSV (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorCSV
void
void SaveVectorCSV (GridFunction2dCPU2, c_string )
void SaveVectorCSV (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorCSV
void
void SaveVectorCSV (GridFunction2dCPU3, c_string )
void SaveVectorCSV (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorCSV
void
void SaveVectorCSV (GridFunction3dCPU1, c_string )
void SaveVectorCSV (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorCSV
void
void SaveVectorCSV (GridFunction3dCPU2, c_string )
void SaveVectorCSV (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
SaveVectorCSV
void
void SaveVectorCSV (GridFunction3dCPU3, c_string )
void SaveVectorCSV (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, c_string )<br><br>group: <b>/ug4/Discretization/Output</b>
function
MarkForAdaption_GradientIndicator
void
void MarkForAdaption_GradientIndicator (IRefiner, GridFunction1dCPU1, c_string , number , number , number , integer )
void MarkForAdaption_GradientIndicator (<a href="IRefiner.html">IRefiner</a> *, <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, c_string , number , number , number , integer )<br><br>group: <b>ug4/Refinement/</b>
function
MarkForAdaption_GradientIndicator
void
void MarkForAdaption_GradientIndicator (IRefiner, GridFunction1dCPU2, c_string , number , number , number , integer )
void MarkForAdaption_GradientIndicator (<a href="IRefiner.html">IRefiner</a> *, <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, c_string , number , number , number , integer )<br><br>group: <b>ug4/Refinement/</b>
function
MarkForAdaption_GradientIndicator
void
void MarkForAdaption_GradientIndicator (IRefiner, GridFunction1dCPU3, c_string , number , number , number , integer )
void MarkForAdaption_GradientIndicator (<a href="IRefiner.html">IRefiner</a> *, <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, c_string , number , number , number , integer )<br><br>group: <b>ug4/Refinement/</b>
function
MarkForAdaption_GradientIndicator
void
void MarkForAdaption_GradientIndicator (IRefiner, GridFunction2dCPU1, c_string , number , number , number , integer )
void MarkForAdaption_GradientIndicator (<a href="IRefiner.html">IRefiner</a> *, <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, c_string , number , number , number , integer )<br><br>group: <b>ug4/Refinement/</b>
function
MarkForAdaption_GradientIndicator
void
void MarkForAdaption_GradientIndicator (IRefiner, GridFunction2dCPU2, c_string , number , number , number , integer )
void MarkForAdaption_GradientIndicator (<a href="IRefiner.html">IRefiner</a> *, <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, c_string , number , number , number , integer )<br><br>group: <b>ug4/Refinement/</b>
function
MarkForAdaption_GradientIndicator
void
void MarkForAdaption_GradientIndicator (IRefiner, GridFunction2dCPU3, c_string , number , number , number , integer )
void MarkForAdaption_GradientIndicator (<a href="IRefiner.html">IRefiner</a> *, <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, c_string , number , number , number , integer )<br><br>group: <b>ug4/Refinement/</b>
function
MarkForAdaption_GradientIndicator
void
void MarkForAdaption_GradientIndicator (IRefiner, GridFunction3dCPU1, c_string , number , number , number , integer )
void MarkForAdaption_GradientIndicator (<a href="IRefiner.html">IRefiner</a> *, <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, c_string , number , number , number , integer )<br><br>group: <b>ug4/Refinement/</b>
function
MarkForAdaption_GradientIndicator
void
void MarkForAdaption_GradientIndicator (IRefiner, GridFunction3dCPU2, c_string , number , number , number , integer )
void MarkForAdaption_GradientIndicator (<a href="IRefiner.html">IRefiner</a> *, <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, c_string , number , number , number , integer )<br><br>group: <b>ug4/Refinement/</b>
function
MarkForAdaption_GradientIndicator
void
void MarkForAdaption_GradientIndicator (IRefiner, GridFunction3dCPU3, c_string , number , number , number , integer )
void MarkForAdaption_GradientIndicator (<a href="IRefiner.html">IRefiner</a> *, <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, c_string , number , number , number , integer )<br><br>group: <b>ug4/Refinement/</b>
function
Prolongate
void
void Prolongate (GridFunction1dCPU1, GridFunction1dCPU1)
void Prolongate (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
Prolongate
void
void Prolongate (GridFunction1dCPU2, GridFunction1dCPU2)
void Prolongate (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
Prolongate
void
void Prolongate (GridFunction1dCPU3, GridFunction1dCPU3)
void Prolongate (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
Prolongate
void
void Prolongate (GridFunction2dCPU1, GridFunction2dCPU1)
void Prolongate (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
Prolongate
void
void Prolongate (GridFunction2dCPU2, GridFunction2dCPU2)
void Prolongate (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
Prolongate
void
void Prolongate (GridFunction2dCPU3, GridFunction2dCPU3)
void Prolongate (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
Prolongate
void
void Prolongate (GridFunction3dCPU1, GridFunction3dCPU1)
void Prolongate (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
Prolongate
void
void Prolongate (GridFunction3dCPU2, GridFunction3dCPU2)
void Prolongate (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
Prolongate
void
void Prolongate (GridFunction3dCPU3, GridFunction3dCPU3)
void Prolongate (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *)<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeFaceDomain_FV1
void
void CreateSubControlVolumeFaceDomain_FV1 (Domain1d, const Domain1d, const SurfaceView, integer )
void CreateSubControlVolumeFaceDomain_FV1 (<a href="Domain1d.html">Domain1d</a> *, const <a href="Domain1d.html">Domain1d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeFaceDomain_FV1
void
void CreateSubControlVolumeFaceDomain_FV1 (Domain2d, const Domain2d, const SurfaceView, integer )
void CreateSubControlVolumeFaceDomain_FV1 (<a href="Domain2d.html">Domain2d</a> *, const <a href="Domain2d.html">Domain2d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeFaceDomain_FV1
void
void CreateSubControlVolumeFaceDomain_FV1 (Domain3d, const Domain3d, const SurfaceView, integer )
void CreateSubControlVolumeFaceDomain_FV1 (<a href="Domain3d.html">Domain3d</a> *, const <a href="Domain3d.html">Domain3d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeDomain_FV1
void
void CreateSubControlVolumeDomain_FV1 (Domain1d, const Domain1d, const SurfaceView, integer )
void CreateSubControlVolumeDomain_FV1 (<a href="Domain1d.html">Domain1d</a> *, const <a href="Domain1d.html">Domain1d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeDomain_FV1
void
void CreateSubControlVolumeDomain_FV1 (Domain2d, const Domain2d, const SurfaceView, integer )
void CreateSubControlVolumeDomain_FV1 (<a href="Domain2d.html">Domain2d</a> *, const <a href="Domain2d.html">Domain2d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeDomain_FV1
void
void CreateSubControlVolumeDomain_FV1 (Domain3d, const Domain3d, const SurfaceView, integer )
void CreateSubControlVolumeDomain_FV1 (<a href="Domain3d.html">Domain3d</a> *, const <a href="Domain3d.html">Domain3d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateControlVolumeDomain_FV1
void
void CreateControlVolumeDomain_FV1 (Domain1d, const Domain1d, const SurfaceView, integer )
void CreateControlVolumeDomain_FV1 (<a href="Domain1d.html">Domain1d</a> *, const <a href="Domain1d.html">Domain1d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateControlVolumeDomain_FV1
void
void CreateControlVolumeDomain_FV1 (Domain2d, const Domain2d, const SurfaceView, integer )
void CreateControlVolumeDomain_FV1 (<a href="Domain2d.html">Domain2d</a> *, const <a href="Domain2d.html">Domain2d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateControlVolumeDomain_FV1
void
void CreateControlVolumeDomain_FV1 (Domain3d, const Domain3d, const SurfaceView, integer )
void CreateControlVolumeDomain_FV1 (<a href="Domain3d.html">Domain3d</a> *, const <a href="Domain3d.html">Domain3d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeFaceDomain_HFV1
void
void CreateSubControlVolumeFaceDomain_HFV1 (Domain1d, const Domain1d, const SurfaceView, integer )
void CreateSubControlVolumeFaceDomain_HFV1 (<a href="Domain1d.html">Domain1d</a> *, const <a href="Domain1d.html">Domain1d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeFaceDomain_HFV1
void
void CreateSubControlVolumeFaceDomain_HFV1 (Domain2d, const Domain2d, const SurfaceView, integer )
void CreateSubControlVolumeFaceDomain_HFV1 (<a href="Domain2d.html">Domain2d</a> *, const <a href="Domain2d.html">Domain2d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeFaceDomain_HFV1
void
void CreateSubControlVolumeFaceDomain_HFV1 (Domain3d, const Domain3d, const SurfaceView, integer )
void CreateSubControlVolumeFaceDomain_HFV1 (<a href="Domain3d.html">Domain3d</a> *, const <a href="Domain3d.html">Domain3d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeDomain_HFV1
void
void CreateSubControlVolumeDomain_HFV1 (Domain1d, const Domain1d, const SurfaceView, integer )
void CreateSubControlVolumeDomain_HFV1 (<a href="Domain1d.html">Domain1d</a> *, const <a href="Domain1d.html">Domain1d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeDomain_HFV1
void
void CreateSubControlVolumeDomain_HFV1 (Domain2d, const Domain2d, const SurfaceView, integer )
void CreateSubControlVolumeDomain_HFV1 (<a href="Domain2d.html">Domain2d</a> *, const <a href="Domain2d.html">Domain2d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateSubControlVolumeDomain_HFV1
void
void CreateSubControlVolumeDomain_HFV1 (Domain3d, const Domain3d, const SurfaceView, integer )
void CreateSubControlVolumeDomain_HFV1 (<a href="Domain3d.html">Domain3d</a> *, const <a href="Domain3d.html">Domain3d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateControlVolumeDomain_HFV1
void
void CreateControlVolumeDomain_HFV1 (Domain1d, const Domain1d, const SurfaceView, integer )
void CreateControlVolumeDomain_HFV1 (<a href="Domain1d.html">Domain1d</a> *, const <a href="Domain1d.html">Domain1d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateControlVolumeDomain_HFV1
void
void CreateControlVolumeDomain_HFV1 (Domain2d, const Domain2d, const SurfaceView, integer )
void CreateControlVolumeDomain_HFV1 (<a href="Domain2d.html">Domain2d</a> *, const <a href="Domain2d.html">Domain2d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
CreateControlVolumeDomain_HFV1
void
void CreateControlVolumeDomain_HFV1 (Domain3d, const Domain3d, const SurfaceView, integer )
void CreateControlVolumeDomain_HFV1 (<a href="Domain3d.html">Domain3d</a> *, const <a href="Domain3d.html">Domain3d</a> *, const <a href="SurfaceView.html">SurfaceView</a> *, integer )<br><br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Subsets, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Subsets)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Subsets, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU1> GridFunction, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Subsets)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU1> GridFunction)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Subsets, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string Subsets)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, c_string Subsets, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component, c_string Subsets)
number Integral (SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction1dCPU1> GridFunction, c_string Component)
number Integral (SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Subsets, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Subsets)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Subsets, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU2> GridFunction, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Subsets)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU2> GridFunction)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Subsets, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string Subsets)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, c_string Subsets, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component, c_string Subsets)
number Integral (SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction1dCPU2> GridFunction, c_string Component)
number Integral (SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Subsets, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Subsets)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction)
number Integral (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Subsets, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU3> GridFunction, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Subsets)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction1dCPU3> GridFunction)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Subsets, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string Subsets)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, c_string Subsets, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component, c_string Subsets)
number Integral (SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction1dCPU3> GridFunction, c_string Component)
number Integral (SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Subsets, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Subsets)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Subsets, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU1> GridFunction, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Subsets)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU1> GridFunction)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Subsets, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string Subsets)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, c_string Subsets, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component, c_string Subsets)
number Integral (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction2dCPU1> GridFunction, c_string Component)
number Integral (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Subsets, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Subsets)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Subsets, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU2> GridFunction, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Subsets)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU2> GridFunction)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Subsets, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string Subsets)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, c_string Subsets, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component, c_string Subsets)
number Integral (SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction2dCPU2> GridFunction, c_string Component)
number Integral (SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Subsets, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Subsets)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction)
number Integral (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Subsets, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU3> GridFunction, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Subsets)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction2dCPU3> GridFunction)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Subsets, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string Subsets)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, c_string Subsets, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component, c_string Subsets)
number Integral (SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction2dCPU3> GridFunction, c_string Component)
number Integral (SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Subsets, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Subsets)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Subsets, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU1> GridFunction, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Subsets)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU1> GridFunction)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Subsets, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string Subsets)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, c_string Subsets, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component, c_string Subsets)
number Integral (SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction3dCPU1> GridFunction, c_string Component)
number Integral (SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Subsets, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Subsets)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Subsets, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU2> GridFunction, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Subsets)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU2> GridFunction)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Subsets, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string Subsets)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, c_string Subsets, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component, c_string Subsets)
number Integral (SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction3dCPU2> GridFunction, c_string Component)
number Integral (SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Subsets, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, number Time)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Subsets)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<UserNumber3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction)
number Integral (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Subsets, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU3> GridFunction, number Time)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Subsets)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (number ConstantValue, SmartPtr<GridFunction3dCPU3> GridFunction)
number Integral (number ConstantValue, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Subsets, number Time, integer QuadOrder)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Subsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Subsets, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Subsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, number Time)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string Subsets)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction)
number Integral (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, c_string Subsets, integer QuadOrder)
number Integral (SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component, c_string Subsets)
number Integral (SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component, c_string Subsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
Integral
number
number Integral (SmartPtr<GridFunction3dCPU3> GridFunction, c_string Component)
number Integral (SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string Component)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (SmartPtr<UserNumber1d> , SmartPtr<GridFunction1dCPU1> , c_string , number , integer , c_string )
number L2Error (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (c_string , SmartPtr<GridFunction1dCPU1> , c_string , number , integer , c_string )
number L2Error (c_string , SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (SmartPtr<UserNumber1d> , SmartPtr<GridFunction1dCPU2> , c_string , number , integer , c_string )
number L2Error (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (c_string , SmartPtr<GridFunction1dCPU2> , c_string , number , integer , c_string )
number L2Error (c_string , SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (SmartPtr<UserNumber1d> , SmartPtr<GridFunction1dCPU3> , c_string , number , integer , c_string )
number L2Error (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (c_string , SmartPtr<GridFunction1dCPU3> , c_string , number , integer , c_string )
number L2Error (c_string , SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (SmartPtr<UserNumber2d> , SmartPtr<GridFunction2dCPU1> , c_string , number , integer , c_string )
number L2Error (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (c_string , SmartPtr<GridFunction2dCPU1> , c_string , number , integer , c_string )
number L2Error (c_string , SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (SmartPtr<UserNumber2d> , SmartPtr<GridFunction2dCPU2> , c_string , number , integer , c_string )
number L2Error (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (c_string , SmartPtr<GridFunction2dCPU2> , c_string , number , integer , c_string )
number L2Error (c_string , SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (SmartPtr<UserNumber2d> , SmartPtr<GridFunction2dCPU3> , c_string , number , integer , c_string )
number L2Error (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (c_string , SmartPtr<GridFunction2dCPU3> , c_string , number , integer , c_string )
number L2Error (c_string , SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (SmartPtr<UserNumber3d> , SmartPtr<GridFunction3dCPU1> , c_string , number , integer , c_string )
number L2Error (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (c_string , SmartPtr<GridFunction3dCPU1> , c_string , number , integer , c_string )
number L2Error (c_string , SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (SmartPtr<UserNumber3d> , SmartPtr<GridFunction3dCPU2> , c_string , number , integer , c_string )
number L2Error (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (c_string , SmartPtr<GridFunction3dCPU2> , c_string , number , integer , c_string )
number L2Error (c_string , SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (SmartPtr<UserNumber3d> , SmartPtr<GridFunction3dCPU3> , c_string , number , integer , c_string )
number L2Error (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Error
number
number L2Error (c_string , SmartPtr<GridFunction3dCPU3> , c_string , number , integer , c_string )
number L2Error (c_string , SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (SmartPtr<UserNumber1d> , SmartPtr<UserVector1d> , SmartPtr<GridFunction1dCPU1> , c_string , number , integer , c_string )
number H1Error (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; , SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (c_string , c_string , SmartPtr<GridFunction1dCPU1> , c_string , number , integer , c_string )
number H1Error (c_string , c_string , SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (SmartPtr<UserNumber1d> , SmartPtr<UserVector1d> , SmartPtr<GridFunction1dCPU2> , c_string , number , integer , c_string )
number H1Error (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; , SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (c_string , c_string , SmartPtr<GridFunction1dCPU2> , c_string , number , integer , c_string )
number H1Error (c_string , c_string , SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (SmartPtr<UserNumber1d> , SmartPtr<UserVector1d> , SmartPtr<GridFunction1dCPU3> , c_string , number , integer , c_string )
number H1Error (SmartPtr&lt;<a href="UserNumber1d.html">UserNumber1d</a>&gt; , SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; , SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (c_string , c_string , SmartPtr<GridFunction1dCPU3> , c_string , number , integer , c_string )
number H1Error (c_string , c_string , SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (SmartPtr<UserNumber2d> , SmartPtr<UserVector2d> , SmartPtr<GridFunction2dCPU1> , c_string , number , integer , c_string )
number H1Error (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (c_string , c_string , SmartPtr<GridFunction2dCPU1> , c_string , number , integer , c_string )
number H1Error (c_string , c_string , SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (SmartPtr<UserNumber2d> , SmartPtr<UserVector2d> , SmartPtr<GridFunction2dCPU2> , c_string , number , integer , c_string )
number H1Error (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (c_string , c_string , SmartPtr<GridFunction2dCPU2> , c_string , number , integer , c_string )
number H1Error (c_string , c_string , SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (SmartPtr<UserNumber2d> , SmartPtr<UserVector2d> , SmartPtr<GridFunction2dCPU3> , c_string , number , integer , c_string )
number H1Error (SmartPtr&lt;<a href="UserNumber2d.html">UserNumber2d</a>&gt; , SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; , SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (c_string , c_string , SmartPtr<GridFunction2dCPU3> , c_string , number , integer , c_string )
number H1Error (c_string , c_string , SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (SmartPtr<UserNumber3d> , SmartPtr<UserVector3d> , SmartPtr<GridFunction3dCPU1> , c_string , number , integer , c_string )
number H1Error (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; , SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (c_string , c_string , SmartPtr<GridFunction3dCPU1> , c_string , number , integer , c_string )
number H1Error (c_string , c_string , SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (SmartPtr<UserNumber3d> , SmartPtr<UserVector3d> , SmartPtr<GridFunction3dCPU2> , c_string , number , integer , c_string )
number H1Error (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; , SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (c_string , c_string , SmartPtr<GridFunction3dCPU2> , c_string , number , integer , c_string )
number H1Error (c_string , c_string , SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (SmartPtr<UserNumber3d> , SmartPtr<UserVector3d> , SmartPtr<GridFunction3dCPU3> , c_string , number , integer , c_string )
number H1Error (SmartPtr&lt;<a href="UserNumber3d.html">UserNumber3d</a>&gt; , SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; , SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
H1Error
number
number H1Error (c_string , c_string , SmartPtr<GridFunction3dCPU3> , c_string , number , integer , c_string )
number H1Error (c_string , c_string , SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; , c_string , number , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Norm
number
number L2Norm (SmartPtr<GridFunction1dCPU1> , c_string , integer , c_string )
number L2Norm (SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; , c_string , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Norm
number
number L2Norm (SmartPtr<GridFunction1dCPU2> , c_string , integer , c_string )
number L2Norm (SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; , c_string , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Norm
number
number L2Norm (SmartPtr<GridFunction1dCPU3> , c_string , integer , c_string )
number L2Norm (SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; , c_string , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Norm
number
number L2Norm (SmartPtr<GridFunction2dCPU1> , c_string , integer , c_string )
number L2Norm (SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; , c_string , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Norm
number
number L2Norm (SmartPtr<GridFunction2dCPU2> , c_string , integer , c_string )
number L2Norm (SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; , c_string , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Norm
number
number L2Norm (SmartPtr<GridFunction2dCPU3> , c_string , integer , c_string )
number L2Norm (SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; , c_string , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Norm
number
number L2Norm (SmartPtr<GridFunction3dCPU1> , c_string , integer , c_string )
number L2Norm (SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; , c_string , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Norm
number
number L2Norm (SmartPtr<GridFunction3dCPU2> , c_string , integer , c_string )
number L2Norm (SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; , c_string , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
L2Norm
number
number L2Norm (SmartPtr<GridFunction3dCPU3> , c_string , integer , c_string )
number L2Norm (SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; , c_string , integer , c_string )<br><br>group: <b>/ug4/Discretization</b>
function
IntegrateNormalGradientOnManifold
number
number IntegrateNormalGradientOnManifold (GridFunction1dCPU1GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)
number IntegrateNormalGradientOnManifold (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateNormalGradientOnManifold
number
number IntegrateNormalGradientOnManifold (GridFunction1dCPU2GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)
number IntegrateNormalGradientOnManifold (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateNormalGradientOnManifold
number
number IntegrateNormalGradientOnManifold (GridFunction1dCPU3GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)
number IntegrateNormalGradientOnManifold (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateNormalGradientOnManifold
number
number IntegrateNormalGradientOnManifold (GridFunction2dCPU1GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)
number IntegrateNormalGradientOnManifold (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateNormalGradientOnManifold
number
number IntegrateNormalGradientOnManifold (GridFunction2dCPU2GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)
number IntegrateNormalGradientOnManifold (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateNormalGradientOnManifold
number
number IntegrateNormalGradientOnManifold (GridFunction2dCPU3GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)
number IntegrateNormalGradientOnManifold (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateNormalGradientOnManifold
number
number IntegrateNormalGradientOnManifold (GridFunction3dCPU1GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)
number IntegrateNormalGradientOnManifold (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateNormalGradientOnManifold
number
number IntegrateNormalGradientOnManifold (GridFunction3dCPU2GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)
number IntegrateNormalGradientOnManifold (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateNormalGradientOnManifold
number
number IntegrateNormalGradientOnManifold (GridFunction3dCPU3GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)
number IntegrateNormalGradientOnManifold (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *GridFunction, c_string Component, c_string BoundarySubset, c_string InnerSubset)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU1> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr<GridFunction1dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU1> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU2> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr<GridFunction1dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU2> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector1d> Data, SmartPtr<GridFunction1dCPU3> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector1d.html">UserVector1d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr<GridFunction1dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction1dCPU3> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU1> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr<GridFunction2dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU1> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU2> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr<GridFunction2dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU2> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector2d> Data, SmartPtr<GridFunction2dCPU3> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector2d.html">UserVector2d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr<GridFunction2dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction2dCPU3> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU1> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr<GridFunction3dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU1> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU2> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr<GridFunction3dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU2> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (SmartPtr<UserVector3d> Data, SmartPtr<GridFunction3dCPU3> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (SmartPtr&lt;<a href="UserVector3d.html">UserVector3d</a>&gt; Data, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr<GridFunction3dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)
number IntegralNormalComponentOnManifold (c_string LuaData, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time, integer QuadOrder)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string BoundarySubsets, number Time)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, number Time)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string BoundarySubsets, c_string InnerSubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string BoundarySubsets, c_string InnerSubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegralNormalComponentOnManifold
number
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr<GridFunction3dCPU3> GridFunction, c_string BoundarySubsets)
number IntegralNormalComponentOnManifold (c_string LuaFunction, SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; GridFunction, c_string BoundarySubsets)<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateDiscFlux
number
number IntegrateDiscFlux (SmartPtr<IAssembleCPU1> , SmartPtr<GridFunction1dCPU1> , c_string , c_string )
number IntegrateDiscFlux (SmartPtr&lt;<a href="IAssembleCPU1.html">IAssembleCPU1</a>&gt; , SmartPtr&lt;<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a>&gt; , c_string , c_string )<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateDiscFlux
number
number IntegrateDiscFlux (SmartPtr<IAssembleCPU2> , SmartPtr<GridFunction1dCPU2> , c_string , c_string )
number IntegrateDiscFlux (SmartPtr&lt;<a href="IAssembleCPU2.html">IAssembleCPU2</a>&gt; , SmartPtr&lt;<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a>&gt; , c_string , c_string )<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateDiscFlux
number
number IntegrateDiscFlux (SmartPtr<IAssembleCPU3> , SmartPtr<GridFunction1dCPU3> , c_string , c_string )
number IntegrateDiscFlux (SmartPtr&lt;<a href="IAssembleCPU3.html">IAssembleCPU3</a>&gt; , SmartPtr&lt;<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a>&gt; , c_string , c_string )<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateDiscFlux
number
number IntegrateDiscFlux (SmartPtr<IAssembleCPU1> , SmartPtr<GridFunction2dCPU1> , c_string , c_string )
number IntegrateDiscFlux (SmartPtr&lt;<a href="IAssembleCPU1.html">IAssembleCPU1</a>&gt; , SmartPtr&lt;<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a>&gt; , c_string , c_string )<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateDiscFlux
number
number IntegrateDiscFlux (SmartPtr<IAssembleCPU2> , SmartPtr<GridFunction2dCPU2> , c_string , c_string )
number IntegrateDiscFlux (SmartPtr&lt;<a href="IAssembleCPU2.html">IAssembleCPU2</a>&gt; , SmartPtr&lt;<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a>&gt; , c_string , c_string )<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateDiscFlux
number
number IntegrateDiscFlux (SmartPtr<IAssembleCPU3> , SmartPtr<GridFunction2dCPU3> , c_string , c_string )
number IntegrateDiscFlux (SmartPtr&lt;<a href="IAssembleCPU3.html">IAssembleCPU3</a>&gt; , SmartPtr&lt;<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a>&gt; , c_string , c_string )<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateDiscFlux
number
number IntegrateDiscFlux (SmartPtr<IAssembleCPU1> , SmartPtr<GridFunction3dCPU1> , c_string , c_string )
number IntegrateDiscFlux (SmartPtr&lt;<a href="IAssembleCPU1.html">IAssembleCPU1</a>&gt; , SmartPtr&lt;<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a>&gt; , c_string , c_string )<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateDiscFlux
number
number IntegrateDiscFlux (SmartPtr<IAssembleCPU2> , SmartPtr<GridFunction3dCPU2> , c_string , c_string )
number IntegrateDiscFlux (SmartPtr&lt;<a href="IAssembleCPU2.html">IAssembleCPU2</a>&gt; , SmartPtr&lt;<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a>&gt; , c_string , c_string )<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
IntegrateDiscFlux
number
number IntegrateDiscFlux (SmartPtr<IAssembleCPU3> , SmartPtr<GridFunction3dCPU3> , c_string , c_string )
number IntegrateDiscFlux (SmartPtr&lt;<a href="IAssembleCPU3.html">IAssembleCPU3</a>&gt; , SmartPtr&lt;<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a>&gt; , c_string , c_string )<br><br>returns Integral<br>group: <b>/ug4/Discretization</b>
function
InitUG
void
void InitUG (integer Dimension, const AlgebraTypeAlgebraType, bool verbose)
void InitUG (integer Dimension, const <a href="AlgebraType.html">AlgebraType</a> *AlgebraType, bool verbose)<br><br>group: <b>/ug4/Init</b>
function
InitUG
void
void InitUG (integer Dimension, const AlgebraTypeAlgebraType)
void InitUG (integer Dimension, const <a href="AlgebraType.html">AlgebraType</a> *AlgebraType)<br><br>group: <b>/ug4/Init</b>
function
GetFullSubdomainBlockingCoarsening
IParallelCoarsening*
IParallelCoarseningGetFullSubdomainBlockingCoarsening ()
<a href="IParallelCoarsening.html">IParallelCoarsening</a> *GetFullSubdomainBlockingCoarsening ()<br><br>group: <b>ug4//Algebra/Preconditioner</b>
function
GetColorCoarsening
IParallelCoarsening*
IParallelCoarseningGetColorCoarsening ()
<a href="IParallelCoarsening.html">IParallelCoarsening</a> *GetColorCoarsening ()<br><br>group: <b>ug4//Algebra/Preconditioner</b>
function
GetRS3Coarsening
IParallelCoarsening*
IParallelCoarseningGetRS3Coarsening ()
<a href="IParallelCoarsening.html">IParallelCoarsening</a> *GetRS3Coarsening ()<br><br>group: <b>ug4//Algebra/Preconditioner</b>
function
GetCLJPCoarsening
IParallelCoarsening*
IParallelCoarseningGetCLJPCoarsening ()
<a href="IParallelCoarsening.html">IParallelCoarsening</a> *GetCLJPCoarsening ()<br><br>group: <b>ug4//Algebra/Preconditioner</b>
function
GetFalgoutCoarsening
IParallelCoarsening*
IParallelCoarseningGetFalgoutCoarsening ()
<a href="IParallelCoarsening.html">IParallelCoarsening</a> *GetFalgoutCoarsening ()<br><br>group: <b>ug4//Algebra/Preconditioner</b>
function
GetMinimumSubdomainBlockingCoarsening
IParallelCoarsening*
IParallelCoarseningGetMinimumSubdomainBlockingCoarsening ()
<a href="IParallelCoarsening.html">IParallelCoarsening</a> *GetMinimumSubdomainBlockingCoarsening ()<br><br>group: <b>ug4//Algebra/Preconditioner</b>
function
GetCoarseGridClassificationCoarsening
IParallelCoarsening*
IParallelCoarseningGetCoarseGridClassificationCoarsening ()
<a href="IParallelCoarsening.html">IParallelCoarsening</a> *GetCoarseGridClassificationCoarsening ()<br><br>group: <b>ug4//Algebra/Preconditioner</b>
function
GetSimpleParallelCoarsening
IParallelCoarsening*
IParallelCoarseningGetSimpleParallelCoarsening ()
<a href="IParallelCoarsening.html">IParallelCoarsening</a> *GetSimpleParallelCoarsening ()<br><br>group: <b>ug4//Algebra/Preconditioner</b>
function
IntegrateFluxOnBoundary2
number
number IntegrateFluxOnBoundary2 (GridFunction1dCPU1GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)
number IntegrateFluxOnBoundary2 (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary2
number
number IntegrateFluxOnBoundary2 (GridFunction1dCPU2GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)
number IntegrateFluxOnBoundary2 (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary2
number
number IntegrateFluxOnBoundary2 (GridFunction1dCPU3GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)
number IntegrateFluxOnBoundary2 (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary2
number
number IntegrateFluxOnBoundary2 (GridFunction2dCPU1GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)
number IntegrateFluxOnBoundary2 (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary2
number
number IntegrateFluxOnBoundary2 (GridFunction2dCPU2GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)
number IntegrateFluxOnBoundary2 (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary2
number
number IntegrateFluxOnBoundary2 (GridFunction2dCPU3GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)
number IntegrateFluxOnBoundary2 (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary2
number
number IntegrateFluxOnBoundary2 (GridFunction3dCPU1GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)
number IntegrateFluxOnBoundary2 (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary2
number
number IntegrateFluxOnBoundary2 (GridFunction3dCPU2GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)
number IntegrateFluxOnBoundary2 (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary2
number
number IntegrateFluxOnBoundary2 (GridFunction3dCPU3GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)
number IntegrateFluxOnBoundary2 (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *GridFunction, c_string Component, c_string Component, number Permeability, number Viscosity, number Density, number Gravity, c_string Norm, c_string BndSubset)<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary3
number
number IntegrateFluxOnBoundary3 (GridFunction1dCPU1GridFunction, GridFunction1dCPU1GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )
number IntegrateFluxOnBoundary3 (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *GridFunction, <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary3
number
number IntegrateFluxOnBoundary3 (GridFunction1dCPU2GridFunction, GridFunction1dCPU2GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )
number IntegrateFluxOnBoundary3 (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *GridFunction, <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary3
number
number IntegrateFluxOnBoundary3 (GridFunction1dCPU3GridFunction, GridFunction1dCPU3GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )
number IntegrateFluxOnBoundary3 (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *GridFunction, <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary3
number
number IntegrateFluxOnBoundary3 (GridFunction2dCPU1GridFunction, GridFunction2dCPU1GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )
number IntegrateFluxOnBoundary3 (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *GridFunction, <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary3
number
number IntegrateFluxOnBoundary3 (GridFunction2dCPU2GridFunction, GridFunction2dCPU2GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )
number IntegrateFluxOnBoundary3 (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *GridFunction, <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary3
number
number IntegrateFluxOnBoundary3 (GridFunction2dCPU3GridFunction, GridFunction2dCPU3GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )
number IntegrateFluxOnBoundary3 (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *GridFunction, <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary3
number
number IntegrateFluxOnBoundary3 (GridFunction3dCPU1GridFunction, GridFunction3dCPU1GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )
number IntegrateFluxOnBoundary3 (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *GridFunction, <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary3
number
number IntegrateFluxOnBoundary3 (GridFunction3dCPU2GridFunction, GridFunction3dCPU2GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )
number IntegrateFluxOnBoundary3 (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *GridFunction, <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundary3
number
number IntegrateFluxOnBoundary3 (GridFunction3dCPU3GridFunction, GridFunction3dCPU3GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )
number IntegrateFluxOnBoundary3 (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *GridFunction, <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *GridFunctionOld, number Component, c_string Component, c_string Component, c_string Component, c_string Component, c_string BndSubset, c_string InnerSubset, c_string )<br><br>returns Integral<br>group: <b>ug4//Biogas</b>
function
IntegrateAceticAcidFluxOnBoundary
number
number IntegrateAceticAcidFluxOnBoundary (GridFunction1dCPU1, c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateAceticAcidFluxOnBoundary (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateAceticAcidFluxOnBoundary
number
number IntegrateAceticAcidFluxOnBoundary (GridFunction1dCPU2, c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateAceticAcidFluxOnBoundary (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateAceticAcidFluxOnBoundary
number
number IntegrateAceticAcidFluxOnBoundary (GridFunction1dCPU3, c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateAceticAcidFluxOnBoundary (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateAceticAcidFluxOnBoundary
number
number IntegrateAceticAcidFluxOnBoundary (GridFunction2dCPU1, c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateAceticAcidFluxOnBoundary (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateAceticAcidFluxOnBoundary
number
number IntegrateAceticAcidFluxOnBoundary (GridFunction2dCPU2, c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateAceticAcidFluxOnBoundary (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateAceticAcidFluxOnBoundary
number
number IntegrateAceticAcidFluxOnBoundary (GridFunction2dCPU3, c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateAceticAcidFluxOnBoundary (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateAceticAcidFluxOnBoundary
number
number IntegrateAceticAcidFluxOnBoundary (GridFunction3dCPU1, c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateAceticAcidFluxOnBoundary (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateAceticAcidFluxOnBoundary
number
number IntegrateAceticAcidFluxOnBoundary (GridFunction3dCPU2, c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateAceticAcidFluxOnBoundary (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateAceticAcidFluxOnBoundary
number
number IntegrateAceticAcidFluxOnBoundary (GridFunction3dCPU3, c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateAceticAcidFluxOnBoundary (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundaryBiogas
number
number IntegrateFluxOnBoundaryBiogas (GridFunction1dCPU1, GridFunction1dCPU1, number , c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateFluxOnBoundaryBiogas (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, number , c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundaryBiogas
number
number IntegrateFluxOnBoundaryBiogas (GridFunction1dCPU2, GridFunction1dCPU2, number , c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateFluxOnBoundaryBiogas (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, number , c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundaryBiogas
number
number IntegrateFluxOnBoundaryBiogas (GridFunction1dCPU3, GridFunction1dCPU3, number , c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateFluxOnBoundaryBiogas (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, number , c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundaryBiogas
number
number IntegrateFluxOnBoundaryBiogas (GridFunction2dCPU1, GridFunction2dCPU1, number , c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateFluxOnBoundaryBiogas (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, number , c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundaryBiogas
number
number IntegrateFluxOnBoundaryBiogas (GridFunction2dCPU2, GridFunction2dCPU2, number , c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateFluxOnBoundaryBiogas (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, number , c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundaryBiogas
number
number IntegrateFluxOnBoundaryBiogas (GridFunction2dCPU3, GridFunction2dCPU3, number , c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateFluxOnBoundaryBiogas (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, number , c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundaryBiogas
number
number IntegrateFluxOnBoundaryBiogas (GridFunction3dCPU1, GridFunction3dCPU1, number , c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateFluxOnBoundaryBiogas (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, number , c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundaryBiogas
number
number IntegrateFluxOnBoundaryBiogas (GridFunction3dCPU2, GridFunction3dCPU2, number , c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateFluxOnBoundaryBiogas (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, number , c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
IntegrateFluxOnBoundaryBiogas
number
number IntegrateFluxOnBoundaryBiogas (GridFunction3dCPU3, GridFunction3dCPU3, number , c_string , c_string , number , number , number , number , c_string , c_string )
number IntegrateFluxOnBoundaryBiogas (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, number , c_string , c_string , number , number , number , number , c_string , c_string )<br><br>group: <b>ug4//Biogas</b>
function
takeMeasurement
void
void takeMeasurement (const VectorCPU1solution, const ApproximationSpace1dapproxSpace, number time, c_string subsetNames, c_string functionNames, c_string outFileName)
void takeMeasurement (const <a href="VectorCPU1.html">VectorCPU1</a> *solution, const <a href="ApproximationSpace1d.html">ApproximationSpace1d</a> *approxSpace, number time, c_string subsetNames, c_string functionNames, c_string outFileName)<br><br>tooltip: outputs average values of unknowns on subsets<br>group: <b>ug4//CalciumDynamics</b>
function
takeMeasurement
void
void takeMeasurement (const VectorCPU1solution, const ApproximationSpace2dapproxSpace, number time, c_string subsetNames, c_string functionNames, c_string outFileName)
void takeMeasurement (const <a href="VectorCPU1.html">VectorCPU1</a> *solution, const <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *approxSpace, number time, c_string subsetNames, c_string functionNames, c_string outFileName)<br><br>tooltip: outputs average values of unknowns on subsets<br>group: <b>ug4//CalciumDynamics</b>
function
takeMeasurement
void
void takeMeasurement (const VectorCPU1solution, const ApproximationSpace3dapproxSpace, number time, c_string subsetNames, c_string functionNames, c_string outFileName)
void takeMeasurement (const <a href="VectorCPU1.html">VectorCPU1</a> *solution, const <a href="ApproximationSpace3d.html">ApproximationSpace3d</a> *approxSpace, number time, c_string subsetNames, c_string functionNames, c_string outFileName)<br><br>tooltip: outputs average values of unknowns on subsets<br>group: <b>ug4//CalciumDynamics</b>
function
computeVolume
void
void computeVolume (const ApproximationSpace1dapproxSpace, c_string subsetNames)
void computeVolume (const <a href="ApproximationSpace1d.html">ApproximationSpace1d</a> *approxSpace, c_string subsetNames)<br><br>tooltip: outputs subset volumes<br>group: <b>ug4//CalciumDynamics</b>
function
computeVolume
void
void computeVolume (const ApproximationSpace2dapproxSpace, c_string subsetNames)
void computeVolume (const <a href="ApproximationSpace2d.html">ApproximationSpace2d</a> *approxSpace, c_string subsetNames)<br><br>tooltip: outputs subset volumes<br>group: <b>ug4//CalciumDynamics</b>
function
computeVolume
void
void computeVolume (const ApproximationSpace3dapproxSpace, c_string subsetNames)
void computeVolume (const <a href="ApproximationSpace3d.html">ApproximationSpace3d</a> *approxSpace, c_string subsetNames)<br><br>tooltip: outputs subset volumes<br>group: <b>ug4//CalciumDynamics</b>
function
ElementQualityStatistics
void
void ElementQualityStatistics (Grid)
void ElementQualityStatistics (<a href="Grid.html">Grid</a> *)<br><br>group: <b>ug4/ElementQualityStatistics/</b>
function
ElementQualityStatistics
void
void ElementQualityStatistics (MultiGrid)
void ElementQualityStatistics (<a href="MultiGrid.html">MultiGrid</a> *)<br><br>group: <b>ug4/ElementQualityStatistics/</b>
function
get_subset_surface_area
number
number get_subset_surface_area (MultiGrid, integer , MGSubsetHandler)
number get_subset_surface_area (<a href="MultiGrid.html">MultiGrid</a> *, integer , <a href="MGSubsetHandler.html">MGSubsetHandler</a> *)<br><br>group: <b>ug4/ElementQualityStatistics/</b>
function
get_subset_volume
number
number get_subset_volume (MultiGrid, integer , MGSubsetHandler)
number get_subset_volume (<a href="MultiGrid.html">MultiGrid</a> *, integer , <a href="MGSubsetHandler.html">MGSubsetHandler</a> *)<br><br>group: <b>ug4/ElementQualityStatistics/</b>
function
SmoothDomain
void
void SmoothDomain (Domain1d, number , integer , number )
void SmoothDomain (<a href="Domain1d.html">Domain1d</a> *, number , integer , number )<br><br>group: <b>ug4//GridHierarchySmoothing</b>
function
SmoothDomain
void
void SmoothDomain (Domain2d, number , integer , number )
void SmoothDomain (<a href="Domain2d.html">Domain2d</a> *, number , integer , number )<br><br>group: <b>ug4//GridHierarchySmoothing</b>
function
SmoothDomain
void
void SmoothDomain (Domain3d, number , integer , number )
void SmoothDomain (<a href="Domain3d.html">Domain3d</a> *, number , integer , number )<br><br>group: <b>ug4//GridHierarchySmoothing</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU1, DirichletBoundary1dCPU1, const SmartPtr<ApproximationSpace1d> )
void AssembleDirichletRows (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, <a href="DirichletBoundary1dCPU1.html">DirichletBoundary1dCPU1</a> *, const SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU1, DirichletBoundary1dCPU1, const SmartPtr<ApproximationSpace1d> , number )
void AssembleDirichletRows (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, <a href="DirichletBoundary1dCPU1.html">DirichletBoundary1dCPU1</a> *, const SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; , number )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU1, DirichletBoundary2dCPU1, const SmartPtr<ApproximationSpace2d> )
void AssembleDirichletRows (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, <a href="DirichletBoundary2dCPU1.html">DirichletBoundary2dCPU1</a> *, const SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU1, DirichletBoundary2dCPU1, const SmartPtr<ApproximationSpace2d> , number )
void AssembleDirichletRows (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, <a href="DirichletBoundary2dCPU1.html">DirichletBoundary2dCPU1</a> *, const SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; , number )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU1, DirichletBoundary3dCPU1, const SmartPtr<ApproximationSpace3d> )
void AssembleDirichletRows (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, <a href="DirichletBoundary3dCPU1.html">DirichletBoundary3dCPU1</a> *, const SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU1, DirichletBoundary3dCPU1, const SmartPtr<ApproximationSpace3d> , number )
void AssembleDirichletRows (<a href="MatrixOperatorCPU1.html">MatrixOperatorCPU1</a> *, <a href="DirichletBoundary3dCPU1.html">DirichletBoundary3dCPU1</a> *, const SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; , number )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU2, DirichletBoundary1dCPU2, const SmartPtr<ApproximationSpace1d> )
void AssembleDirichletRows (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, <a href="DirichletBoundary1dCPU2.html">DirichletBoundary1dCPU2</a> *, const SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU2, DirichletBoundary1dCPU2, const SmartPtr<ApproximationSpace1d> , number )
void AssembleDirichletRows (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, <a href="DirichletBoundary1dCPU2.html">DirichletBoundary1dCPU2</a> *, const SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; , number )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU2, DirichletBoundary2dCPU2, const SmartPtr<ApproximationSpace2d> )
void AssembleDirichletRows (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, <a href="DirichletBoundary2dCPU2.html">DirichletBoundary2dCPU2</a> *, const SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU2, DirichletBoundary2dCPU2, const SmartPtr<ApproximationSpace2d> , number )
void AssembleDirichletRows (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, <a href="DirichletBoundary2dCPU2.html">DirichletBoundary2dCPU2</a> *, const SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; , number )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU2, DirichletBoundary3dCPU2, const SmartPtr<ApproximationSpace3d> )
void AssembleDirichletRows (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, <a href="DirichletBoundary3dCPU2.html">DirichletBoundary3dCPU2</a> *, const SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU2, DirichletBoundary3dCPU2, const SmartPtr<ApproximationSpace3d> , number )
void AssembleDirichletRows (<a href="MatrixOperatorCPU2.html">MatrixOperatorCPU2</a> *, <a href="DirichletBoundary3dCPU2.html">DirichletBoundary3dCPU2</a> *, const SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; , number )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU3, DirichletBoundary1dCPU3, const SmartPtr<ApproximationSpace1d> )
void AssembleDirichletRows (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, <a href="DirichletBoundary1dCPU3.html">DirichletBoundary1dCPU3</a> *, const SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU3, DirichletBoundary1dCPU3, const SmartPtr<ApproximationSpace1d> , number )
void AssembleDirichletRows (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, <a href="DirichletBoundary1dCPU3.html">DirichletBoundary1dCPU3</a> *, const SmartPtr&lt;<a href="ApproximationSpace1d.html">ApproximationSpace1d</a>&gt; , number )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU3, DirichletBoundary2dCPU3, const SmartPtr<ApproximationSpace2d> )
void AssembleDirichletRows (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, <a href="DirichletBoundary2dCPU3.html">DirichletBoundary2dCPU3</a> *, const SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU3, DirichletBoundary2dCPU3, const SmartPtr<ApproximationSpace2d> , number )
void AssembleDirichletRows (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, <a href="DirichletBoundary2dCPU3.html">DirichletBoundary2dCPU3</a> *, const SmartPtr&lt;<a href="ApproximationSpace2d.html">ApproximationSpace2d</a>&gt; , number )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU3, DirichletBoundary3dCPU3, const SmartPtr<ApproximationSpace3d> )
void AssembleDirichletRows (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, <a href="DirichletBoundary3dCPU3.html">DirichletBoundary3dCPU3</a> *, const SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
AssembleDirichletRows
void
void AssembleDirichletRows (MatrixOperatorCPU3, DirichletBoundary3dCPU3, const SmartPtr<ApproximationSpace3d> , number )
void AssembleDirichletRows (<a href="MatrixOperatorCPU3.html">MatrixOperatorCPU3</a> *, <a href="DirichletBoundary3dCPU3.html">DirichletBoundary3dCPU3</a> *, const SmartPtr&lt;<a href="ApproximationSpace3d.html">ApproximationSpace3d</a>&gt; , number )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
AssignP1GridFunctionOnSubset
bool
bool AssignP1GridFunctionOnSubset (GridFunction1dCPU1, const GridFunction1dCPU1, c_string )
bool AssignP1GridFunctionOnSubset (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, const <a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, c_string )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
AssignP1GridFunctionOnSubset
bool
bool AssignP1GridFunctionOnSubset (GridFunction2dCPU1, const GridFunction2dCPU1, c_string )
bool AssignP1GridFunctionOnSubset (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, const <a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, c_string )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
AssignP1GridFunctionOnSubset
bool
bool AssignP1GridFunctionOnSubset (GridFunction3dCPU1, const GridFunction3dCPU1, c_string )
bool AssignP1GridFunctionOnSubset (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, const <a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, c_string )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
AssignP1GridFunctionOnSubset
bool
bool AssignP1GridFunctionOnSubset (GridFunction1dCPU2, const GridFunction1dCPU2, c_string )
bool AssignP1GridFunctionOnSubset (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, const <a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, c_string )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
AssignP1GridFunctionOnSubset
bool
bool AssignP1GridFunctionOnSubset (GridFunction2dCPU2, const GridFunction2dCPU2, c_string )
bool AssignP1GridFunctionOnSubset (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, const <a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, c_string )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
AssignP1GridFunctionOnSubset
bool
bool AssignP1GridFunctionOnSubset (GridFunction3dCPU2, const GridFunction3dCPU2, c_string )
bool AssignP1GridFunctionOnSubset (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, const <a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, c_string )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
AssignP1GridFunctionOnSubset
bool
bool AssignP1GridFunctionOnSubset (GridFunction1dCPU3, const GridFunction1dCPU3, c_string )
bool AssignP1GridFunctionOnSubset (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, const <a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, c_string )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
AssignP1GridFunctionOnSubset
bool
bool AssignP1GridFunctionOnSubset (GridFunction2dCPU3, const GridFunction2dCPU3, c_string )
bool AssignP1GridFunctionOnSubset (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, const <a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, c_string )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
AssignP1GridFunctionOnSubset
bool
bool AssignP1GridFunctionOnSubset (GridFunction3dCPU3, const GridFunction3dCPU3, c_string )
bool AssignP1GridFunctionOnSubset (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, const <a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, c_string )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
max_function
number
number max_function (GridFunction1dCPU1, c_string , c_string )
number max_function (<a href="GridFunction1dCPU1.html">GridFunction1dCPU1</a> *, c_string , c_string )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
max_function
number
number max_function (GridFunction2dCPU1, c_string , c_string )
number max_function (<a href="GridFunction2dCPU1.html">GridFunction2dCPU1</a> *, c_string , c_string )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
max_function
number
number max_function (GridFunction3dCPU1, c_string , c_string )
number max_function (<a href="GridFunction3dCPU1.html">GridFunction3dCPU1</a> *, c_string , c_string )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
max_function
number
number max_function (GridFunction1dCPU2, c_string , c_string )
number max_function (<a href="GridFunction1dCPU2.html">GridFunction1dCPU2</a> *, c_string , c_string )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
max_function
number
number max_function (GridFunction2dCPU2, c_string , c_string )
number max_function (<a href="GridFunction2dCPU2.html">GridFunction2dCPU2</a> *, c_string , c_string )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
max_function
number
number max_function (GridFunction3dCPU2, c_string , c_string )
number max_function (<a href="GridFunction3dCPU2.html">GridFunction3dCPU2</a> *, c_string , c_string )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
max_function
number
number max_function (GridFunction1dCPU3, c_string , c_string )
number max_function (<a href="GridFunction1dCPU3.html">GridFunction1dCPU3</a> *, c_string , c_string )<br><br>group: <b>ug4/Neuron//Discretization/1d</b>
function
max_function
number
number max_function (GridFunction2dCPU3, c_string , c_string )
number max_function (<a href="GridFunction2dCPU3.html">GridFunction2dCPU3</a> *, c_string , c_string )<br><br>group: <b>ug4/Neuron//Discretization/2d</b>
function
max_function
number
number max_function (GridFunction3dCPU3, c_string , c_string )
number max_function (<a href="GridFunction3dCPU3.html">GridFunction3dCPU3</a> *, c_string , c_string )<br><br>group: <b>ug4/Neuron//Discretization/3d</b>
function
HhFlux
void
void HhFlux (VectorCPU1, const VectorCPU1, const VectorCPU1, const VectorCPU1, const VectorCPU1, const VectorCPU1)
void HhFlux (<a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *, const <a href="VectorCPU1.html">VectorCPU1</a> *)<br><br>group: <b>ug4/Neuron/</b>
function
PluginSaysHello
void
void PluginSaysHello ()
void PluginSaysHello ()<br><br>group: <b>ug4//Sample</b>
function
PluginCrashes
void
void PluginCrashes ()
void PluginCrashes ()<br><br>group: <b>ug4//Sample</b>
function
PluginCrashesFatal
void
void PluginCrashesFatal ()
void PluginCrashesFatal ()<br><br>group: <b>ug4//Sample</b>
function
SGridTest_CreateElements
void
void SGridTest_CreateElements ()
void SGridTest_CreateElements ()<br><br>tooltip: Performs element tests for structured grids<br>group: <b>ug4//Template</b>
function
CorneocyteIndex
integer
integer CorneocyteIndex ()
integer CorneocyteIndex ()<br><br>group: <b>Get subset index for corneocytes</b>
function
LipidIndex
integer
integer LipidIndex ()
integer LipidIndex ()<br><br>group: <b>Get subset index for lipid matrix</b>
function
GetVolume
number
number GetVolume (number , number , number )
number GetVolume (number , number , number )<br><br>group: <b>calculate Volume for given geometrical parameters</b>
function
GetSurface
number
number GetSurface (number , number , number )
number GetSurface (number , number , number )<br><br>group: <b>calculate Surface for given geometrical parameters</b>
function
Voltage
number
number Voltage (number , integer , number )
number Voltage (number , integer , number )<br><br>group: <b>ug4/VoltageGatedChannels/</b>
